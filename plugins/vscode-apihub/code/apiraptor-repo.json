[
  {
    "apiName": "API Arrow",
    "apiProtocol": "REST",
    "apiVersion": "1.25.0",
    "pipelineVersion": "v2",
    "lintValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "ensure-basepath-version",
            "message": "url version should be v1",
            "path": [],
            "severity": 1,
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 1501,
                "character": 25
              }
            }
          },
          {
            "code": "global-security",
            "message": "Global 'security' field is not defined",
            "path": [],
            "severity": 0,
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 1501,
                "character": 25
              }
            }
          },
          {
            "code": "contact-email",
            "message": "Definition must have a contact email",
            "path": [
              "info"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1,
                "character": 5
              },
              "end": {
                "line": 3,
                "character": 19
              }
            }
          },
          {
            "code": "info-contact",
            "message": "Info object should contain `contact` object.",
            "path": [
              "info"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1,
                "character": 5
              },
              "end": {
                "line": 3,
                "character": 19
              }
            }
          },
          {
            "code": "info-description",
            "message": "OpenAPI object info `description` must be present and non-empty string.",
            "path": [
              "info"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1,
                "character": 5
              },
              "end": {
                "line": 3,
                "character": 19
              }
            }
          },
          {
            "code": "server-https",
            "message": "Server objects should support https",
            "path": [
              "servers",
              "1",
              "url"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 7,
                "character": 9
              },
              "end": {
                "line": 7,
                "character": 76
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 20,
                "character": 15
              },
              "end": {
                "line": 21,
                "character": 45
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 21,
                "character": 8
              },
              "end": {
                "line": 21,
                "character": 45
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 26,
                "character": 16
              },
              "end": {
                "line": 34,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 33,
                "character": 14
              },
              "end": {
                "line": 34,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 38,
                "character": 10
              },
              "end": {
                "line": 38,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 10
              },
              "end": {
                "line": 39,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 40,
                "character": 10
              },
              "end": {
                "line": 40,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 41,
                "character": 10
              },
              "end": {
                "line": 41,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 42,
                "character": 10
              },
              "end": {
                "line": 42,
                "character": 49
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 43,
                "character": 10
              },
              "end": {
                "line": 43,
                "character": 59
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 45,
                "character": 15
              },
              "end": {
                "line": 47,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 46,
                "character": 8
              },
              "end": {
                "line": 46,
                "character": 45
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 47,
                "character": 8
              },
              "end": {
                "line": 47,
                "character": 47
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 52,
                "character": 16
              },
              "end": {
                "line": 60,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 59,
                "character": 14
              },
              "end": {
                "line": 60,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 64,
                "character": 10
              },
              "end": {
                "line": 64,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 65,
                "character": 10
              },
              "end": {
                "line": 65,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 66,
                "character": 10
              },
              "end": {
                "line": 66,
                "character": 53
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 68,
                "character": 15
              },
              "end": {
                "line": 73,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 69,
                "character": 8
              },
              "end": {
                "line": 69,
                "character": 45
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 70,
                "character": 8
              },
              "end": {
                "line": 70,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 71,
                "character": 8
              },
              "end": {
                "line": 71,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 72,
                "character": 8
              },
              "end": {
                "line": 72,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 73,
                "character": 8
              },
              "end": {
                "line": 73,
                "character": 57
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 78,
                "character": 16
              },
              "end": {
                "line": 86,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 85,
                "character": 14
              },
              "end": {
                "line": 86,
                "character": 32
              }
            }
          },
          {
            "code": "put-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "put",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 92,
                "character": 16
              },
              "end": {
                "line": 100,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 99,
                "character": 14
              },
              "end": {
                "line": 100,
                "character": 32
              }
            }
          },
          {
            "code": "delete-http-status-codes-resource",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "delete",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 112,
                "character": 16
              },
              "end": {
                "line": 116,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 113,
                "character": 14
              },
              "end": {
                "line": 114,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 115,
                "character": 14
              },
              "end": {
                "line": 116,
                "character": 32
              }
            }
          },
          {
            "code": "post-http-status-codes-collections",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api",
              "post",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 124,
                "character": 16
              },
              "end": {
                "line": 128,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/api",
              "post",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 125,
                "character": 14
              },
              "end": {
                "line": 126,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 127,
                "character": 14
              },
              "end": {
                "line": 128,
                "character": 37
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 140,
                "character": 15
              },
              "end": {
                "line": 145,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 141,
                "character": 8
              },
              "end": {
                "line": 141,
                "character": 45
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 142,
                "character": 8
              },
              "end": {
                "line": 142,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 143,
                "character": 8
              },
              "end": {
                "line": 143,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 144,
                "character": 8
              },
              "end": {
                "line": 144,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 145,
                "character": 8
              },
              "end": {
                "line": 145,
                "character": 57
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 150,
                "character": 16
              },
              "end": {
                "line": 160,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 157,
                "character": 14
              },
              "end": {
                "line": 158,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 159,
                "character": 14
              },
              "end": {
                "line": 160,
                "character": 37
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 164,
                "character": 10
              },
              "end": {
                "line": 164,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 165,
                "character": 10
              },
              "end": {
                "line": 165,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 166,
                "character": 10
              },
              "end": {
                "line": 166,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 167,
                "character": 10
              },
              "end": {
                "line": 167,
                "character": 53
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 168,
                "character": 10
              },
              "end": {
                "line": 168,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 169,
                "character": 10
              },
              "end": {
                "line": 169,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 170,
                "character": 10
              },
              "end": {
                "line": 170,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[7].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "7"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 171,
                "character": 10
              },
              "end": {
                "line": 171,
                "character": 46
              }
            }
          },
          {
            "code": "put-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "put",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 175,
                "character": 16
              },
              "end": {
                "line": 181,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "put",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 176,
                "character": 14
              },
              "end": {
                "line": 177,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 178,
                "character": 14
              },
              "end": {
                "line": 179,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "put",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 180,
                "character": 14
              },
              "end": {
                "line": 181,
                "character": 37
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 192,
                "character": 15
              },
              "end": {
                "line": 204,
                "character": 44
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 193,
                "character": 8
              },
              "end": {
                "line": 193,
                "character": 45
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 194,
                "character": 8
              },
              "end": {
                "line": 194,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 195,
                "character": 8
              },
              "end": {
                "line": 195,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 196,
                "character": 8
              },
              "end": {
                "line": 196,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 197,
                "character": 8
              },
              "end": {
                "line": 197,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 198,
                "character": 8
              },
              "end": {
                "line": 198,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 199,
                "character": 8
              },
              "end": {
                "line": 199,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[7].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "7"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 200,
                "character": 8
              },
              "end": {
                "line": 200,
                "character": 51
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[8].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "8"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 201,
                "character": 8
              },
              "end": {
                "line": 201,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[9].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "9"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 202,
                "character": 8
              },
              "end": {
                "line": 202,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[10].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "10"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 203,
                "character": 8
              },
              "end": {
                "line": 203,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[11].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "11"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 204,
                "character": 8
              },
              "end": {
                "line": 204,
                "character": 44
              }
            }
          },
          {
            "code": "delete-http-status-codes-resource",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "delete",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 208,
                "character": 16
              },
              "end": {
                "line": 214,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 209,
                "character": 14
              },
              "end": {
                "line": 210,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 211,
                "character": 14
              },
              "end": {
                "line": 212,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "delete",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 213,
                "character": 14
              },
              "end": {
                "line": 214,
                "character": 37
              }
            }
          },
          {
            "code": "post-http-status-codes-collections",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/consumers",
              "post",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 222,
                "character": 16
              },
              "end": {
                "line": 228,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/consumers",
              "post",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 14
              },
              "end": {
                "line": 224,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/consumers",
              "post",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 225,
                "character": 14
              },
              "end": {
                "line": 226,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/consumers",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 227,
                "character": 14
              },
              "end": {
                "line": 228,
                "character": 37
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 239,
                "character": 15
              },
              "end": {
                "line": 245,
                "character": 44
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 240,
                "character": 8
              },
              "end": {
                "line": 240,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 241,
                "character": 8
              },
              "end": {
                "line": 241,
                "character": 51
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 242,
                "character": 8
              },
              "end": {
                "line": 242,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 243,
                "character": 8
              },
              "end": {
                "line": 243,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 244,
                "character": 8
              },
              "end": {
                "line": 244,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 245,
                "character": 8
              },
              "end": {
                "line": 245,
                "character": 44
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 248,
                "character": 16
              },
              "end": {
                "line": 256,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 255,
                "character": 14
              },
              "end": {
                "line": 256,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 260,
                "character": 10
              },
              "end": {
                "line": 260,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 261,
                "character": 10
              },
              "end": {
                "line": 261,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 262,
                "character": 10
              },
              "end": {
                "line": 262,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 263,
                "character": 10
              },
              "end": {
                "line": 263,
                "character": 53
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 264,
                "character": 10
              },
              "end": {
                "line": 264,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 265,
                "character": 10
              },
              "end": {
                "line": 265,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 266,
                "character": 10
              },
              "end": {
                "line": 266,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[7].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "7"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 267,
                "character": 10
              },
              "end": {
                "line": 267,
                "character": 46
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 271,
                "character": 15
              },
              "end": {
                "line": 272,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 272,
                "character": 8
              },
              "end": {
                "line": 272,
                "character": 50
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 275,
                "character": 16
              },
              "end": {
                "line": 283,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 282,
                "character": 14
              },
              "end": {
                "line": 283,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 287,
                "character": 10
              },
              "end": {
                "line": 287,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 288,
                "character": 10
              },
              "end": {
                "line": 288,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 289,
                "character": 10
              },
              "end": {
                "line": 289,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 290,
                "character": 10
              },
              "end": {
                "line": 290,
                "character": 53
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 291,
                "character": 10
              },
              "end": {
                "line": 291,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 292,
                "character": 10
              },
              "end": {
                "line": 292,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 293,
                "character": 10
              },
              "end": {
                "line": 293,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[7].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "7"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 294,
                "character": 10
              },
              "end": {
                "line": 294,
                "character": 46
              }
            }
          },
          {
            "code": "nesting-level",
            "message": "You should use max of 3 sub-resource (nesting) levels",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 297,
                "character": 96
              },
              "end": {
                "line": 345,
                "character": 20
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 298,
                "character": 15
              },
              "end": {
                "line": 302,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 299,
                "character": 8
              },
              "end": {
                "line": 299,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 300,
                "character": 8
              },
              "end": {
                "line": 300,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 301,
                "character": 8
              },
              "end": {
                "line": 301,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 302,
                "character": 8
              },
              "end": {
                "line": 302,
                "character": 47
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 305,
                "character": 16
              },
              "end": {
                "line": 313,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 14
              },
              "end": {
                "line": 313,
                "character": 32
              }
            }
          },
          {
            "code": "delete-http-status-codes-resource",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "delete",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 321,
                "character": 16
              },
              "end": {
                "line": 325,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 322,
                "character": 14
              },
              "end": {
                "line": 323,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 324,
                "character": 14
              },
              "end": {
                "line": 325,
                "character": 32
              }
            }
          },
          {
            "code": "put-http-status-codes-resource",
            "message": "Missing the responses[401] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "put",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 332,
                "character": 16
              },
              "end": {
                "line": 336,
                "character": 55
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "put",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 333,
                "character": 14
              },
              "end": {
                "line": 334,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "put",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 335,
                "character": 14
              },
              "end": {
                "line": 336,
                "character": 55
              }
            }
          },
          {
            "code": "nesting-level",
            "message": "You should use max of 3 sub-resource (nesting) levels",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 346,
                "character": 106
              },
              "end": {
                "line": 366,
                "character": 20
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 347,
                "character": 15
              },
              "end": {
                "line": 351,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 348,
                "character": 8
              },
              "end": {
                "line": 348,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 349,
                "character": 8
              },
              "end": {
                "line": 349,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 350,
                "character": 8
              },
              "end": {
                "line": 350,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 351,
                "character": 8
              },
              "end": {
                "line": 351,
                "character": 47
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 354,
                "character": 16
              },
              "end": {
                "line": 362,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 361,
                "character": 14
              },
              "end": {
                "line": 362,
                "character": 32
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 370,
                "character": 16
              },
              "end": {
                "line": 378,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 377,
                "character": 14
              },
              "end": {
                "line": 378,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 382,
                "character": 10
              },
              "end": {
                "line": 382,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 383,
                "character": 10
              },
              "end": {
                "line": 383,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 384,
                "character": 10
              },
              "end": {
                "line": 384,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 385,
                "character": 10
              },
              "end": {
                "line": 385,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 386,
                "character": 10
              },
              "end": {
                "line": 386,
                "character": 58
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 387,
                "character": 10
              },
              "end": {
                "line": 387,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 388,
                "character": 10
              },
              "end": {
                "line": 388,
                "character": 63
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 392,
                "character": 15
              },
              "end": {
                "line": 393,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 393,
                "character": 8
              },
              "end": {
                "line": 393,
                "character": 50
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 396,
                "character": 16
              },
              "end": {
                "line": 404,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 403,
                "character": 14
              },
              "end": {
                "line": 404,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 408,
                "character": 10
              },
              "end": {
                "line": 408,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 409,
                "character": 10
              },
              "end": {
                "line": 409,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 410,
                "character": 10
              },
              "end": {
                "line": 410,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 411,
                "character": 10
              },
              "end": {
                "line": 411,
                "character": 58
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 412,
                "character": 10
              },
              "end": {
                "line": 412,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 413,
                "character": 10
              },
              "end": {
                "line": 413,
                "character": 63
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 417,
                "character": 15
              },
              "end": {
                "line": 418,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 418,
                "character": 8
              },
              "end": {
                "line": 418,
                "character": 50
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 421,
                "character": 16
              },
              "end": {
                "line": 429,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 428,
                "character": 14
              },
              "end": {
                "line": 429,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 433,
                "character": 10
              },
              "end": {
                "line": 433,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 434,
                "character": 10
              },
              "end": {
                "line": 434,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 435,
                "character": 10
              },
              "end": {
                "line": 435,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 436,
                "character": 10
              },
              "end": {
                "line": 436,
                "character": 58
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 437,
                "character": 10
              },
              "end": {
                "line": 437,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 438,
                "character": 10
              },
              "end": {
                "line": 438,
                "character": 63
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 442,
                "character": 15
              },
              "end": {
                "line": 443,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 443,
                "character": 8
              },
              "end": {
                "line": 443,
                "character": 50
              }
            }
          },
          {
            "code": "delete-http-status-codes-resource",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 447,
                "character": 16
              },
              "end": {
                "line": 453,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 448,
                "character": 14
              },
              "end": {
                "line": 449,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 450,
                "character": 14
              },
              "end": {
                "line": 451,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [501].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses",
              "501"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 452,
                "character": 14
              },
              "end": {
                "line": 453,
                "character": 32
              }
            }
          },
          {
            "code": "well-understood-http-status-codes",
            "message": "501 is not a well-understood HTTP status code",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses",
              "501"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 452,
                "character": 14
              },
              "end": {
                "line": 453,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 456,
                "character": 10
              },
              "end": {
                "line": 456,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 457,
                "character": 10
              },
              "end": {
                "line": 457,
                "character": 58
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 458,
                "character": 10
              },
              "end": {
                "line": 458,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 459,
                "character": 10
              },
              "end": {
                "line": 459,
                "character": 63
              }
            }
          },
          {
            "code": "nesting-level",
            "message": "You should use max of 3 sub-resource (nesting) levels",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 462,
                "character": 106
              },
              "end": {
                "line": 485,
                "character": 20
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 463,
                "character": 15
              },
              "end": {
                "line": 467,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 464,
                "character": 8
              },
              "end": {
                "line": 464,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 465,
                "character": 8
              },
              "end": {
                "line": 465,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 466,
                "character": 8
              },
              "end": {
                "line": 466,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 467,
                "character": 8
              },
              "end": {
                "line": 467,
                "character": 47
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 470,
                "character": 16
              },
              "end": {
                "line": 478,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 477,
                "character": 14
              },
              "end": {
                "line": 478,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 482,
                "character": 10
              },
              "end": {
                "line": 482,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 483,
                "character": 10
              },
              "end": {
                "line": 483,
                "character": 47
              }
            }
          },
          {
            "code": "nesting-level",
            "message": "You should use max of 3 sub-resource (nesting) levels",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 486,
                "character": 112
              },
              "end": {
                "line": 509,
                "character": 20
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 487,
                "character": 15
              },
              "end": {
                "line": 491,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 488,
                "character": 8
              },
              "end": {
                "line": 488,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 489,
                "character": 8
              },
              "end": {
                "line": 489,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 490,
                "character": 8
              },
              "end": {
                "line": 490,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 491,
                "character": 8
              },
              "end": {
                "line": 491,
                "character": 47
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 494,
                "character": 16
              },
              "end": {
                "line": 502,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 501,
                "character": 14
              },
              "end": {
                "line": 502,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 506,
                "character": 10
              },
              "end": {
                "line": 506,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 507,
                "character": 10
              },
              "end": {
                "line": 507,
                "character": 47
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 511,
                "character": 15
              },
              "end": {
                "line": 512,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 512,
                "character": 8
              },
              "end": {
                "line": 512,
                "character": 50
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 515,
                "character": 16
              },
              "end": {
                "line": 523,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 522,
                "character": 14
              },
              "end": {
                "line": 523,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 527,
                "character": 10
              },
              "end": {
                "line": 527,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 528,
                "character": 10
              },
              "end": {
                "line": 528,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 529,
                "character": 10
              },
              "end": {
                "line": 529,
                "character": 58
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 530,
                "character": 10
              },
              "end": {
                "line": 530,
                "character": 53
              }
            }
          },
          {
            "code": "nesting-level",
            "message": "You should use max of 3 sub-resource (nesting) levels",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 533,
                "character": 123
              },
              "end": {
                "line": 596,
                "character": 23
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 534,
                "character": 15
              },
              "end": {
                "line": 539,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 535,
                "character": 8
              },
              "end": {
                "line": 535,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 536,
                "character": 8
              },
              "end": {
                "line": 536,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 537,
                "character": 8
              },
              "end": {
                "line": 537,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 538,
                "character": 8
              },
              "end": {
                "line": 538,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 539,
                "character": 8
              },
              "end": {
                "line": 539,
                "character": 48
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 542,
                "character": 16
              },
              "end": {
                "line": 550,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 549,
                "character": 14
              },
              "end": {
                "line": 550,
                "character": 32
              }
            }
          },
          {
            "code": "delete-http-status-codes-resource",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "delete",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 558,
                "character": 16
              },
              "end": {
                "line": 562,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 559,
                "character": 14
              },
              "end": {
                "line": 560,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 561,
                "character": 14
              },
              "end": {
                "line": 562,
                "character": 32
              }
            }
          },
          {
            "code": "put-http-status-codes-resource",
            "message": "Missing the responses[401] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 569,
                "character": 16
              },
              "end": {
                "line": 587,
                "character": 101
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 582,
                "character": 14
              },
              "end": {
                "line": 583,
                "character": 55
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 584,
                "character": 14
              },
              "end": {
                "line": 585,
                "character": 57
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [409].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses",
              "409"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 14
              },
              "end": {
                "line": 587,
                "character": 101
              }
            }
          },
          {
            "code": "well-understood-http-status-codes",
            "message": "409 is not a well-understood HTTP status code for PUT",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses",
              "409"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 14
              },
              "end": {
                "line": 587,
                "character": 101
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 600,
                "character": 16
              },
              "end": {
                "line": 608,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 607,
                "character": 14
              },
              "end": {
                "line": 608,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 612,
                "character": 10
              },
              "end": {
                "line": 612,
                "character": 64
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 613,
                "character": 10
              },
              "end": {
                "line": 613,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 614,
                "character": 10
              },
              "end": {
                "line": 614,
                "character": 53
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 615,
                "character": 10
              },
              "end": {
                "line": 615,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 616,
                "character": 10
              },
              "end": {
                "line": 616,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 617,
                "character": 10
              },
              "end": {
                "line": 617,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 618,
                "character": 10
              },
              "end": {
                "line": 618,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[7].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "7"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 619,
                "character": 10
              },
              "end": {
                "line": 619,
                "character": 47
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 623,
                "character": 15
              },
              "end": {
                "line": 624,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 624,
                "character": 8
              },
              "end": {
                "line": 624,
                "character": 52
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 627,
                "character": 16
              },
              "end": {
                "line": 635,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 634,
                "character": 14
              },
              "end": {
                "line": 635,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 639,
                "character": 10
              },
              "end": {
                "line": 639,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 640,
                "character": 10
              },
              "end": {
                "line": 640,
                "character": 53
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 641,
                "character": 10
              },
              "end": {
                "line": 641,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 642,
                "character": 10
              },
              "end": {
                "line": 642,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 643,
                "character": 10
              },
              "end": {
                "line": 643,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 644,
                "character": 10
              },
              "end": {
                "line": 644,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 645,
                "character": 10
              },
              "end": {
                "line": 645,
                "character": 47
              }
            }
          },
          {
            "code": "delete-http-status-codes-resource",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 651,
                "character": 16
              },
              "end": {
                "line": 655,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 652,
                "character": 14
              },
              "end": {
                "line": 653,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 654,
                "character": 14
              },
              "end": {
                "line": 655,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 658,
                "character": 10
              },
              "end": {
                "line": 658,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 659,
                "character": 10
              },
              "end": {
                "line": 659,
                "character": 53
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 660,
                "character": 10
              },
              "end": {
                "line": 660,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 661,
                "character": 10
              },
              "end": {
                "line": 661,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 662,
                "character": 10
              },
              "end": {
                "line": 662,
                "character": 57
              }
            }
          },
          {
            "code": "nesting-level",
            "message": "You should use max of 3 sub-resource (nesting) levels",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 665,
                "character": 137
              },
              "end": {
                "line": 703,
                "character": 23
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 666,
                "character": 15
              },
              "end": {
                "line": 671,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 667,
                "character": 8
              },
              "end": {
                "line": 667,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 668,
                "character": 8
              },
              "end": {
                "line": 668,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 669,
                "character": 8
              },
              "end": {
                "line": 669,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 670,
                "character": 8
              },
              "end": {
                "line": 670,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 671,
                "character": 8
              },
              "end": {
                "line": 671,
                "character": 48
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 674,
                "character": 16
              },
              "end": {
                "line": 682,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 681,
                "character": 14
              },
              "end": {
                "line": 682,
                "character": 32
              }
            }
          },
          {
            "code": "put-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "put",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 690,
                "character": 16
              },
              "end": {
                "line": 694,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "put",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 691,
                "character": 14
              },
              "end": {
                "line": 692,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 693,
                "character": 14
              },
              "end": {
                "line": 694,
                "character": 81
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`PagedDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 706,
                "character": 13
              },
              "end": {
                "line": 718,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "offset doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 709,
                "character": 15
              },
              "end": {
                "line": 711,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`offset.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 709,
                "character": 15
              },
              "end": {
                "line": 711,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`offset.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 709,
                "character": 15
              },
              "end": {
                "line": 711,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "limit doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 712,
                "character": 14
              },
              "end": {
                "line": 714,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`limit.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 712,
                "character": 14
              },
              "end": {
                "line": 714,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`limit.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 712,
                "character": 14
              },
              "end": {
                "line": 714,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "totalElements doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 715,
                "character": 22
              },
              "end": {
                "line": 717,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`totalElements.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 715,
                "character": 22
              },
              "end": {
                "line": 717,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`totalElements.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 715,
                "character": 22
              },
              "end": {
                "line": 717,
                "character": 23
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiSpecificationDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 719,
                "character": 24
              },
              "end": {
                "line": 763,
                "character": 18
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "providerKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 725,
                "character": 20
              },
              "end": {
                "line": 727,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 725,
                "character": 20
              },
              "end": {
                "line": 727,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 725,
                "character": 20
              },
              "end": {
                "line": 727,
                "character": 74
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 728,
                "character": 16
              },
              "end": {
                "line": 731,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 728,
                "character": 16
              },
              "end": {
                "line": 731,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 728,
                "character": 16
              },
              "end": {
                "line": 731,
                "character": 31
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "protocol doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "protocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 732,
                "character": 17
              },
              "end": {
                "line": 734,
                "character": 34
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property deprecated does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "deprecated"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 735,
                "character": 19
              },
              "end": {
                "line": 738,
                "character": 24
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "deprecated doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "deprecated"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 735,
                "character": 19
              },
              "end": {
                "line": 738,
                "character": 24
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property snapshot does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "snapshot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 739,
                "character": 17
              },
              "end": {
                "line": 742,
                "character": 24
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "snapshot doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "snapshot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 739,
                "character": 17
              },
              "end": {
                "line": 742,
                "character": 24
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "previousVersion doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "previousVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 743,
                "character": 24
              },
              "end": {
                "line": 745,
                "character": 56
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`previousVersion.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "previousVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 743,
                "character": 24
              },
              "end": {
                "line": 745,
                "character": 56
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`previousVersion.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "previousVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 743,
                "character": 24
              },
              "end": {
                "line": 745,
                "character": 56
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "changes"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 746,
                "character": 16
              },
              "end": {
                "line": 749,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "consumers"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 750,
                "character": 18
              },
              "end": {
                "line": 753,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 754,
                "character": 16
              },
              "end": {
                "line": 756,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 754,
                "character": 16
              },
              "end": {
                "line": 756,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 754,
                "character": 16
              },
              "end": {
                "line": 756,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "normalizedApiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 757,
                "character": 26
              },
              "end": {
                "line": 759,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 757,
                "character": 26
              },
              "end": {
                "line": 759,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 757,
                "character": 26
              },
              "end": {
                "line": 759,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIVersionDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 764,
                "character": 18
              },
              "end": {
                "line": 787,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 771,
                "character": 16
              },
              "end": {
                "line": 773,
                "character": 46
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 771,
                "character": 16
              },
              "end": {
                "line": 773,
                "character": 46
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 771,
                "character": 16
              },
              "end": {
                "line": 773,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "releaseDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "releaseDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 774,
                "character": 20
              },
              "end": {
                "line": 777,
                "character": 63
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "isRelease doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "isRelease"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 778,
                "character": 18
              },
              "end": {
                "line": 781,
                "character": 82
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "lifecycleVersion doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "lifecycleVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 782,
                "character": 25
              },
              "end": {
                "line": 783,
                "character": 55
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionFullDataDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 793,
                "character": 10
              },
              "end": {
                "line": 798,
                "character": 60
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIVersionID.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 799,
                "character": 17
              },
              "end": {
                "line": 825,
                "character": 17
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "projectKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 804,
                "character": 19
              },
              "end": {
                "line": 807,
                "character": 36
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 804,
                "character": 19
              },
              "end": {
                "line": 807,
                "character": 36
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 804,
                "character": 19
              },
              "end": {
                "line": 807,
                "character": 36
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "normalizedApiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 808,
                "character": 26
              },
              "end": {
                "line": 811,
                "character": 44
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 808,
                "character": 26
              },
              "end": {
                "line": 811,
                "character": 44
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 808,
                "character": 26
              },
              "end": {
                "line": 811,
                "character": 44
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "protocol doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "protocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 812,
                "character": 17
              },
              "end": {
                "line": 816,
                "character": 87
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 817,
                "character": 16
              },
              "end": {
                "line": 820,
                "character": 36
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 817,
                "character": 16
              },
              "end": {
                "line": 820,
                "character": 36
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 817,
                "character": 16
              },
              "end": {
                "line": 820,
                "character": 36
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "RelatedAPIVersionList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 826,
                "character": 26
              },
              "end": {
                "line": 829,
                "character": 49
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIVersionList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 830,
                "character": 19
              },
              "end": {
                "line": 833,
                "character": 60
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`DeploymentRelatedApiDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 834,
                "character": 28
              },
              "end": {
                "line": 851,
                "character": 12
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 841,
                "character": 16
              },
              "end": {
                "line": 843,
                "character": 46
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 841,
                "character": 16
              },
              "end": {
                "line": 843,
                "character": 46
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 841,
                "character": 16
              },
              "end": {
                "line": 843,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "isRelease doesn't have an example",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO",
              "properties",
              "isRelease"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 844,
                "character": 18
              },
              "end": {
                "line": 847,
                "character": 82
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "lifecycleVersion doesn't have an example",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO",
              "properties",
              "lifecycleVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 848,
                "character": 25
              },
              "end": {
                "line": 849,
                "character": 55
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIDeploymentList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 852,
                "character": 22
              },
              "end": {
                "line": 855,
                "character": 52
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIDeploymentID.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 856,
                "character": 20
              },
              "end": {
                "line": 878,
                "character": 60
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "artifactName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "artifactName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 861,
                "character": 21
              },
              "end": {
                "line": 863,
                "character": 39
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`artifactName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "artifactName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 861,
                "character": 21
              },
              "end": {
                "line": 863,
                "character": 39
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`artifactName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "artifactName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 861,
                "character": 21
              },
              "end": {
                "line": 863,
                "character": 39
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "platform doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 864,
                "character": 17
              },
              "end": {
                "line": 867,
                "character": 785
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "tenant doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "tenant"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 868,
                "character": 15
              },
              "end": {
                "line": 871,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "slot doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 872,
                "character": 13
              },
              "end": {
                "line": 874,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`slot.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 872,
                "character": 13
              },
              "end": {
                "line": 874,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`slot.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 872,
                "character": 13
              },
              "end": {
                "line": 874,
                "character": 65
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "environment doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "environment"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 875,
                "character": 20
              },
              "end": {
                "line": 878,
                "character": 60
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIDeploymentDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 879,
                "character": 21
              },
              "end": {
                "line": 902,
                "character": 70
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "projectKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 886,
                "character": 19
              },
              "end": {
                "line": 888,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 886,
                "character": 19
              },
              "end": {
                "line": 888,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 886,
                "character": 19
              },
              "end": {
                "line": 888,
                "character": 49
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 889,
                "character": 16
              },
              "end": {
                "line": 891,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 889,
                "character": 16
              },
              "end": {
                "line": 891,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 889,
                "character": 16
              },
              "end": {
                "line": 891,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "deploymentUrl doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 896,
                "character": 22
              },
              "end": {
                "line": 898,
                "character": 52
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`deploymentUrl.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 896,
                "character": 22
              },
              "end": {
                "line": 898,
                "character": 52
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`deploymentUrl.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 896,
                "character": 22
              },
              "end": {
                "line": 898,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "releaseDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "releaseDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 899,
                "character": 20
              },
              "end": {
                "line": 902,
                "character": 70
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIDeploymentUpdateDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 903,
                "character": 27
              },
              "end": {
                "line": 926,
                "character": 70
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "projectKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 910,
                "character": 19
              },
              "end": {
                "line": 912,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 910,
                "character": 19
              },
              "end": {
                "line": 912,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 910,
                "character": 19
              },
              "end": {
                "line": 912,
                "character": 49
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 913,
                "character": 16
              },
              "end": {
                "line": 915,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 913,
                "character": 16
              },
              "end": {
                "line": 915,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 913,
                "character": 16
              },
              "end": {
                "line": 915,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "deploymentUrl doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 920,
                "character": 22
              },
              "end": {
                "line": 922,
                "character": 52
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`deploymentUrl.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 920,
                "character": 22
              },
              "end": {
                "line": 922,
                "character": 52
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`deploymentUrl.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 920,
                "character": 22
              },
              "end": {
                "line": 922,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "releaseDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "releaseDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 923,
                "character": 20
              },
              "end": {
                "line": 926,
                "character": 70
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiDeploymentUpdateResultDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiDeploymentUpdateResultDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 927,
                "character": 33
              },
              "end": {
                "line": 939,
                "character": 60
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "result doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiDeploymentUpdateResultDTO",
              "properties",
              "result"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 932,
                "character": 15
              },
              "end": {
                "line": 935,
                "character": 28
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiConsumerDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 940,
                "character": 19
              },
              "end": {
                "line": 999,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "consumerId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 945,
                "character": 19
              },
              "end": {
                "line": 947,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`consumerId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 945,
                "character": 19
              },
              "end": {
                "line": 947,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`consumerId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 945,
                "character": 19
              },
              "end": {
                "line": 947,
                "character": 69
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "providerKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 948,
                "character": 20
              },
              "end": {
                "line": 950,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 948,
                "character": 20
              },
              "end": {
                "line": 950,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 948,
                "character": 20
              },
              "end": {
                "line": 950,
                "character": 74
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "APIVersionID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 951,
                "character": 21
              },
              "end": {
                "line": 952,
                "character": 51
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 953,
                "character": 16
              },
              "end": {
                "line": 956,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 953,
                "character": 16
              },
              "end": {
                "line": 956,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 953,
                "character": 16
              },
              "end": {
                "line": 956,
                "character": 31
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "protocol doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "protocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 957,
                "character": 17
              },
              "end": {
                "line": 959,
                "character": 64
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "environment doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "environment"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 960,
                "character": 20
              },
              "end": {
                "line": 963,
                "character": 60
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "vertical doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "vertical"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 964,
                "character": 17
              },
              "end": {
                "line": 967,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "platform doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 968,
                "character": 17
              },
              "end": {
                "line": 970,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`platform.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 968,
                "character": 17
              },
              "end": {
                "line": 970,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`platform.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 968,
                "character": 17
              },
              "end": {
                "line": 970,
                "character": 69
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "tenant doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "tenant"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 971,
                "character": 15
              },
              "end": {
                "line": 974,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "slot doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 975,
                "character": 13
              },
              "end": {
                "line": 977,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`slot.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 975,
                "character": 13
              },
              "end": {
                "line": 977,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`slot.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 975,
                "character": 13
              },
              "end": {
                "line": 977,
                "character": 65
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "dependencies"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 978,
                "character": 21
              },
              "end": {
                "line": 982,
                "character": 225
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 983,
                "character": 16
              },
              "end": {
                "line": 985,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 983,
                "character": 16
              },
              "end": {
                "line": 985,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 983,
                "character": 16
              },
              "end": {
                "line": 985,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "normalizedApiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 986,
                "character": 26
              },
              "end": {
                "line": 988,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 986,
                "character": 26
              },
              "end": {
                "line": 988,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 986,
                "character": 26
              },
              "end": {
                "line": 988,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "projectKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 989,
                "character": 19
              },
              "end": {
                "line": 991,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 989,
                "character": 19
              },
              "end": {
                "line": 991,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 989,
                "character": 19
              },
              "end": {
                "line": 991,
                "character": 74
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ConsumerDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1000,
                "character": 16
              },
              "end": {
                "line": 1042,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "consumerId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1005,
                "character": 19
              },
              "end": {
                "line": 1007,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`consumerId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1005,
                "character": 19
              },
              "end": {
                "line": 1007,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`consumerId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1005,
                "character": 19
              },
              "end": {
                "line": 1007,
                "character": 69
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1008,
                "character": 16
              },
              "end": {
                "line": 1010,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1008,
                "character": 16
              },
              "end": {
                "line": 1010,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1008,
                "character": 16
              },
              "end": {
                "line": 1010,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "environment doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "environment"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1011,
                "character": 20
              },
              "end": {
                "line": 1014,
                "character": 67
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "vertical doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "vertical"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1015,
                "character": 17
              },
              "end": {
                "line": 1018,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "platform doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1019,
                "character": 17
              },
              "end": {
                "line": 1021,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`platform.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1019,
                "character": 17
              },
              "end": {
                "line": 1021,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`platform.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1019,
                "character": 17
              },
              "end": {
                "line": 1021,
                "character": 69
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "tenant doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "tenant"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1022,
                "character": 15
              },
              "end": {
                "line": 1025,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "slot doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1026,
                "character": 13
              },
              "end": {
                "line": 1028,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`slot.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1026,
                "character": 13
              },
              "end": {
                "line": 1028,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`slot.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1026,
                "character": 13
              },
              "end": {
                "line": 1028,
                "character": 65
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "apiDependencies"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1029,
                "character": 24
              },
              "end": {
                "line": 1033,
                "character": 42
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "projectKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1034,
                "character": 19
              },
              "end": {
                "line": 1036,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1034,
                "character": 19
              },
              "end": {
                "line": 1036,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1034,
                "character": 19
              },
              "end": {
                "line": 1036,
                "character": 74
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiChangeDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1043,
                "character": 17
              },
              "end": {
                "line": 1063,
                "character": 27
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "itemName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1048,
                "character": 17
              },
              "end": {
                "line": 1050,
                "character": 64
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`itemName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1048,
                "character": 17
              },
              "end": {
                "line": 1050,
                "character": 64
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`itemName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1048,
                "character": 17
              },
              "end": {
                "line": 1050,
                "character": 64
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "changeType doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1051,
                "character": 19
              },
              "end": {
                "line": 1053,
                "character": 67
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`changeType.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1051,
                "character": 19
              },
              "end": {
                "line": 1053,
                "character": 67
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`changeType.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1051,
                "character": 19
              },
              "end": {
                "line": 1053,
                "character": 67
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "isBreaking doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "isBreaking"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1054,
                "character": 19
              },
              "end": {
                "line": 1056,
                "character": 76
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "changeDescription doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1057,
                "character": 26
              },
              "end": {
                "line": 1059,
                "character": 43
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`changeDescription.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1057,
                "character": 26
              },
              "end": {
                "line": 1059,
                "character": 43
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`changeDescription.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1057,
                "character": 26
              },
              "end": {
                "line": 1059,
                "character": 43
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiDependencyDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1064,
                "character": 21
              },
              "end": {
                "line": 1094,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "providerKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1069,
                "character": 20
              },
              "end": {
                "line": 1071,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1069,
                "character": 20
              },
              "end": {
                "line": 1071,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1069,
                "character": 20
              },
              "end": {
                "line": 1071,
                "character": 74
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1072,
                "character": 16
              },
              "end": {
                "line": 1074,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1072,
                "character": 16
              },
              "end": {
                "line": 1074,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1072,
                "character": 16
              },
              "end": {
                "line": 1074,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "normalizedApiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1075,
                "character": 26
              },
              "end": {
                "line": 1077,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1075,
                "character": 26
              },
              "end": {
                "line": 1077,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1075,
                "character": 26
              },
              "end": {
                "line": 1077,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1078,
                "character": 16
              },
              "end": {
                "line": 1080,
                "character": 42
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1078,
                "character": 16
              },
              "end": {
                "line": 1080,
                "character": 42
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1078,
                "character": 16
              },
              "end": {
                "line": 1080,
                "character": 42
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "protocol doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "protocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1081,
                "character": 17
              },
              "end": {
                "line": 1084,
                "character": 64
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "dependencies"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1085,
                "character": 21
              },
              "end": {
                "line": 1089,
                "character": 225
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiUsageDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1095,
                "character": 16
              },
              "end": {
                "line": 1107,
                "character": 18
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "itemName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1100,
                "character": 17
              },
              "end": {
                "line": 1102,
                "character": 60
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`itemName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1100,
                "character": 17
              },
              "end": {
                "line": 1102,
                "character": 60
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`itemName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1100,
                "character": 17
              },
              "end": {
                "line": 1102,
                "character": 60
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "usageDescription doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "usageDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1103,
                "character": 25
              },
              "end": {
                "line": 1105,
                "character": 126
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`usageDescription.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "usageDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1103,
                "character": 25
              },
              "end": {
                "line": 1105,
                "character": 126
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`usageDescription.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "usageDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1103,
                "character": 25
              },
              "end": {
                "line": 1105,
                "character": 126
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIGraphNode.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIGraphNode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1108,
                "character": 17
              },
              "end": {
                "line": 1137,
                "character": 18
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property snapshot does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "snapshot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1115,
                "character": 17
              },
              "end": {
                "line": 1118,
                "character": 24
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "snapshot doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "snapshot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1115,
                "character": 17
              },
              "end": {
                "line": 1118,
                "character": 24
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "changes"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1121,
                "character": 16
              },
              "end": {
                "line": 1124,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "consumers"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1125,
                "character": 18
              },
              "end": {
                "line": 1128,
                "character": 57
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "deployments"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1129,
                "character": 20
              },
              "end": {
                "line": 1132,
                "character": 57
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIDependencyGraphNodeListDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1138,
                "character": 34
              },
              "end": {
                "line": 1142,
                "character": 77
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiSpecificationGraphsDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphsDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1143,
                "character": 30
              },
              "end": {
                "line": 1161,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "providerKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphsDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1149,
                "character": 20
              },
              "end": {
                "line": 1151,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphsDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1149,
                "character": 20
              },
              "end": {
                "line": 1151,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphsDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1149,
                "character": 20
              },
              "end": {
                "line": 1151,
                "character": 74
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiSpecificationGraphNodeDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1162,
                "character": 33
              },
              "end": {
                "line": 1199,
                "character": 18
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "providerKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1168,
                "character": 20
              },
              "end": {
                "line": 1170,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1168,
                "character": 20
              },
              "end": {
                "line": 1170,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1168,
                "character": 20
              },
              "end": {
                "line": 1170,
                "character": 74
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1171,
                "character": 16
              },
              "end": {
                "line": 1174,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1171,
                "character": 16
              },
              "end": {
                "line": 1174,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1171,
                "character": 16
              },
              "end": {
                "line": 1174,
                "character": 31
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "protocol doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "protocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1175,
                "character": 17
              },
              "end": {
                "line": 1178,
                "character": 60
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property deprecated does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "deprecated"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1179,
                "character": 19
              },
              "end": {
                "line": 1181,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "deprecated doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "deprecated"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1179,
                "character": 19
              },
              "end": {
                "line": 1181,
                "character": 23
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property snapshot does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "snapshot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1182,
                "character": 17
              },
              "end": {
                "line": 1185,
                "character": 24
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "snapshot doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "snapshot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1182,
                "character": 17
              },
              "end": {
                "line": 1185,
                "character": 24
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "changes"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1188,
                "character": 16
              },
              "end": {
                "line": 1191,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "consumers"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1192,
                "character": 18
              },
              "end": {
                "line": 1195,
                "character": 55
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1203,
                "character": 10
              },
              "end": {
                "line": 1208,
                "character": 64
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1205,
                "character": 20
              },
              "end": {
                "line": 1208,
                "character": 64
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiConsumerPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1213,
                "character": 10
              },
              "end": {
                "line": 1218,
                "character": 59
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiConsumerPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1215,
                "character": 20
              },
              "end": {
                "line": 1218,
                "character": 59
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1223,
                "character": 10
              },
              "end": {
                "line": 1228,
                "character": 58
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIVersionPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1225,
                "character": 20
              },
              "end": {
                "line": 1228,
                "character": 58
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionFullDataPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1233,
                "character": 10
              },
              "end": {
                "line": 1238,
                "character": 66
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIVersionFullDataPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1235,
                "character": 20
              },
              "end": {
                "line": 1238,
                "character": 66
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1243,
                "character": 10
              },
              "end": {
                "line": 1248,
                "character": 61
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIDeploymentPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1245,
                "character": 20
              },
              "end": {
                "line": 1248,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`apiName.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1256,
                "character": 12
              },
              "end": {
                "line": 1262,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1261,
                "character": 13
              },
              "end": {
                "line": 1262,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1261,
                "character": 13
              },
              "end": {
                "line": 1262,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`normalizedApiName.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1263,
                "character": 22
              },
              "end": {
                "line": 1269,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "normalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1268,
                "character": 13
              },
              "end": {
                "line": 1269,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "normalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1268,
                "character": 13
              },
              "end": {
                "line": 1269,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`consumerVersion.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1270,
                "character": 20
              },
              "end": {
                "line": 1276,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1275,
                "character": 13
              },
              "end": {
                "line": 1276,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1275,
                "character": 13
              },
              "end": {
                "line": 1276,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`offset.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1277,
                "character": 11
              },
              "end": {
                "line": 1287,
                "character": 18
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "offset",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1283,
                "character": 13
              },
              "end": {
                "line": 1287,
                "character": 18
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`limit.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1288,
                "character": 10
              },
              "end": {
                "line": 1299,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`environment.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "environment"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1300,
                "character": 16
              },
              "end": {
                "line": 1308,
                "character": 65
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`pathEnvironment.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathEnvironment"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1309,
                "character": 20
              },
              "end": {
                "line": 1317,
                "character": 65
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`vertical.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "vertical"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1318,
                "character": 13
              },
              "end": {
                "line": 1326,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`platform.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1327,
                "character": 13
              },
              "end": {
                "line": 1335,
                "character": 783
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`pathPlatform.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathPlatform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1336,
                "character": 17
              },
              "end": {
                "line": 1344,
                "character": 783
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`tenant.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "tenant"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1345,
                "character": 11
              },
              "end": {
                "line": 1353,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`pathTenant.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathTenant"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1354,
                "character": 15
              },
              "end": {
                "line": 1362,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`slot.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1363,
                "character": 9
              },
              "end": {
                "line": 1370,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "slot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1369,
                "character": 13
              },
              "end": {
                "line": 1370,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "slot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1369,
                "character": 13
              },
              "end": {
                "line": 1370,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`pathSlot.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathSlot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1371,
                "character": 13
              },
              "end": {
                "line": 1378,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathSlot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1377,
                "character": 13
              },
              "end": {
                "line": 1378,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathSlot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1377,
                "character": 13
              },
              "end": {
                "line": 1378,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`consumerId.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1379,
                "character": 15
              },
              "end": {
                "line": 1385,
                "character": 38
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1383,
                "character": 13
              },
              "end": {
                "line": 1384,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1383,
                "character": 13
              },
              "end": {
                "line": 1384,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`queryVersion.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1386,
                "character": 17
              },
              "end": {
                "line": 1391,
                "character": 57
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1387,
                "character": 13
              },
              "end": {
                "line": 1388,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1387,
                "character": 13
              },
              "end": {
                "line": 1388,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`queryProtocol.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProtocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1392,
                "character": 18
              },
              "end": {
                "line": 1397,
                "character": 91
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProtocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1393,
                "character": 13
              },
              "end": {
                "line": 1394,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProtocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1393,
                "character": 13
              },
              "end": {
                "line": 1394,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`maxApiNodes.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "maxApiNodes"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1398,
                "character": 16
              },
              "end": {
                "line": 1404,
                "character": 84
              }
            }
          },
          {
            "code": "numeric-required-properties-format",
            "message": "`schema.format` property should be defined",
            "path": [
              "components",
              "parameters",
              "maxApiNodes",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1399,
                "character": 13
              },
              "end": {
                "line": 1401,
                "character": 19
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "maxApiNodes",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1399,
                "character": 13
              },
              "end": {
                "line": 1401,
                "character": 19
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "components",
              "parameters",
              "maxApiNodes",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1399,
                "character": 13
              },
              "end": {
                "line": 1401,
                "character": 19
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`apiId.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1405,
                "character": 10
              },
              "end": {
                "line": 1411,
                "character": 33
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1409,
                "character": 13
              },
              "end": {
                "line": 1410,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1409,
                "character": 13
              },
              "end": {
                "line": 1410,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`artifactName.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1412,
                "character": 17
              },
              "end": {
                "line": 1418,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1417,
                "character": 13
              },
              "end": {
                "line": 1418,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1417,
                "character": 13
              },
              "end": {
                "line": 1418,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`queryArtifactName.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1419,
                "character": 22
              },
              "end": {
                "line": 1425,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1424,
                "character": 13
              },
              "end": {
                "line": 1425,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1424,
                "character": 13
              },
              "end": {
                "line": 1425,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`queryArtifactNameArray.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactNameArray"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1426,
                "character": 27
              },
              "end": {
                "line": 1435,
                "character": 19
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "parameters",
              "queryArtifactNameArray",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1431,
                "character": 13
              },
              "end": {
                "line": 1435,
                "character": 19
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactNameArray",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1433,
                "character": 14
              },
              "end": {
                "line": 1434,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactNameArray",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1433,
                "character": 14
              },
              "end": {
                "line": 1434,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`projectKey.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1436,
                "character": 15
              },
              "end": {
                "line": 1442,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "projectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1441,
                "character": 13
              },
              "end": {
                "line": 1442,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "projectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1441,
                "character": 13
              },
              "end": {
                "line": 1442,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`queryProjectKey.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProjectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1443,
                "character": 20
              },
              "end": {
                "line": 1449,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProjectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1448,
                "character": 13
              },
              "end": {
                "line": 1449,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProjectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1448,
                "character": 13
              },
              "end": {
                "line": 1449,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`pathNormalizedApiName.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathNormalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1450,
                "character": 26
              },
              "end": {
                "line": 1456,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathNormalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1455,
                "character": 13
              },
              "end": {
                "line": 1456,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathNormalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1455,
                "character": 13
              },
              "end": {
                "line": 1456,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`version.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1457,
                "character": 12
              },
              "end": {
                "line": 1463,
                "character": 30
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "version",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1461,
                "character": 13
              },
              "end": {
                "line": 1462,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "version",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1461,
                "character": 13
              },
              "end": {
                "line": 1462,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`protocol.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "protocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1464,
                "character": 13
              },
              "end": {
                "line": 1470,
                "character": 54
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "protocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1468,
                "character": 13
              },
              "end": {
                "line": 1469,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "protocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1468,
                "character": 13
              },
              "end": {
                "line": 1469,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`artifactVersion.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1471,
                "character": 20
              },
              "end": {
                "line": 1476,
                "character": 51
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1472,
                "character": 13
              },
              "end": {
                "line": 1473,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1472,
                "character": 13
              },
              "end": {
                "line": 1473,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`pathApiProtocol.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathApiProtocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1477,
                "character": 20
              },
              "end": {
                "line": 1484,
                "character": 69
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`queryApiProtocol.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryApiProtocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1485,
                "character": 21
              },
              "end": {
                "line": 1492,
                "character": 62
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`queryLifecycleVersion.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryLifecycleVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1493,
                "character": 26
              },
              "end": {
                "line": 1501,
                "character": 25
              }
            }
          }
        ]
      }
    ],
    "securityValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "global-security",
            "message": "Global 'security' field is not defined",
            "path": [],
            "severity": 0,
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 1501,
                "character": 25
              }
            }
          },
          {
            "code": "server-https",
            "message": "Server objects should support https",
            "path": [
              "servers",
              "1",
              "url"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 7,
                "character": 9
              },
              "end": {
                "line": 7,
                "character": 76
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 20,
                "character": 15
              },
              "end": {
                "line": 21,
                "character": 45
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 33,
                "character": 14
              },
              "end": {
                "line": 34,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 45,
                "character": 15
              },
              "end": {
                "line": 47,
                "character": 47
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 59,
                "character": 14
              },
              "end": {
                "line": 60,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 68,
                "character": 15
              },
              "end": {
                "line": 73,
                "character": 57
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 85,
                "character": 14
              },
              "end": {
                "line": 86,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 99,
                "character": 14
              },
              "end": {
                "line": 100,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 113,
                "character": 14
              },
              "end": {
                "line": 114,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 115,
                "character": 14
              },
              "end": {
                "line": 116,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/api",
              "post",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 125,
                "character": 14
              },
              "end": {
                "line": 126,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 127,
                "character": 14
              },
              "end": {
                "line": 128,
                "character": 37
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 140,
                "character": 15
              },
              "end": {
                "line": 145,
                "character": 57
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 157,
                "character": 14
              },
              "end": {
                "line": 158,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 159,
                "character": 14
              },
              "end": {
                "line": 160,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "put",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 176,
                "character": 14
              },
              "end": {
                "line": 177,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 178,
                "character": 14
              },
              "end": {
                "line": 179,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "put",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 180,
                "character": 14
              },
              "end": {
                "line": 181,
                "character": 37
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 192,
                "character": 15
              },
              "end": {
                "line": 204,
                "character": 44
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 209,
                "character": 14
              },
              "end": {
                "line": 210,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 211,
                "character": 14
              },
              "end": {
                "line": 212,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "delete",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 213,
                "character": 14
              },
              "end": {
                "line": 214,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/consumers",
              "post",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 14
              },
              "end": {
                "line": 224,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/consumers",
              "post",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 225,
                "character": 14
              },
              "end": {
                "line": 226,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/consumers",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 227,
                "character": 14
              },
              "end": {
                "line": 228,
                "character": 37
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 239,
                "character": 15
              },
              "end": {
                "line": 245,
                "character": 44
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 255,
                "character": 14
              },
              "end": {
                "line": 256,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 271,
                "character": 15
              },
              "end": {
                "line": 272,
                "character": 50
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 282,
                "character": 14
              },
              "end": {
                "line": 283,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 298,
                "character": 15
              },
              "end": {
                "line": 302,
                "character": 47
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 14
              },
              "end": {
                "line": 313,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 322,
                "character": 14
              },
              "end": {
                "line": 323,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 324,
                "character": 14
              },
              "end": {
                "line": 325,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "put",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 333,
                "character": 14
              },
              "end": {
                "line": 334,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "put",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 335,
                "character": 14
              },
              "end": {
                "line": 336,
                "character": 55
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 347,
                "character": 15
              },
              "end": {
                "line": 351,
                "character": 47
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 361,
                "character": 14
              },
              "end": {
                "line": 362,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 377,
                "character": 14
              },
              "end": {
                "line": 378,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 392,
                "character": 15
              },
              "end": {
                "line": 393,
                "character": 50
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 403,
                "character": 14
              },
              "end": {
                "line": 404,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 417,
                "character": 15
              },
              "end": {
                "line": 418,
                "character": 50
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 428,
                "character": 14
              },
              "end": {
                "line": 429,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 442,
                "character": 15
              },
              "end": {
                "line": 443,
                "character": 50
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 448,
                "character": 14
              },
              "end": {
                "line": 449,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 450,
                "character": 14
              },
              "end": {
                "line": 451,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [501].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses",
              "501"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 452,
                "character": 14
              },
              "end": {
                "line": 453,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 463,
                "character": 15
              },
              "end": {
                "line": 467,
                "character": 47
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 477,
                "character": 14
              },
              "end": {
                "line": 478,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 487,
                "character": 15
              },
              "end": {
                "line": 491,
                "character": 47
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 501,
                "character": 14
              },
              "end": {
                "line": 502,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 511,
                "character": 15
              },
              "end": {
                "line": 512,
                "character": 50
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 522,
                "character": 14
              },
              "end": {
                "line": 523,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 534,
                "character": 15
              },
              "end": {
                "line": 539,
                "character": 48
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 549,
                "character": 14
              },
              "end": {
                "line": 550,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 559,
                "character": 14
              },
              "end": {
                "line": 560,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 561,
                "character": 14
              },
              "end": {
                "line": 562,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 582,
                "character": 14
              },
              "end": {
                "line": 583,
                "character": 55
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 584,
                "character": 14
              },
              "end": {
                "line": 585,
                "character": 57
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [409].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses",
              "409"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 14
              },
              "end": {
                "line": 587,
                "character": 101
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 607,
                "character": 14
              },
              "end": {
                "line": 608,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 623,
                "character": 15
              },
              "end": {
                "line": 624,
                "character": 52
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 634,
                "character": 14
              },
              "end": {
                "line": 635,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 652,
                "character": 14
              },
              "end": {
                "line": 653,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 654,
                "character": 14
              },
              "end": {
                "line": 655,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 666,
                "character": 15
              },
              "end": {
                "line": 671,
                "character": 48
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 681,
                "character": 14
              },
              "end": {
                "line": 682,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "put",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 691,
                "character": 14
              },
              "end": {
                "line": 692,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 693,
                "character": 14
              },
              "end": {
                "line": 694,
                "character": 81
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`PagedDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 706,
                "character": 13
              },
              "end": {
                "line": 718,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`offset.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 709,
                "character": 15
              },
              "end": {
                "line": 711,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`offset.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 709,
                "character": 15
              },
              "end": {
                "line": 711,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`limit.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 712,
                "character": 14
              },
              "end": {
                "line": 714,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`limit.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 712,
                "character": 14
              },
              "end": {
                "line": 714,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`totalElements.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 715,
                "character": 22
              },
              "end": {
                "line": 717,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`totalElements.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 715,
                "character": 22
              },
              "end": {
                "line": 717,
                "character": 23
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiSpecificationDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 719,
                "character": 24
              },
              "end": {
                "line": 763,
                "character": 18
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 725,
                "character": 20
              },
              "end": {
                "line": 727,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 725,
                "character": 20
              },
              "end": {
                "line": 727,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 728,
                "character": 16
              },
              "end": {
                "line": 731,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 728,
                "character": 16
              },
              "end": {
                "line": 731,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`previousVersion.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "previousVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 743,
                "character": 24
              },
              "end": {
                "line": 745,
                "character": 56
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`previousVersion.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "previousVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 743,
                "character": 24
              },
              "end": {
                "line": 745,
                "character": 56
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "changes"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 746,
                "character": 16
              },
              "end": {
                "line": 749,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "consumers"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 750,
                "character": 18
              },
              "end": {
                "line": 753,
                "character": 55
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 754,
                "character": 16
              },
              "end": {
                "line": 756,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 754,
                "character": 16
              },
              "end": {
                "line": 756,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 757,
                "character": 26
              },
              "end": {
                "line": 759,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 757,
                "character": 26
              },
              "end": {
                "line": 759,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIVersionDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 764,
                "character": 18
              },
              "end": {
                "line": 787,
                "character": 21
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 771,
                "character": 16
              },
              "end": {
                "line": 773,
                "character": 46
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 771,
                "character": 16
              },
              "end": {
                "line": 773,
                "character": 46
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionFullDataDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 793,
                "character": 10
              },
              "end": {
                "line": 798,
                "character": 60
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIVersionID.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 799,
                "character": 17
              },
              "end": {
                "line": 825,
                "character": 17
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 804,
                "character": 19
              },
              "end": {
                "line": 807,
                "character": 36
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 804,
                "character": 19
              },
              "end": {
                "line": 807,
                "character": 36
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 808,
                "character": 26
              },
              "end": {
                "line": 811,
                "character": 44
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 808,
                "character": 26
              },
              "end": {
                "line": 811,
                "character": 44
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 817,
                "character": 16
              },
              "end": {
                "line": 820,
                "character": 36
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 817,
                "character": 16
              },
              "end": {
                "line": 820,
                "character": 36
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "RelatedAPIVersionList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 826,
                "character": 26
              },
              "end": {
                "line": 829,
                "character": 49
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIVersionList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 830,
                "character": 19
              },
              "end": {
                "line": 833,
                "character": 60
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`DeploymentRelatedApiDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 834,
                "character": 28
              },
              "end": {
                "line": 851,
                "character": 12
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 841,
                "character": 16
              },
              "end": {
                "line": 843,
                "character": 46
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 841,
                "character": 16
              },
              "end": {
                "line": 843,
                "character": 46
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIDeploymentList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 852,
                "character": 22
              },
              "end": {
                "line": 855,
                "character": 52
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIDeploymentID.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 856,
                "character": 20
              },
              "end": {
                "line": 878,
                "character": 60
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`artifactName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "artifactName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 861,
                "character": 21
              },
              "end": {
                "line": 863,
                "character": 39
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`artifactName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "artifactName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 861,
                "character": 21
              },
              "end": {
                "line": 863,
                "character": 39
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`slot.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 872,
                "character": 13
              },
              "end": {
                "line": 874,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`slot.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 872,
                "character": 13
              },
              "end": {
                "line": 874,
                "character": 65
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIDeploymentDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 879,
                "character": 21
              },
              "end": {
                "line": 902,
                "character": 70
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 886,
                "character": 19
              },
              "end": {
                "line": 888,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 886,
                "character": 19
              },
              "end": {
                "line": 888,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 889,
                "character": 16
              },
              "end": {
                "line": 891,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 889,
                "character": 16
              },
              "end": {
                "line": 891,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`deploymentUrl.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 896,
                "character": 22
              },
              "end": {
                "line": 898,
                "character": 52
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`deploymentUrl.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 896,
                "character": 22
              },
              "end": {
                "line": 898,
                "character": 52
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIDeploymentUpdateDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 903,
                "character": 27
              },
              "end": {
                "line": 926,
                "character": 70
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 910,
                "character": 19
              },
              "end": {
                "line": 912,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 910,
                "character": 19
              },
              "end": {
                "line": 912,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 913,
                "character": 16
              },
              "end": {
                "line": 915,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 913,
                "character": 16
              },
              "end": {
                "line": 915,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`deploymentUrl.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 920,
                "character": 22
              },
              "end": {
                "line": 922,
                "character": 52
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`deploymentUrl.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 920,
                "character": 22
              },
              "end": {
                "line": 922,
                "character": 52
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiDeploymentUpdateResultDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiDeploymentUpdateResultDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 927,
                "character": 33
              },
              "end": {
                "line": 939,
                "character": 60
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiConsumerDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 940,
                "character": 19
              },
              "end": {
                "line": 999,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`consumerId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 945,
                "character": 19
              },
              "end": {
                "line": 947,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`consumerId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 945,
                "character": 19
              },
              "end": {
                "line": 947,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 948,
                "character": 20
              },
              "end": {
                "line": 950,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 948,
                "character": 20
              },
              "end": {
                "line": 950,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 953,
                "character": 16
              },
              "end": {
                "line": 956,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 953,
                "character": 16
              },
              "end": {
                "line": 956,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`platform.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 968,
                "character": 17
              },
              "end": {
                "line": 970,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`platform.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 968,
                "character": 17
              },
              "end": {
                "line": 970,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`slot.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 975,
                "character": 13
              },
              "end": {
                "line": 977,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`slot.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 975,
                "character": 13
              },
              "end": {
                "line": 977,
                "character": 65
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "dependencies"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 978,
                "character": 21
              },
              "end": {
                "line": 982,
                "character": 225
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 983,
                "character": 16
              },
              "end": {
                "line": 985,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 983,
                "character": 16
              },
              "end": {
                "line": 985,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 986,
                "character": 26
              },
              "end": {
                "line": 988,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 986,
                "character": 26
              },
              "end": {
                "line": 988,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 989,
                "character": 19
              },
              "end": {
                "line": 991,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 989,
                "character": 19
              },
              "end": {
                "line": 991,
                "character": 74
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ConsumerDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1000,
                "character": 16
              },
              "end": {
                "line": 1042,
                "character": 25
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`consumerId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1005,
                "character": 19
              },
              "end": {
                "line": 1007,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`consumerId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1005,
                "character": 19
              },
              "end": {
                "line": 1007,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1008,
                "character": 16
              },
              "end": {
                "line": 1010,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1008,
                "character": 16
              },
              "end": {
                "line": 1010,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`platform.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1019,
                "character": 17
              },
              "end": {
                "line": 1021,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`platform.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1019,
                "character": 17
              },
              "end": {
                "line": 1021,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`slot.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1026,
                "character": 13
              },
              "end": {
                "line": 1028,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`slot.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1026,
                "character": 13
              },
              "end": {
                "line": 1028,
                "character": 65
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "apiDependencies"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1029,
                "character": 24
              },
              "end": {
                "line": 1033,
                "character": 42
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1034,
                "character": 19
              },
              "end": {
                "line": 1036,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1034,
                "character": 19
              },
              "end": {
                "line": 1036,
                "character": 74
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiChangeDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1043,
                "character": 17
              },
              "end": {
                "line": 1063,
                "character": 27
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`itemName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1048,
                "character": 17
              },
              "end": {
                "line": 1050,
                "character": 64
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`itemName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1048,
                "character": 17
              },
              "end": {
                "line": 1050,
                "character": 64
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`changeType.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1051,
                "character": 19
              },
              "end": {
                "line": 1053,
                "character": 67
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`changeType.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1051,
                "character": 19
              },
              "end": {
                "line": 1053,
                "character": 67
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`changeDescription.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1057,
                "character": 26
              },
              "end": {
                "line": 1059,
                "character": 43
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`changeDescription.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1057,
                "character": 26
              },
              "end": {
                "line": 1059,
                "character": 43
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiDependencyDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1064,
                "character": 21
              },
              "end": {
                "line": 1094,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1069,
                "character": 20
              },
              "end": {
                "line": 1071,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1069,
                "character": 20
              },
              "end": {
                "line": 1071,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1072,
                "character": 16
              },
              "end": {
                "line": 1074,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1072,
                "character": 16
              },
              "end": {
                "line": 1074,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1075,
                "character": 26
              },
              "end": {
                "line": 1077,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1075,
                "character": 26
              },
              "end": {
                "line": 1077,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1078,
                "character": 16
              },
              "end": {
                "line": 1080,
                "character": 42
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1078,
                "character": 16
              },
              "end": {
                "line": 1080,
                "character": 42
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "dependencies"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1085,
                "character": 21
              },
              "end": {
                "line": 1089,
                "character": 225
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiUsageDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1095,
                "character": 16
              },
              "end": {
                "line": 1107,
                "character": 18
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`itemName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1100,
                "character": 17
              },
              "end": {
                "line": 1102,
                "character": 60
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`itemName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1100,
                "character": 17
              },
              "end": {
                "line": 1102,
                "character": 60
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`usageDescription.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "usageDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1103,
                "character": 25
              },
              "end": {
                "line": 1105,
                "character": 126
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`usageDescription.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "usageDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1103,
                "character": 25
              },
              "end": {
                "line": 1105,
                "character": 126
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIGraphNode.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIGraphNode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1108,
                "character": 17
              },
              "end": {
                "line": 1137,
                "character": 18
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "changes"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1121,
                "character": 16
              },
              "end": {
                "line": 1124,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "consumers"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1125,
                "character": 18
              },
              "end": {
                "line": 1128,
                "character": 57
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "deployments"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1129,
                "character": 20
              },
              "end": {
                "line": 1132,
                "character": 57
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIDependencyGraphNodeListDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1138,
                "character": 34
              },
              "end": {
                "line": 1142,
                "character": 77
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiSpecificationGraphsDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphsDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1143,
                "character": 30
              },
              "end": {
                "line": 1161,
                "character": 21
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphsDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1149,
                "character": 20
              },
              "end": {
                "line": 1151,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphsDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1149,
                "character": 20
              },
              "end": {
                "line": 1151,
                "character": 74
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiSpecificationGraphNodeDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1162,
                "character": 33
              },
              "end": {
                "line": 1199,
                "character": 18
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1168,
                "character": 20
              },
              "end": {
                "line": 1170,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1168,
                "character": 20
              },
              "end": {
                "line": 1170,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1171,
                "character": 16
              },
              "end": {
                "line": 1174,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1171,
                "character": 16
              },
              "end": {
                "line": 1174,
                "character": 31
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "changes"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1188,
                "character": 16
              },
              "end": {
                "line": 1191,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "consumers"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1192,
                "character": 18
              },
              "end": {
                "line": 1195,
                "character": 55
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1203,
                "character": 10
              },
              "end": {
                "line": 1208,
                "character": 64
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1205,
                "character": 20
              },
              "end": {
                "line": 1208,
                "character": 64
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiConsumerPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1213,
                "character": 10
              },
              "end": {
                "line": 1218,
                "character": 59
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiConsumerPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1215,
                "character": 20
              },
              "end": {
                "line": 1218,
                "character": 59
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1223,
                "character": 10
              },
              "end": {
                "line": 1228,
                "character": 58
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIVersionPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1225,
                "character": 20
              },
              "end": {
                "line": 1228,
                "character": 58
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionFullDataPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1233,
                "character": 10
              },
              "end": {
                "line": 1238,
                "character": 66
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIVersionFullDataPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1235,
                "character": 20
              },
              "end": {
                "line": 1238,
                "character": 66
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1243,
                "character": 10
              },
              "end": {
                "line": 1248,
                "character": 61
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIDeploymentPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1245,
                "character": 20
              },
              "end": {
                "line": 1248,
                "character": 61
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1261,
                "character": 13
              },
              "end": {
                "line": 1262,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1261,
                "character": 13
              },
              "end": {
                "line": 1262,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "normalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1268,
                "character": 13
              },
              "end": {
                "line": 1269,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "normalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1268,
                "character": 13
              },
              "end": {
                "line": 1269,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1275,
                "character": 13
              },
              "end": {
                "line": 1276,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1275,
                "character": 13
              },
              "end": {
                "line": 1276,
                "character": 20
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "offset",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1283,
                "character": 13
              },
              "end": {
                "line": 1287,
                "character": 18
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "slot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1369,
                "character": 13
              },
              "end": {
                "line": 1370,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "slot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1369,
                "character": 13
              },
              "end": {
                "line": 1370,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathSlot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1377,
                "character": 13
              },
              "end": {
                "line": 1378,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathSlot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1377,
                "character": 13
              },
              "end": {
                "line": 1378,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1383,
                "character": 13
              },
              "end": {
                "line": 1384,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1383,
                "character": 13
              },
              "end": {
                "line": 1384,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1387,
                "character": 13
              },
              "end": {
                "line": 1388,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1387,
                "character": 13
              },
              "end": {
                "line": 1388,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProtocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1393,
                "character": 13
              },
              "end": {
                "line": 1394,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProtocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1393,
                "character": 13
              },
              "end": {
                "line": 1394,
                "character": 20
              }
            }
          },
          {
            "code": "numeric-required-properties-format",
            "message": "`schema.format` property should be defined",
            "path": [
              "components",
              "parameters",
              "maxApiNodes",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1399,
                "character": 13
              },
              "end": {
                "line": 1401,
                "character": 19
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "maxApiNodes",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1399,
                "character": 13
              },
              "end": {
                "line": 1401,
                "character": 19
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "components",
              "parameters",
              "maxApiNodes",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1399,
                "character": 13
              },
              "end": {
                "line": 1401,
                "character": 19
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1409,
                "character": 13
              },
              "end": {
                "line": 1410,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1409,
                "character": 13
              },
              "end": {
                "line": 1410,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1417,
                "character": 13
              },
              "end": {
                "line": 1418,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1417,
                "character": 13
              },
              "end": {
                "line": 1418,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1424,
                "character": 13
              },
              "end": {
                "line": 1425,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1424,
                "character": 13
              },
              "end": {
                "line": 1425,
                "character": 20
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "parameters",
              "queryArtifactNameArray",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1431,
                "character": 13
              },
              "end": {
                "line": 1435,
                "character": 19
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactNameArray",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1433,
                "character": 14
              },
              "end": {
                "line": 1434,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactNameArray",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1433,
                "character": 14
              },
              "end": {
                "line": 1434,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "projectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1441,
                "character": 13
              },
              "end": {
                "line": 1442,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "projectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1441,
                "character": 13
              },
              "end": {
                "line": 1442,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProjectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1448,
                "character": 13
              },
              "end": {
                "line": 1449,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProjectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1448,
                "character": 13
              },
              "end": {
                "line": 1449,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathNormalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1455,
                "character": 13
              },
              "end": {
                "line": 1456,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathNormalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1455,
                "character": 13
              },
              "end": {
                "line": 1456,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "version",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1461,
                "character": 13
              },
              "end": {
                "line": 1462,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "version",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1461,
                "character": 13
              },
              "end": {
                "line": 1462,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "protocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1468,
                "character": 13
              },
              "end": {
                "line": 1469,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "protocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1468,
                "character": 13
              },
              "end": {
                "line": 1469,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1472,
                "character": 13
              },
              "end": {
                "line": 1473,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1472,
                "character": 13
              },
              "end": {
                "line": 1473,
                "character": 20
              }
            }
          }
        ]
      }
    ],
    "documentationValidations": [],
    "lintingGrade": {
      "grade": "D",
      "description": "Inadequate"
    },
    "securityGrade": {
      "grade": "C",
      "description": "Adequate"
    }
  },
  {
    "apiName": "API Event Processor",
    "apiProtocol": "REST",
    "apiVersion": "1.3.2",
    "pipelineVersion": "v2",
    "lintValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "ensure-basepath-version",
            "message": "url version should be v1",
            "path": [],
            "severity": 1,
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 711,
                "character": 15
              }
            }
          },
          {
            "code": "global-security",
            "message": "Global 'security' field is not defined",
            "path": [],
            "severity": 0,
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 711,
                "character": 15
              }
            }
          },
          {
            "code": "contact-email",
            "message": "Definition must have a contact email",
            "path": [
              "info"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1,
                "character": 5
              },
              "end": {
                "line": 3,
                "character": 18
              }
            }
          },
          {
            "code": "info-contact",
            "message": "Info object should contain `contact` object.",
            "path": [
              "info"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1,
                "character": 5
              },
              "end": {
                "line": 3,
                "character": 18
              }
            }
          },
          {
            "code": "info-description",
            "message": "OpenAPI object info `description` must be present and non-empty string.",
            "path": [
              "info"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1,
                "character": 5
              },
              "end": {
                "line": 3,
                "character": 18
              }
            }
          },
          {
            "code": "server-https",
            "message": "Server objects should support https",
            "path": [
              "servers",
              "1",
              "url"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 7,
                "character": 9
              },
              "end": {
                "line": 7,
                "character": 76
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 18,
                "character": 15
              },
              "end": {
                "line": 19,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 19,
                "character": 8
              },
              "end": {
                "line": 19,
                "character": 48
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 22,
                "character": 16
              },
              "end": {
                "line": 30,
                "character": 66
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 29,
                "character": 14
              },
              "end": {
                "line": 30,
                "character": 66
              }
            }
          },
          {
            "code": "delete-http-status-codes-resource",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "delete",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 38,
                "character": 16
              },
              "end": {
                "line": 42,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 14
              },
              "end": {
                "line": 40,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 41,
                "character": 14
              },
              "end": {
                "line": 42,
                "character": 32
              }
            }
          },
          {
            "code": "put-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "put",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 49,
                "character": 16
              },
              "end": {
                "line": 57,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 56,
                "character": 14
              },
              "end": {
                "line": 57,
                "character": 32
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/tickets",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 71,
                "character": 16
              },
              "end": {
                "line": 79,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 78,
                "character": 14
              },
              "end": {
                "line": 79,
                "character": 37
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 83,
                "character": 11
              },
              "end": {
                "line": 83,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 84,
                "character": 11
              },
              "end": {
                "line": 84,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 85,
                "character": 11
              },
              "end": {
                "line": 85,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 86,
                "character": 11
              },
              "end": {
                "line": 86,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 87,
                "character": 11
              },
              "end": {
                "line": 87,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 88,
                "character": 11
              },
              "end": {
                "line": 88,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 89,
                "character": 11
              },
              "end": {
                "line": 89,
                "character": 65
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[7].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "7"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 90,
                "character": 11
              },
              "end": {
                "line": 90,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[8].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "8"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 91,
                "character": 11
              },
              "end": {
                "line": 91,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[9].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "9"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 92,
                "character": 11
              },
              "end": {
                "line": 92,
                "character": 51
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[10].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "10"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 93,
                "character": 11
              },
              "end": {
                "line": 93,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[11].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "11"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 94,
                "character": 11
              },
              "end": {
                "line": 94,
                "character": 49
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[12].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "12"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 95,
                "character": 11
              },
              "end": {
                "line": 95,
                "character": 48
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "delete",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 106,
                "character": 14
              },
              "end": {
                "line": 107,
                "character": 37
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "delete",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 110,
                "character": 10
              },
              "end": {
                "line": 110,
                "character": 54
              }
            }
          },
          {
            "code": "query-camel-case",
            "message": "query parameters should be camelCase",
            "path": [
              "paths",
              "/tickets",
              "delete",
              "parameters",
              "0",
              "name"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 110,
                "character": 10
              },
              "end": {
                "line": 110,
                "character": 54
              }
            }
          },
          {
            "code": "post-http-status-codes-collections",
            "message": "Missing the responses[401] http definition",
            "path": [
              "paths",
              "/tickets",
              "post",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 116,
                "character": 16
              },
              "end": {
                "line": 126,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 123,
                "character": 14
              },
              "end": {
                "line": 124,
                "character": 36
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 125,
                "character": 14
              },
              "end": {
                "line": 126,
                "character": 37
              }
            }
          },
          {
            "code": "post-http-status-codes-collections",
            "message": "Missing the responses[201] http definition",
            "path": [
              "paths",
              "/tickets/controllers",
              "post",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 148,
                "character": 16
              },
              "end": {
                "line": 158,
                "character": 39
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/tickets/controllers",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 155,
                "character": 14
              },
              "end": {
                "line": 156,
                "character": 36
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets/controllers",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 157,
                "character": 14
              },
              "end": {
                "line": 158,
                "character": 39
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/archived-tickets/{ticketID}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 163,
                "character": 15
              },
              "end": {
                "line": 164,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets/{ticketID}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 164,
                "character": 8
              },
              "end": {
                "line": 164,
                "character": 48
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/archived-tickets/{ticketID}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 167,
                "character": 16
              },
              "end": {
                "line": 175,
                "character": 72
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets/{ticketID}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 174,
                "character": 14
              },
              "end": {
                "line": 175,
                "character": 72
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 185,
                "character": 16
              },
              "end": {
                "line": 193,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 192,
                "character": 14
              },
              "end": {
                "line": 193,
                "character": 37
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 197,
                "character": 11
              },
              "end": {
                "line": 197,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 198,
                "character": 11
              },
              "end": {
                "line": 198,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 199,
                "character": 11
              },
              "end": {
                "line": 199,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 200,
                "character": 11
              },
              "end": {
                "line": 200,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 201,
                "character": 11
              },
              "end": {
                "line": 201,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 202,
                "character": 11
              },
              "end": {
                "line": 202,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 203,
                "character": 11
              },
              "end": {
                "line": 203,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[7].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "7"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 204,
                "character": 11
              },
              "end": {
                "line": 204,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[8].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "8"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 205,
                "character": 11
              },
              "end": {
                "line": 205,
                "character": 65
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[9].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "9"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 206,
                "character": 11
              },
              "end": {
                "line": 206,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[10].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "10"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 207,
                "character": 11
              },
              "end": {
                "line": 207,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[11].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "11"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 208,
                "character": 11
              },
              "end": {
                "line": 208,
                "character": 51
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[12].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "12"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 209,
                "character": 11
              },
              "end": {
                "line": 209,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[13].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "13"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 210,
                "character": 11
              },
              "end": {
                "line": 210,
                "character": 49
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[14].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "14"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 211,
                "character": 11
              },
              "end": {
                "line": 211,
                "character": 48
              }
            }
          },
          {
            "code": "post-http-status-codes-collections",
            "message": "Missing the responses[201] http definition",
            "path": [
              "paths",
              "/archived-tickets/unarchive",
              "post",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 16
              },
              "end": {
                "line": 233,
                "character": 39
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets/unarchive",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 230,
                "character": 14
              },
              "end": {
                "line": 231,
                "character": 36
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets/unarchive",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 232,
                "character": 14
              },
              "end": {
                "line": 233,
                "character": 39
              }
            }
          },
          {
            "code": "operation-tag-defined",
            "message": "Operation tags should be defined in global tags.",
            "path": [
              "paths",
              "/blacklist",
              "get",
              "tags",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 241,
                "character": 10
              },
              "end": {
                "line": 241,
                "character": 19
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/blacklist",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 242,
                "character": 16
              },
              "end": {
                "line": 250,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 249,
                "character": 14
              },
              "end": {
                "line": 250,
                "character": 37
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/blacklist",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 254,
                "character": 11
              },
              "end": {
                "line": 254,
                "character": 58
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/blacklist",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 255,
                "character": 11
              },
              "end": {
                "line": 255,
                "character": 51
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/blacklist",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 256,
                "character": 11
              },
              "end": {
                "line": 256,
                "character": 52
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "put",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 261,
                "character": 14
              },
              "end": {
                "line": 262,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 263,
                "character": 14
              },
              "end": {
                "line": 264,
                "character": 32
              }
            }
          },
          {
            "code": "operation-tag-defined",
            "message": "Operation tags should be defined in global tags.",
            "path": [
              "paths",
              "/blacklist",
              "put",
              "tags",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 272,
                "character": 8
              },
              "end": {
                "line": 272,
                "character": 17
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "delete",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 283,
                "character": 14
              },
              "end": {
                "line": 284,
                "character": 37
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/blacklist",
              "delete",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 287,
                "character": 10
              },
              "end": {
                "line": 287,
                "character": 57
              }
            }
          },
          {
            "code": "operation-tag-defined",
            "message": "Operation tags should be defined in global tags.",
            "path": [
              "paths",
              "/blacklist",
              "delete",
              "tags",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 289,
                "character": 10
              },
              "end": {
                "line": 289,
                "character": 19
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`ticketID.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 292,
                "character": 13
              },
              "end": {
                "line": 298,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketID",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 297,
                "character": 13
              },
              "end": {
                "line": 298,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketID",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 297,
                "character": 13
              },
              "end": {
                "line": 298,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`ticketStatus.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketStatus"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 299,
                "character": 17
              },
              "end": {
                "line": 306,
                "character": 64
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`deleteTicketStatus.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "deleteTicketStatus"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 307,
                "character": 23
              },
              "end": {
                "line": 314,
                "character": 37
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`ticketDate.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 315,
                "character": 15
              },
              "end": {
                "line": 322,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`attempts.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "attempts"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 323,
                "character": 13
              },
              "end": {
                "line": 329,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-format",
            "message": "`schema.format` property should be defined",
            "path": [
              "components",
              "parameters",
              "attempts",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 328,
                "character": 13
              },
              "end": {
                "line": 329,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "attempts",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 328,
                "character": 13
              },
              "end": {
                "line": 329,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "components",
              "parameters",
              "attempts",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 328,
                "character": 13
              },
              "end": {
                "line": 329,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`eventType.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "eventType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 330,
                "character": 14
              },
              "end": {
                "line": 337,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`fromCreationDate.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "fromCreationDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 338,
                "character": 21
              },
              "end": {
                "line": 345,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`toCreationDate.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "toCreationDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 346,
                "character": 19
              },
              "end": {
                "line": 353,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`fromUpdateDate.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "fromUpdateDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 354,
                "character": 19
              },
              "end": {
                "line": 361,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`toUpdateDate.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "toUpdateDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 362,
                "character": 17
              },
              "end": {
                "line": 369,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`ticketIDList.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketIDList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 370,
                "character": 17
              },
              "end": {
                "line": 379,
                "character": 19
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "parameters",
              "ticketIDList",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 375,
                "character": 13
              },
              "end": {
                "line": 379,
                "character": 19
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketIDList",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 377,
                "character": 14
              },
              "end": {
                "line": 378,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketIDList",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 377,
                "character": 14
              },
              "end": {
                "line": 378,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`ruleCodeElement.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCodeElement"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 380,
                "character": 20
              },
              "end": {
                "line": 389,
                "character": 19
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "parameters",
              "ruleCodeElement",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 385,
                "character": 13
              },
              "end": {
                "line": 389,
                "character": 19
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCodeElement",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 387,
                "character": 14
              },
              "end": {
                "line": 388,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCodeElement",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 387,
                "character": 14
              },
              "end": {
                "line": 388,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`offset.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 390,
                "character": 11
              },
              "end": {
                "line": 400,
                "character": 18
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "offset",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 396,
                "character": 13
              },
              "end": {
                "line": 400,
                "character": 18
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`limit.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 401,
                "character": 10
              },
              "end": {
                "line": 412,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`fromArchivedDate.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "fromArchivedDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 413,
                "character": 21
              },
              "end": {
                "line": 420,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`toArchivedDate.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "toArchivedDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 421,
                "character": 19
              },
              "end": {
                "line": 428,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`eventMessageFilter.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "eventMessageFilter"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 429,
                "character": 23
              },
              "end": {
                "line": 435,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "eventMessageFilter",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 434,
                "character": 13
              },
              "end": {
                "line": 435,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "eventMessageFilter",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 434,
                "character": 13
              },
              "end": {
                "line": 435,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`eventMessageFilterType.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "eventMessageFilterType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 436,
                "character": 27
              },
              "end": {
                "line": 443,
                "character": 35
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`ruleDescription.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 444,
                "character": 20
              },
              "end": {
                "line": 450,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleDescription",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 449,
                "character": 13
              },
              "end": {
                "line": 450,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleDescription",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 449,
                "character": 13
              },
              "end": {
                "line": 450,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`ruleCode.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 451,
                "character": 13
              },
              "end": {
                "line": 457,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCode",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 456,
                "character": 13
              },
              "end": {
                "line": 457,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCode",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 456,
                "character": 13
              },
              "end": {
                "line": 457,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`jsonField.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "jsonField"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 458,
                "character": 14
              },
              "end": {
                "line": 464,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "jsonField",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 463,
                "character": 13
              },
              "end": {
                "line": 464,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "jsonField",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 463,
                "character": 13
              },
              "end": {
                "line": 464,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`additionalInfo.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "additionalInfo"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 465,
                "character": 19
              },
              "end": {
                "line": 471,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "additionalInfo",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 470,
                "character": 13
              },
              "end": {
                "line": 471,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "additionalInfo",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 470,
                "character": 13
              },
              "end": {
                "line": 471,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`stepName.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 472,
                "character": 13
              },
              "end": {
                "line": 478,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 477,
                "character": 13
              },
              "end": {
                "line": 478,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 477,
                "character": 13
              },
              "end": {
                "line": 478,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`stepError.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepError"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 479,
                "character": 14
              },
              "end": {
                "line": 485,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepError",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 484,
                "character": 13
              },
              "end": {
                "line": 485,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepError",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 484,
                "character": 13
              },
              "end": {
                "line": 485,
                "character": 20
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "TicketListResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 487,
                "character": 23
              },
              "end": {
                "line": 492,
                "character": 17
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketResponse.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 493,
                "character": 19
              },
              "end": {
                "line": 506,
                "character": 15
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "ticketId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 497,
                "character": 17
              },
              "end": {
                "line": 498,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`ticketId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 497,
                "character": 17
              },
              "end": {
                "line": 498,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ticketId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 497,
                "character": 17
              },
              "end": {
                "line": 498,
                "character": 22
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property success does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "success"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 499,
                "character": 16
              },
              "end": {
                "line": 500,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "success doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "success"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 499,
                "character": 16
              },
              "end": {
                "line": 500,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "error doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 501,
                "character": 14
              },
              "end": {
                "line": 502,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`error.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 501,
                "character": 14
              },
              "end": {
                "line": 502,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`error.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 501,
                "character": 14
              },
              "end": {
                "line": 502,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`PerformActionRequest.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 507,
                "character": 25
              },
              "end": {
                "line": 522,
                "character": 12
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "action doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "action"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 511,
                "character": 15
              },
              "end": {
                "line": 513,
                "character": 51
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "data"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 514,
                "character": 13
              },
              "end": {
                "line": 518,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "data doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "data"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 514,
                "character": 13
              },
              "end": {
                "line": 518,
                "character": 21
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "data",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 516,
                "character": 16
              },
              "end": {
                "line": 517,
                "character": 24
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "data",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 516,
                "character": 16
              },
              "end": {
                "line": 517,
                "character": 24
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketsList.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketsList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 523,
                "character": 16
              },
              "end": {
                "line": 535,
                "character": 12
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "TicketsList",
              "properties",
              "ticketIdList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 527,
                "character": 21
              },
              "end": {
                "line": 531,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "ticketIdList doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketsList",
              "properties",
              "ticketIdList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 527,
                "character": 21
              },
              "end": {
                "line": 531,
                "character": 21
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketsList",
              "properties",
              "ticketIdList",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 529,
                "character": 16
              },
              "end": {
                "line": 530,
                "character": 24
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketsList",
              "properties",
              "ticketIdList",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 529,
                "character": 16
              },
              "end": {
                "line": 530,
                "character": 24
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketDTOFull.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 536,
                "character": 18
              },
              "end": {
                "line": 568,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "ticketId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 546,
                "character": 17
              },
              "end": {
                "line": 547,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`ticketId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 546,
                "character": 17
              },
              "end": {
                "line": 547,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ticketId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 546,
                "character": 17
              },
              "end": {
                "line": 547,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "eventType doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "eventType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 548,
                "character": 18
              },
              "end": {
                "line": 550,
                "character": 78
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "retryStatus doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "retryStatus"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 551,
                "character": 20
              },
              "end": {
                "line": 553,
                "character": 66
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "attemptCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "attemptCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 554,
                "character": 21
              },
              "end": {
                "line": 555,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-format",
            "message": "`attemptCount.format` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "attemptCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 554,
                "character": 21
              },
              "end": {
                "line": 555,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`attemptCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "attemptCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 554,
                "character": 21
              },
              "end": {
                "line": 555,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`attemptCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "attemptCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 554,
                "character": 21
              },
              "end": {
                "line": 555,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "creationDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "creationDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 556,
                "character": 21
              },
              "end": {
                "line": 558,
                "character": 27
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "updateDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "updateDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 559,
                "character": 19
              },
              "end": {
                "line": 561,
                "character": 27
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "lastRetryDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "lastRetryDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 562,
                "character": 22
              },
              "end": {
                "line": 564,
                "character": 27
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "sourceEvent doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 567,
                "character": 20
              },
              "end": {
                "line": 568,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`sourceEvent.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 567,
                "character": 20
              },
              "end": {
                "line": 568,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`sourceEvent.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 567,
                "character": 20
              },
              "end": {
                "line": 568,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 569,
                "character": 14
              },
              "end": {
                "line": 587,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "eventType doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTO",
              "properties",
              "eventType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 578,
                "character": 18
              },
              "end": {
                "line": 580,
                "character": 78
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "retryStatus doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTO",
              "properties",
              "retryStatus"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 581,
                "character": 20
              },
              "end": {
                "line": 583,
                "character": 43
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "sourceEvent doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTO",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 20
              },
              "end": {
                "line": 587,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`sourceEvent.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTO",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 20
              },
              "end": {
                "line": 587,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`sourceEvent.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTO",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 20
              },
              "end": {
                "line": 587,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 591,
                "character": 10
              },
              "end": {
                "line": 596,
                "character": 58
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "TicketPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 593,
                "character": 20
              },
              "end": {
                "line": 596,
                "character": 58
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ArchivedTicketPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 600,
                "character": 10
              },
              "end": {
                "line": 605,
                "character": 69
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ArchivedTicketPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 602,
                "character": 20
              },
              "end": {
                "line": 605,
                "character": 69
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`PagedDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 606,
                "character": 13
              },
              "end": {
                "line": 618,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "offset doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 609,
                "character": 15
              },
              "end": {
                "line": 611,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`offset.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 609,
                "character": 15
              },
              "end": {
                "line": 611,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`offset.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 609,
                "character": 15
              },
              "end": {
                "line": 611,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "limit doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 612,
                "character": 14
              },
              "end": {
                "line": 614,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`limit.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 612,
                "character": 14
              },
              "end": {
                "line": 614,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`limit.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 612,
                "character": 14
              },
              "end": {
                "line": 614,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "totalElements doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 615,
                "character": 22
              },
              "end": {
                "line": 617,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`totalElements.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 615,
                "character": 22
              },
              "end": {
                "line": 617,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`totalElements.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 615,
                "character": 22
              },
              "end": {
                "line": 617,
                "character": 23
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`RetryContextDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 619,
                "character": 20
              },
              "end": {
                "line": 631,
                "character": 22
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "failedSteps"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 622,
                "character": 20
              },
              "end": {
                "line": 625,
                "character": 54
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "skippedSteps"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 626,
                "character": 21
              },
              "end": {
                "line": 629,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "additionalInfo doesn't have an example",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "additionalInfo"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 630,
                "character": 23
              },
              "end": {
                "line": 631,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`additionalInfo.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "additionalInfo"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 630,
                "character": 23
              },
              "end": {
                "line": 631,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`additionalInfo.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "additionalInfo"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 630,
                "character": 23
              },
              "end": {
                "line": 631,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`FailedStepDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 632,
                "character": 18
              },
              "end": {
                "line": 638,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "step doesn't have an example",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 635,
                "character": 13
              },
              "end": {
                "line": 636,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`step.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 635,
                "character": 13
              },
              "end": {
                "line": 636,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`step.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 635,
                "character": 13
              },
              "end": {
                "line": 636,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "error doesn't have an example",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 637,
                "character": 14
              },
              "end": {
                "line": 638,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`error.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 637,
                "character": 14
              },
              "end": {
                "line": 638,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`error.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 637,
                "character": 14
              },
              "end": {
                "line": 638,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`SkippedStepDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 639,
                "character": 19
              },
              "end": {
                "line": 645,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "step doesn't have an example",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 642,
                "character": 13
              },
              "end": {
                "line": 643,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`step.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 642,
                "character": 13
              },
              "end": {
                "line": 643,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`step.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 642,
                "character": 13
              },
              "end": {
                "line": 643,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "reason doesn't have an example",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "reason"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 644,
                "character": 15
              },
              "end": {
                "line": 645,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`reason.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "reason"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 644,
                "character": 15
              },
              "end": {
                "line": 645,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`reason.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "reason"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 644,
                "character": 15
              },
              "end": {
                "line": 645,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ArchivedEventFullInfoDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ArchivedEventFullInfoDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 646,
                "character": 29
              },
              "end": {
                "line": 655,
                "character": 51
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "archivedDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ArchivedEventFullInfoDTO",
              "properties",
              "archivedDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 651,
                "character": 21
              },
              "end": {
                "line": 653,
                "character": 27
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "ArchivedEventFullInfoDTO",
              "properties",
              "eventRetryInfoDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 654,
                "character": 26
              },
              "end": {
                "line": 655,
                "character": 51
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`BlacklistEntryDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 656,
                "character": 22
              },
              "end": {
                "line": 674,
                "character": 53
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "ruleCode doesn't have an example",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 665,
                "character": 17
              },
              "end": {
                "line": 667,
                "character": 23
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ruleCode.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 665,
                "character": 17
              },
              "end": {
                "line": 667,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "ruleDescription doesn't have an example",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "ruleDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 668,
                "character": 24
              },
              "end": {
                "line": 670,
                "character": 24
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ruleDescription.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "ruleDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 668,
                "character": 24
              },
              "end": {
                "line": 670,
                "character": 24
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "conditions"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 671,
                "character": 19
              },
              "end": {
                "line": 674,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "BlacklistEntriesDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 675,
                "character": 24
              },
              "end": {
                "line": 679,
                "character": 54
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ConditionDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ConditionDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 680,
                "character": 17
              },
              "end": {
                "line": 691,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "jsonField doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "jsonField"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 688,
                "character": 18
              },
              "end": {
                "line": 689,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`jsonField.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "jsonField"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 688,
                "character": 18
              },
              "end": {
                "line": 689,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`jsonField.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "jsonField"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 688,
                "character": 18
              },
              "end": {
                "line": 689,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "regexFilter doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "regexFilter"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 690,
                "character": 20
              },
              "end": {
                "line": 691,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`regexFilter.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "regexFilter"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 690,
                "character": 20
              },
              "end": {
                "line": 691,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`regexFilter.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "regexFilter"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 690,
                "character": 20
              },
              "end": {
                "line": 691,
                "character": 22
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "BlacklistEntriesResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 692,
                "character": 29
              },
              "end": {
                "line": 697,
                "character": 17
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`BlacklistEntryResponse.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 698,
                "character": 27
              },
              "end": {
                "line": 711,
                "character": 15
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "ruleCode doesn't have an example",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 702,
                "character": 17
              },
              "end": {
                "line": 703,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`ruleCode.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 702,
                "character": 17
              },
              "end": {
                "line": 703,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ruleCode.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 702,
                "character": 17
              },
              "end": {
                "line": 703,
                "character": 22
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property success does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "success"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 704,
                "character": 16
              },
              "end": {
                "line": 705,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "success doesn't have an example",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "success"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 704,
                "character": 16
              },
              "end": {
                "line": 705,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "error doesn't have an example",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 706,
                "character": 14
              },
              "end": {
                "line": 707,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`error.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 706,
                "character": 14
              },
              "end": {
                "line": 707,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`error.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 706,
                "character": 14
              },
              "end": {
                "line": 707,
                "character": 22
              }
            }
          }
        ]
      }
    ],
    "securityValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "global-security",
            "message": "Global 'security' field is not defined",
            "path": [],
            "severity": 0,
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 711,
                "character": 15
              }
            }
          },
          {
            "code": "server-https",
            "message": "Server objects should support https",
            "path": [
              "servers",
              "1",
              "url"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 7,
                "character": 9
              },
              "end": {
                "line": 7,
                "character": 76
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 18,
                "character": 15
              },
              "end": {
                "line": 19,
                "character": 48
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 29,
                "character": 14
              },
              "end": {
                "line": 30,
                "character": 66
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 14
              },
              "end": {
                "line": 40,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 41,
                "character": 14
              },
              "end": {
                "line": 42,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 56,
                "character": 14
              },
              "end": {
                "line": 57,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 78,
                "character": 14
              },
              "end": {
                "line": 79,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "delete",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 106,
                "character": 14
              },
              "end": {
                "line": 107,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 123,
                "character": 14
              },
              "end": {
                "line": 124,
                "character": 36
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 125,
                "character": 14
              },
              "end": {
                "line": 126,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/tickets/controllers",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 155,
                "character": 14
              },
              "end": {
                "line": 156,
                "character": 36
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets/controllers",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 157,
                "character": 14
              },
              "end": {
                "line": 158,
                "character": 39
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/archived-tickets/{ticketID}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 163,
                "character": 15
              },
              "end": {
                "line": 164,
                "character": 48
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets/{ticketID}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 174,
                "character": 14
              },
              "end": {
                "line": 175,
                "character": 72
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 192,
                "character": 14
              },
              "end": {
                "line": 193,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets/unarchive",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 230,
                "character": 14
              },
              "end": {
                "line": 231,
                "character": 36
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets/unarchive",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 232,
                "character": 14
              },
              "end": {
                "line": 233,
                "character": 39
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 249,
                "character": 14
              },
              "end": {
                "line": 250,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "put",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 261,
                "character": 14
              },
              "end": {
                "line": 262,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 263,
                "character": 14
              },
              "end": {
                "line": 264,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "delete",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 283,
                "character": 14
              },
              "end": {
                "line": 284,
                "character": 37
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketID",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 297,
                "character": 13
              },
              "end": {
                "line": 298,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketID",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 297,
                "character": 13
              },
              "end": {
                "line": 298,
                "character": 20
              }
            }
          },
          {
            "code": "numeric-required-properties-format",
            "message": "`schema.format` property should be defined",
            "path": [
              "components",
              "parameters",
              "attempts",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 328,
                "character": 13
              },
              "end": {
                "line": 329,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "attempts",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 328,
                "character": 13
              },
              "end": {
                "line": 329,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "components",
              "parameters",
              "attempts",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 328,
                "character": 13
              },
              "end": {
                "line": 329,
                "character": 21
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "parameters",
              "ticketIDList",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 375,
                "character": 13
              },
              "end": {
                "line": 379,
                "character": 19
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketIDList",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 377,
                "character": 14
              },
              "end": {
                "line": 378,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketIDList",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 377,
                "character": 14
              },
              "end": {
                "line": 378,
                "character": 22
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "parameters",
              "ruleCodeElement",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 385,
                "character": 13
              },
              "end": {
                "line": 389,
                "character": 19
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCodeElement",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 387,
                "character": 14
              },
              "end": {
                "line": 388,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCodeElement",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 387,
                "character": 14
              },
              "end": {
                "line": 388,
                "character": 22
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "offset",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 396,
                "character": 13
              },
              "end": {
                "line": 400,
                "character": 18
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "eventMessageFilter",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 434,
                "character": 13
              },
              "end": {
                "line": 435,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "eventMessageFilter",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 434,
                "character": 13
              },
              "end": {
                "line": 435,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleDescription",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 449,
                "character": 13
              },
              "end": {
                "line": 450,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleDescription",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 449,
                "character": 13
              },
              "end": {
                "line": 450,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCode",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 456,
                "character": 13
              },
              "end": {
                "line": 457,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCode",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 456,
                "character": 13
              },
              "end": {
                "line": 457,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "jsonField",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 463,
                "character": 13
              },
              "end": {
                "line": 464,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "jsonField",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 463,
                "character": 13
              },
              "end": {
                "line": 464,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "additionalInfo",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 470,
                "character": 13
              },
              "end": {
                "line": 471,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "additionalInfo",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 470,
                "character": 13
              },
              "end": {
                "line": 471,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 477,
                "character": 13
              },
              "end": {
                "line": 478,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 477,
                "character": 13
              },
              "end": {
                "line": 478,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepError",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 484,
                "character": 13
              },
              "end": {
                "line": 485,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepError",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 484,
                "character": 13
              },
              "end": {
                "line": 485,
                "character": 20
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "TicketListResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 487,
                "character": 23
              },
              "end": {
                "line": 492,
                "character": 17
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketResponse.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 493,
                "character": 19
              },
              "end": {
                "line": 506,
                "character": 15
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`ticketId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 497,
                "character": 17
              },
              "end": {
                "line": 498,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ticketId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 497,
                "character": 17
              },
              "end": {
                "line": 498,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`error.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 501,
                "character": 14
              },
              "end": {
                "line": 502,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`error.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 501,
                "character": 14
              },
              "end": {
                "line": 502,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`PerformActionRequest.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 507,
                "character": 25
              },
              "end": {
                "line": 522,
                "character": 12
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "data"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 514,
                "character": 13
              },
              "end": {
                "line": 518,
                "character": 21
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "data",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 516,
                "character": 16
              },
              "end": {
                "line": 517,
                "character": 24
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "data",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 516,
                "character": 16
              },
              "end": {
                "line": 517,
                "character": 24
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketsList.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketsList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 523,
                "character": 16
              },
              "end": {
                "line": 535,
                "character": 12
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "TicketsList",
              "properties",
              "ticketIdList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 527,
                "character": 21
              },
              "end": {
                "line": 531,
                "character": 21
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketsList",
              "properties",
              "ticketIdList",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 529,
                "character": 16
              },
              "end": {
                "line": 530,
                "character": 24
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketsList",
              "properties",
              "ticketIdList",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 529,
                "character": 16
              },
              "end": {
                "line": 530,
                "character": 24
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketDTOFull.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 536,
                "character": 18
              },
              "end": {
                "line": 568,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`ticketId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 546,
                "character": 17
              },
              "end": {
                "line": 547,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ticketId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 546,
                "character": 17
              },
              "end": {
                "line": 547,
                "character": 22
              }
            }
          },
          {
            "code": "numeric-required-properties-format",
            "message": "`attemptCount.format` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "attemptCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 554,
                "character": 21
              },
              "end": {
                "line": 555,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`attemptCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "attemptCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 554,
                "character": 21
              },
              "end": {
                "line": 555,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`attemptCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "attemptCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 554,
                "character": 21
              },
              "end": {
                "line": 555,
                "character": 23
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`sourceEvent.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 567,
                "character": 20
              },
              "end": {
                "line": 568,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`sourceEvent.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 567,
                "character": 20
              },
              "end": {
                "line": 568,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 569,
                "character": 14
              },
              "end": {
                "line": 587,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`sourceEvent.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTO",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 20
              },
              "end": {
                "line": 587,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`sourceEvent.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTO",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 20
              },
              "end": {
                "line": 587,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 591,
                "character": 10
              },
              "end": {
                "line": 596,
                "character": 58
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "TicketPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 593,
                "character": 20
              },
              "end": {
                "line": 596,
                "character": 58
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ArchivedTicketPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 600,
                "character": 10
              },
              "end": {
                "line": 605,
                "character": 69
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ArchivedTicketPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 602,
                "character": 20
              },
              "end": {
                "line": 605,
                "character": 69
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`PagedDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 606,
                "character": 13
              },
              "end": {
                "line": 618,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`offset.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 609,
                "character": 15
              },
              "end": {
                "line": 611,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`offset.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 609,
                "character": 15
              },
              "end": {
                "line": 611,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`limit.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 612,
                "character": 14
              },
              "end": {
                "line": 614,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`limit.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 612,
                "character": 14
              },
              "end": {
                "line": 614,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`totalElements.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 615,
                "character": 22
              },
              "end": {
                "line": 617,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`totalElements.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 615,
                "character": 22
              },
              "end": {
                "line": 617,
                "character": 23
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`RetryContextDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 619,
                "character": 20
              },
              "end": {
                "line": 631,
                "character": 22
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "failedSteps"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 622,
                "character": 20
              },
              "end": {
                "line": 625,
                "character": 54
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "skippedSteps"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 626,
                "character": 21
              },
              "end": {
                "line": 629,
                "character": 55
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`additionalInfo.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "additionalInfo"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 630,
                "character": 23
              },
              "end": {
                "line": 631,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`additionalInfo.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "additionalInfo"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 630,
                "character": 23
              },
              "end": {
                "line": 631,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`FailedStepDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 632,
                "character": 18
              },
              "end": {
                "line": 638,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`step.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 635,
                "character": 13
              },
              "end": {
                "line": 636,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`step.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 635,
                "character": 13
              },
              "end": {
                "line": 636,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`error.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 637,
                "character": 14
              },
              "end": {
                "line": 638,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`error.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 637,
                "character": 14
              },
              "end": {
                "line": 638,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`SkippedStepDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 639,
                "character": 19
              },
              "end": {
                "line": 645,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`step.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 642,
                "character": 13
              },
              "end": {
                "line": 643,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`step.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 642,
                "character": 13
              },
              "end": {
                "line": 643,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`reason.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "reason"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 644,
                "character": 15
              },
              "end": {
                "line": 645,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`reason.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "reason"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 644,
                "character": 15
              },
              "end": {
                "line": 645,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ArchivedEventFullInfoDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ArchivedEventFullInfoDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 646,
                "character": 29
              },
              "end": {
                "line": 655,
                "character": 51
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`BlacklistEntryDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 656,
                "character": 22
              },
              "end": {
                "line": 674,
                "character": 53
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ruleCode.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 665,
                "character": 17
              },
              "end": {
                "line": 667,
                "character": 23
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ruleDescription.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "ruleDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 668,
                "character": 24
              },
              "end": {
                "line": 670,
                "character": 24
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "conditions"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 671,
                "character": 19
              },
              "end": {
                "line": 674,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "BlacklistEntriesDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 675,
                "character": 24
              },
              "end": {
                "line": 679,
                "character": 54
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ConditionDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ConditionDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 680,
                "character": 17
              },
              "end": {
                "line": 691,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`jsonField.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "jsonField"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 688,
                "character": 18
              },
              "end": {
                "line": 689,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`jsonField.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "jsonField"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 688,
                "character": 18
              },
              "end": {
                "line": 689,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`regexFilter.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "regexFilter"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 690,
                "character": 20
              },
              "end": {
                "line": 691,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`regexFilter.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "regexFilter"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 690,
                "character": 20
              },
              "end": {
                "line": 691,
                "character": 22
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "BlacklistEntriesResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 692,
                "character": 29
              },
              "end": {
                "line": 697,
                "character": 17
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`BlacklistEntryResponse.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 698,
                "character": 27
              },
              "end": {
                "line": 711,
                "character": 15
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`ruleCode.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 702,
                "character": 17
              },
              "end": {
                "line": 703,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ruleCode.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 702,
                "character": 17
              },
              "end": {
                "line": 703,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`error.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 706,
                "character": 14
              },
              "end": {
                "line": 707,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`error.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 706,
                "character": 14
              },
              "end": {
                "line": 707,
                "character": 22
              }
            }
          }
        ]
      }
    ],
    "documentationValidations": [],
    "lintingGrade": {
      "grade": "D",
      "description": "Inadequate"
    },
    "securityGrade": {
      "grade": "C",
      "description": "Adequate"
    }
  },
  {
    "apiName": "API Statistics",
    "apiProtocol": "REST",
    "apiVersion": "2.1.4",
    "pipelineVersion": "v2",
    "lintValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "ensure-basepath-version",
            "message": "url version should be v2",
            "path": [],
            "severity": 1,
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 434,
                "character": 19
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 20,
                "character": 8
              },
              "end": {
                "line": 48,
                "character": 22
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 25,
                "character": 16
              },
              "end": {
                "line": 36,
                "character": 32
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "responses",
              "200",
              "content",
              "application/json",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 30,
                "character": 21
              },
              "end": {
                "line": 33,
                "character": 55
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 35,
                "character": 14
              },
              "end": {
                "line": 36,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 10
              },
              "end": {
                "line": 43,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 17
              },
              "end": {
                "line": 41,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 17
              },
              "end": {
                "line": 41,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 44,
                "character": 10
              },
              "end": {
                "line": 48,
                "character": 22
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 44,
                "character": 17
              },
              "end": {
                "line": 46,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 44,
                "character": 17
              },
              "end": {
                "line": 46,
                "character": 25
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/apis/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 49,
                "character": 15
              },
              "end": {
                "line": 49,
                "character": 18
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 51,
                "character": 15
              },
              "end": {
                "line": 56,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 52,
                "character": 8
              },
              "end": {
                "line": 56,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 55,
                "character": 15
              },
              "end": {
                "line": 56,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 55,
                "character": 15
              },
              "end": {
                "line": 56,
                "character": 22
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "get"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 57,
                "character": 8
              },
              "end": {
                "line": 72,
                "character": 32
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 63,
                "character": 16
              },
              "end": {
                "line": 72,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 71,
                "character": 14
              },
              "end": {
                "line": 72,
                "character": 32
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 73,
                "character": 9
              },
              "end": {
                "line": 101,
                "character": 51
              }
            }
          },
          {
            "code": "post-http-status-codes-controller",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 78,
                "character": 16
              },
              "end": {
                "line": 96,
                "character": 44
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 79,
                "character": 14
              },
              "end": {
                "line": 80,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 87,
                "character": 14
              },
              "end": {
                "line": 88,
                "character": 34
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [401].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "401"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 89,
                "character": 14
              },
              "end": {
                "line": 90,
                "character": 35
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [403].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "403"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 91,
                "character": 14
              },
              "end": {
                "line": 92,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 93,
                "character": 14
              },
              "end": {
                "line": 94,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 95,
                "character": 14
              },
              "end": {
                "line": 96,
                "character": 44
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 103,
                "character": 15
              },
              "end": {
                "line": 108,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 104,
                "character": 8
              },
              "end": {
                "line": 108,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 107,
                "character": 15
              },
              "end": {
                "line": 108,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 107,
                "character": 15
              },
              "end": {
                "line": 108,
                "character": 22
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 109,
                "character": 9
              },
              "end": {
                "line": 133,
                "character": 32
              }
            }
          },
          {
            "code": "post-http-status-codes-controller",
            "message": "Missing the responses[200] http definition",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 119,
                "character": 16
              },
              "end": {
                "line": 133,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 126,
                "character": 14
              },
              "end": {
                "line": 127,
                "character": 34
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [401].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "401"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 128,
                "character": 14
              },
              "end": {
                "line": 129,
                "character": 35
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [403].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "403"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 130,
                "character": 14
              },
              "end": {
                "line": 131,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 132,
                "character": 14
              },
              "end": {
                "line": 133,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 135,
                "character": 15
              },
              "end": {
                "line": 140,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 136,
                "character": 8
              },
              "end": {
                "line": 140,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 139,
                "character": 15
              },
              "end": {
                "line": 140,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 139,
                "character": 15
              },
              "end": {
                "line": 140,
                "character": 22
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "get"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 141,
                "character": 8
              },
              "end": {
                "line": 168,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 148,
                "character": 10
              },
              "end": {
                "line": 153,
                "character": 24
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 154,
                "character": 10
              },
              "end": {
                "line": 159,
                "character": 24
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 160,
                "character": 16
              },
              "end": {
                "line": 168,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 167,
                "character": 14
              },
              "end": {
                "line": 168,
                "character": 32
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/verticals/activity",
              "get"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 170,
                "character": 8
              },
              "end": {
                "line": 197,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/activity",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 177,
                "character": 10
              },
              "end": {
                "line": 182,
                "character": 24
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/activity",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 183,
                "character": 10
              },
              "end": {
                "line": 188,
                "character": 24
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/v2/verticals/activity",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 189,
                "character": 16
              },
              "end": {
                "line": 197,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/verticals/activity",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 196,
                "character": 14
              },
              "end": {
                "line": 197,
                "character": 32
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 199,
                "character": 8
              },
              "end": {
                "line": 227,
                "character": 22
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 202,
                "character": 16
              },
              "end": {
                "line": 213,
                "character": 32
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "responses",
              "200",
              "content",
              "application/json",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 207,
                "character": 21
              },
              "end": {
                "line": 210,
                "character": 60
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 212,
                "character": 14
              },
              "end": {
                "line": 213,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 218,
                "character": 10
              },
              "end": {
                "line": 222,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 218,
                "character": 17
              },
              "end": {
                "line": 220,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 218,
                "character": 17
              },
              "end": {
                "line": 220,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 10
              },
              "end": {
                "line": 227,
                "character": 22
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 17
              },
              "end": {
                "line": 225,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 17
              },
              "end": {
                "line": 225,
                "character": 25
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 228,
                "character": 15
              },
              "end": {
                "line": 228,
                "character": 18
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 230,
                "character": 15
              },
              "end": {
                "line": 235,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 231,
                "character": 8
              },
              "end": {
                "line": 235,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 231,
                "character": 15
              },
              "end": {
                "line": 232,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 231,
                "character": 15
              },
              "end": {
                "line": 232,
                "character": 22
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "get"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 236,
                "character": 8
              },
              "end": {
                "line": 254,
                "character": 15
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 239,
                "character": 16
              },
              "end": {
                "line": 251,
                "character": 58
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiStats.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiStats"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 261,
                "character": 13
              },
              "end": {
                "line": 293,
                "character": 15
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 276,
                "character": 14
              },
              "end": {
                "line": 277,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 276,
                "character": 14
              },
              "end": {
                "line": 277,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 276,
                "character": 14
              },
              "end": {
                "line": 277,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "verticalId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 278,
                "character": 19
              },
              "end": {
                "line": 279,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 278,
                "character": 19
              },
              "end": {
                "line": 279,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 278,
                "character": 19
              },
              "end": {
                "line": 279,
                "character": 22
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property hasReadme does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "hasReadme"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 280,
                "character": 18
              },
              "end": {
                "line": 281,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "hasReadme doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "hasReadme"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 280,
                "character": 18
              },
              "end": {
                "line": 281,
                "character": 23
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property hasSummary does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "hasSummary"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 282,
                "character": 19
              },
              "end": {
                "line": 283,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "hasSummary doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "hasSummary"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 282,
                "character": 19
              },
              "end": {
                "line": 283,
                "character": 23
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property hasApiPortalConfig does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "hasApiPortalConfig"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 284,
                "character": 27
              },
              "end": {
                "line": 285,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "hasApiPortalConfig doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "hasApiPortalConfig"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 284,
                "character": 27
              },
              "end": {
                "line": 285,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 286,
                "character": 27
              },
              "end": {
                "line": 287,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "bitbucketProjectID doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 286,
                "character": 27
              },
              "end": {
                "line": 287,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`bitbucketProjectID.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 286,
                "character": 27
              },
              "end": {
                "line": 287,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`bitbucketProjectID.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 286,
                "character": 27
              },
              "end": {
                "line": 287,
                "character": 22
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "subapis"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 288,
                "character": 16
              },
              "end": {
                "line": 291,
                "character": 47
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`VerticalStats.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 294,
                "character": 18
              },
              "end": {
                "line": 335,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "verticalId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 298,
                "character": 19
              },
              "end": {
                "line": 299,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 298,
                "character": 19
              },
              "end": {
                "line": 299,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 298,
                "character": 19
              },
              "end": {
                "line": 299,
                "character": 22
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "totalAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 300,
                "character": 22
              },
              "end": {
                "line": 302,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "totalAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "totalAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 300,
                "character": 22
              },
              "end": {
                "line": 302,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`totalAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "totalAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 300,
                "character": 22
              },
              "end": {
                "line": 302,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`totalAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "totalAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 300,
                "character": 22
              },
              "end": {
                "line": 302,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "openapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 303,
                "character": 24
              },
              "end": {
                "line": 305,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "openapiAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "openapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 303,
                "character": 24
              },
              "end": {
                "line": 305,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`openapiAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "openapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 303,
                "character": 24
              },
              "end": {
                "line": 305,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`openapiAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "openapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 303,
                "character": 24
              },
              "end": {
                "line": 305,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "swaggerAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 306,
                "character": 24
              },
              "end": {
                "line": 308,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "swaggerAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "swaggerAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 306,
                "character": 24
              },
              "end": {
                "line": 308,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`swaggerAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "swaggerAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 306,
                "character": 24
              },
              "end": {
                "line": 308,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`swaggerAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "swaggerAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 306,
                "character": 24
              },
              "end": {
                "line": 308,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "graphqlAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 309,
                "character": 24
              },
              "end": {
                "line": 311,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "graphqlAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "graphqlAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 309,
                "character": 24
              },
              "end": {
                "line": 311,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`graphqlAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "graphqlAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 309,
                "character": 24
              },
              "end": {
                "line": 311,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`graphqlAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "graphqlAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 309,
                "character": 24
              },
              "end": {
                "line": 311,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "soapAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 21
              },
              "end": {
                "line": 314,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "soapAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "soapAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 21
              },
              "end": {
                "line": 314,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`soapAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "soapAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 21
              },
              "end": {
                "line": 314,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`soapAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "soapAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 21
              },
              "end": {
                "line": 314,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "grpcAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 315,
                "character": 21
              },
              "end": {
                "line": 317,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "grpcAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "grpcAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 315,
                "character": 21
              },
              "end": {
                "line": 317,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`grpcAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "grpcAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 315,
                "character": 21
              },
              "end": {
                "line": 317,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`grpcAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "grpcAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 315,
                "character": 21
              },
              "end": {
                "line": 317,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "avroAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 318,
                "character": 21
              },
              "end": {
                "line": 320,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "avroAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "avroAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 318,
                "character": 21
              },
              "end": {
                "line": 320,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`avroAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "avroAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 318,
                "character": 21
              },
              "end": {
                "line": 320,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`avroAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "avroAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 318,
                "character": 21
              },
              "end": {
                "line": 320,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "asyncapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 321,
                "character": 25
              },
              "end": {
                "line": 323,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "asyncapiAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "asyncapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 321,
                "character": 25
              },
              "end": {
                "line": 323,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`asyncapiAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "asyncapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 321,
                "character": 25
              },
              "end": {
                "line": 323,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`asyncapiAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "asyncapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 321,
                "character": 25
              },
              "end": {
                "line": 323,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiHasReadmeCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasReadmeCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 324,
                "character": 26
              },
              "end": {
                "line": 326,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apiHasReadmeCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasReadmeCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 324,
                "character": 26
              },
              "end": {
                "line": 326,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`apiHasReadmeCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasReadmeCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 324,
                "character": 26
              },
              "end": {
                "line": 326,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiHasSummaryCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasSummaryCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 327,
                "character": 27
              },
              "end": {
                "line": 329,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apiHasSummaryCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasSummaryCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 327,
                "character": 27
              },
              "end": {
                "line": 329,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`apiHasSummaryCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasSummaryCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 327,
                "character": 27
              },
              "end": {
                "line": 329,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "commentsCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 330,
                "character": 22
              },
              "end": {
                "line": 332,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`commentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 330,
                "character": 22
              },
              "end": {
                "line": 332,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`commentsCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 330,
                "character": 22
              },
              "end": {
                "line": 332,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apisWithCommentsCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 333,
                "character": 30
              },
              "end": {
                "line": 335,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apisWithCommentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 333,
                "character": 30
              },
              "end": {
                "line": 335,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`apisWithCommentsCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 333,
                "character": 30
              },
              "end": {
                "line": 335,
                "character": 23
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiComments.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiComments"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 336,
                "character": 16
              },
              "end": {
                "line": 364,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "verticalId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 341,
                "character": 19
              },
              "end": {
                "line": 343,
                "character": 76
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 341,
                "character": 19
              },
              "end": {
                "line": 343,
                "character": 76
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 341,
                "character": 19
              },
              "end": {
                "line": 343,
                "character": 76
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 344,
                "character": 27
              },
              "end": {
                "line": 346,
                "character": 131
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "bitbucketProjectID doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 344,
                "character": 27
              },
              "end": {
                "line": 346,
                "character": 131
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`bitbucketProjectID.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 344,
                "character": 27
              },
              "end": {
                "line": 346,
                "character": 131
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`bitbucketProjectID.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 344,
                "character": 27
              },
              "end": {
                "line": 346,
                "character": 131
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 347,
                "character": 14
              },
              "end": {
                "line": 349,
                "character": 67
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 347,
                "character": 14
              },
              "end": {
                "line": 349,
                "character": 67
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 347,
                "character": 14
              },
              "end": {
                "line": 349,
                "character": 67
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "commentsCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 350,
                "character": 22
              },
              "end": {
                "line": 354,
                "character": 55
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`commentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 350,
                "character": 22
              },
              "end": {
                "line": 354,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "commentsDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "commentsDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 355,
                "character": 21
              },
              "end": {
                "line": 358,
                "character": 54
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`SubApi.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "SubApi"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 365,
                "character": 11
              },
              "end": {
                "line": 383,
                "character": 18
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "name doesn't have an example",
            "path": [
              "components",
              "schemas",
              "SubApi",
              "properties",
              "name"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 369,
                "character": 13
              },
              "end": {
                "line": 370,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`name.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SubApi",
              "properties",
              "name"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 369,
                "character": 13
              },
              "end": {
                "line": 370,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`name.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SubApi",
              "properties",
              "name"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 369,
                "character": 13
              },
              "end": {
                "line": 370,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "protocol doesn't have an example",
            "path": [
              "components",
              "schemas",
              "SubApi",
              "properties",
              "protocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 371,
                "character": 17
              },
              "end": {
                "line": 380,
                "character": 18
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`VerticalActivity.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalActivity"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 384,
                "character": 21
              },
              "end": {
                "line": 414,
                "character": 31
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "verticalId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 388,
                "character": 19
              },
              "end": {
                "line": 390,
                "character": 44
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 388,
                "character": 19
              },
              "end": {
                "line": 390,
                "character": 44
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 388,
                "character": 19
              },
              "end": {
                "line": 390,
                "character": 44
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "fromDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "fromDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 391,
                "character": 17
              },
              "end": {
                "line": 394,
                "character": 38
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "toDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "toDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 395,
                "character": 15
              },
              "end": {
                "line": 398,
                "character": 36
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apisCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "apisCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 399,
                "character": 18
              },
              "end": {
                "line": 403,
                "character": 52
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apisCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "apisCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 399,
                "character": 18
              },
              "end": {
                "line": 403,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apisWithCommentsCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 404,
                "character": 30
              },
              "end": {
                "line": 408,
                "character": 83
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apisWithCommentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 404,
                "character": 30
              },
              "end": {
                "line": 408,
                "character": 83
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`VerticalsActivity.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalsActivity"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 415,
                "character": 22
              },
              "end": {
                "line": 434,
                "character": 19
              }
            }
          }
        ]
      }
    ],
    "securityValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "responses",
              "200",
              "content",
              "application/json",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 30,
                "character": 21
              },
              "end": {
                "line": 33,
                "character": 55
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 35,
                "character": 14
              },
              "end": {
                "line": 36,
                "character": 32
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 17
              },
              "end": {
                "line": 41,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 17
              },
              "end": {
                "line": 41,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 44,
                "character": 17
              },
              "end": {
                "line": 46,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 44,
                "character": 17
              },
              "end": {
                "line": 46,
                "character": 25
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/apis/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 49,
                "character": 15
              },
              "end": {
                "line": 49,
                "character": 18
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 51,
                "character": 15
              },
              "end": {
                "line": 56,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 55,
                "character": 15
              },
              "end": {
                "line": 56,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 55,
                "character": 15
              },
              "end": {
                "line": 56,
                "character": 22
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 71,
                "character": 14
              },
              "end": {
                "line": 72,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 79,
                "character": 14
              },
              "end": {
                "line": 80,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 87,
                "character": 14
              },
              "end": {
                "line": 88,
                "character": 34
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [401].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "401"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 89,
                "character": 14
              },
              "end": {
                "line": 90,
                "character": 35
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [403].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "403"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 91,
                "character": 14
              },
              "end": {
                "line": 92,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 93,
                "character": 14
              },
              "end": {
                "line": 94,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 95,
                "character": 14
              },
              "end": {
                "line": 96,
                "character": 44
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 103,
                "character": 15
              },
              "end": {
                "line": 108,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 107,
                "character": 15
              },
              "end": {
                "line": 108,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 107,
                "character": 15
              },
              "end": {
                "line": 108,
                "character": 22
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 126,
                "character": 14
              },
              "end": {
                "line": 127,
                "character": 34
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [401].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "401"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 128,
                "character": 14
              },
              "end": {
                "line": 129,
                "character": 35
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [403].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "403"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 130,
                "character": 14
              },
              "end": {
                "line": 131,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 132,
                "character": 14
              },
              "end": {
                "line": 133,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 135,
                "character": 15
              },
              "end": {
                "line": 140,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 139,
                "character": 15
              },
              "end": {
                "line": 140,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 139,
                "character": 15
              },
              "end": {
                "line": 140,
                "character": 22
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 167,
                "character": 14
              },
              "end": {
                "line": 168,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/verticals/activity",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 196,
                "character": 14
              },
              "end": {
                "line": 197,
                "character": 32
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "responses",
              "200",
              "content",
              "application/json",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 207,
                "character": 21
              },
              "end": {
                "line": 210,
                "character": 60
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 212,
                "character": 14
              },
              "end": {
                "line": 213,
                "character": 32
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 218,
                "character": 17
              },
              "end": {
                "line": 220,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 218,
                "character": 17
              },
              "end": {
                "line": 220,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 17
              },
              "end": {
                "line": 225,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 17
              },
              "end": {
                "line": 225,
                "character": 25
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 228,
                "character": 15
              },
              "end": {
                "line": 228,
                "character": 18
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 230,
                "character": 15
              },
              "end": {
                "line": 235,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 231,
                "character": 15
              },
              "end": {
                "line": 232,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 231,
                "character": 15
              },
              "end": {
                "line": 232,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiStats.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiStats"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 261,
                "character": 13
              },
              "end": {
                "line": 293,
                "character": 15
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 276,
                "character": 14
              },
              "end": {
                "line": 277,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 276,
                "character": 14
              },
              "end": {
                "line": 277,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 278,
                "character": 19
              },
              "end": {
                "line": 279,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 278,
                "character": 19
              },
              "end": {
                "line": 279,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`bitbucketProjectID.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 286,
                "character": 27
              },
              "end": {
                "line": 287,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`bitbucketProjectID.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 286,
                "character": 27
              },
              "end": {
                "line": 287,
                "character": 22
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "subapis"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 288,
                "character": 16
              },
              "end": {
                "line": 291,
                "character": 47
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`VerticalStats.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 294,
                "character": 18
              },
              "end": {
                "line": 335,
                "character": 23
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 298,
                "character": 19
              },
              "end": {
                "line": 299,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 298,
                "character": 19
              },
              "end": {
                "line": 299,
                "character": 22
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`totalAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "totalAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 300,
                "character": 22
              },
              "end": {
                "line": 302,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`totalAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "totalAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 300,
                "character": 22
              },
              "end": {
                "line": 302,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`openapiAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "openapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 303,
                "character": 24
              },
              "end": {
                "line": 305,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`openapiAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "openapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 303,
                "character": 24
              },
              "end": {
                "line": 305,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`swaggerAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "swaggerAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 306,
                "character": 24
              },
              "end": {
                "line": 308,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`swaggerAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "swaggerAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 306,
                "character": 24
              },
              "end": {
                "line": 308,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`graphqlAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "graphqlAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 309,
                "character": 24
              },
              "end": {
                "line": 311,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`graphqlAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "graphqlAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 309,
                "character": 24
              },
              "end": {
                "line": 311,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`soapAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "soapAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 21
              },
              "end": {
                "line": 314,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`soapAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "soapAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 21
              },
              "end": {
                "line": 314,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`grpcAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "grpcAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 315,
                "character": 21
              },
              "end": {
                "line": 317,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`grpcAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "grpcAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 315,
                "character": 21
              },
              "end": {
                "line": 317,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`avroAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "avroAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 318,
                "character": 21
              },
              "end": {
                "line": 320,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`avroAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "avroAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 318,
                "character": 21
              },
              "end": {
                "line": 320,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`asyncapiAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "asyncapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 321,
                "character": 25
              },
              "end": {
                "line": 323,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`asyncapiAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "asyncapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 321,
                "character": 25
              },
              "end": {
                "line": 323,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apiHasReadmeCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasReadmeCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 324,
                "character": 26
              },
              "end": {
                "line": 326,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`apiHasReadmeCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasReadmeCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 324,
                "character": 26
              },
              "end": {
                "line": 326,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apiHasSummaryCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasSummaryCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 327,
                "character": 27
              },
              "end": {
                "line": 329,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`apiHasSummaryCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasSummaryCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 327,
                "character": 27
              },
              "end": {
                "line": 329,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`commentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 330,
                "character": 22
              },
              "end": {
                "line": 332,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`commentsCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 330,
                "character": 22
              },
              "end": {
                "line": 332,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apisWithCommentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 333,
                "character": 30
              },
              "end": {
                "line": 335,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`apisWithCommentsCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 333,
                "character": 30
              },
              "end": {
                "line": 335,
                "character": 23
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiComments.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiComments"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 336,
                "character": 16
              },
              "end": {
                "line": 364,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 341,
                "character": 19
              },
              "end": {
                "line": 343,
                "character": 76
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 341,
                "character": 19
              },
              "end": {
                "line": 343,
                "character": 76
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`bitbucketProjectID.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 344,
                "character": 27
              },
              "end": {
                "line": 346,
                "character": 131
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`bitbucketProjectID.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 344,
                "character": 27
              },
              "end": {
                "line": 346,
                "character": 131
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 347,
                "character": 14
              },
              "end": {
                "line": 349,
                "character": 67
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 347,
                "character": 14
              },
              "end": {
                "line": 349,
                "character": 67
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`commentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 350,
                "character": 22
              },
              "end": {
                "line": 354,
                "character": 55
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`SubApi.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "SubApi"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 365,
                "character": 11
              },
              "end": {
                "line": 383,
                "character": 18
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`name.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SubApi",
              "properties",
              "name"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 369,
                "character": 13
              },
              "end": {
                "line": 370,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`name.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SubApi",
              "properties",
              "name"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 369,
                "character": 13
              },
              "end": {
                "line": 370,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`VerticalActivity.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalActivity"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 384,
                "character": 21
              },
              "end": {
                "line": 414,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 388,
                "character": 19
              },
              "end": {
                "line": 390,
                "character": 44
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 388,
                "character": 19
              },
              "end": {
                "line": 390,
                "character": 44
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apisCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "apisCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 399,
                "character": 18
              },
              "end": {
                "line": 403,
                "character": 52
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apisWithCommentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 404,
                "character": 30
              },
              "end": {
                "line": 408,
                "character": 83
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`VerticalsActivity.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalsActivity"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 415,
                "character": 22
              },
              "end": {
                "line": 434,
                "character": 19
              }
            }
          }
        ]
      }
    ],
    "documentationValidations": [],
    "lintingGrade": {
      "grade": "C",
      "description": "Adequate"
    },
    "securityGrade": {
      "grade": "B",
      "description": "Good"
    }
  },
  {
    "apiName": "API Certification",
    "apiProtocol": "REST",
    "apiVersion": "1.0.0",
    "pipelineVersion": "v2",
    "lintValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "oas3-unused-components-schema",
            "message": "Potentially unused components schema has been detected.",
            "path": [
              "components",
              "schemas",
              "rulesetBinary"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 487,
                "character": 18
              },
              "end": {
                "line": 491,
                "character": 41
              }
            }
          },
          {
            "code": "oas3-unused-components-schema",
            "message": "Potentially unused components schema has been detected.",
            "path": [
              "components",
              "schemas",
              "validationRequestFileURL"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 571,
                "character": 29
              },
              "end": {
                "line": 616,
                "character": 24
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "arrayOfValidationResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 663,
                "character": 30
              },
              "end": {
                "line": 666,
                "character": 55
              }
            }
          }
        ]
      }
    ],
    "securityValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "arrayOfValidationResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 663,
                "character": 30
              },
              "end": {
                "line": 666,
                "character": 55
              }
            }
          }
        ]
      }
    ],
    "documentationValidations": [],
    "lintingGrade": {
      "grade": "A",
      "description": "Very Good"
    },
    "securityGrade": {
      "grade": "A",
      "description": "Very Good"
    }
  },
  {
    "apiName": "API Arrow",
    "apiProtocol": "REST",
    "apiVersion": "1.25.0",
    "pipelineVersion": "v2",
    "lintValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "ensure-basepath-version",
            "message": "url version should be v1",
            "path": [],
            "severity": 1,
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 1501,
                "character": 25
              }
            }
          },
          {
            "code": "global-security",
            "message": "Global 'security' field is not defined",
            "path": [],
            "severity": 0,
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 1501,
                "character": 25
              }
            }
          },
          {
            "code": "contact-email",
            "message": "Definition must have a contact email",
            "path": [
              "info"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1,
                "character": 5
              },
              "end": {
                "line": 3,
                "character": 19
              }
            }
          },
          {
            "code": "info-contact",
            "message": "Info object should contain `contact` object.",
            "path": [
              "info"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1,
                "character": 5
              },
              "end": {
                "line": 3,
                "character": 19
              }
            }
          },
          {
            "code": "info-description",
            "message": "OpenAPI object info `description` must be present and non-empty string.",
            "path": [
              "info"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1,
                "character": 5
              },
              "end": {
                "line": 3,
                "character": 19
              }
            }
          },
          {
            "code": "server-https",
            "message": "Server objects should support https",
            "path": [
              "servers",
              "1",
              "url"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 7,
                "character": 9
              },
              "end": {
                "line": 7,
                "character": 76
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 20,
                "character": 15
              },
              "end": {
                "line": 21,
                "character": 45
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 21,
                "character": 8
              },
              "end": {
                "line": 21,
                "character": 45
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 26,
                "character": 16
              },
              "end": {
                "line": 34,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 33,
                "character": 14
              },
              "end": {
                "line": 34,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 38,
                "character": 10
              },
              "end": {
                "line": 38,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 10
              },
              "end": {
                "line": 39,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 40,
                "character": 10
              },
              "end": {
                "line": 40,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 41,
                "character": 10
              },
              "end": {
                "line": 41,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 42,
                "character": 10
              },
              "end": {
                "line": 42,
                "character": 49
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 43,
                "character": 10
              },
              "end": {
                "line": 43,
                "character": 59
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 45,
                "character": 15
              },
              "end": {
                "line": 47,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 46,
                "character": 8
              },
              "end": {
                "line": 46,
                "character": 45
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 47,
                "character": 8
              },
              "end": {
                "line": 47,
                "character": 47
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 52,
                "character": 16
              },
              "end": {
                "line": 60,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 59,
                "character": 14
              },
              "end": {
                "line": 60,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 64,
                "character": 10
              },
              "end": {
                "line": 64,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 65,
                "character": 10
              },
              "end": {
                "line": 65,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 66,
                "character": 10
              },
              "end": {
                "line": 66,
                "character": 53
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 68,
                "character": 15
              },
              "end": {
                "line": 73,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 69,
                "character": 8
              },
              "end": {
                "line": 69,
                "character": 45
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 70,
                "character": 8
              },
              "end": {
                "line": 70,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 71,
                "character": 8
              },
              "end": {
                "line": 71,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 72,
                "character": 8
              },
              "end": {
                "line": 72,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 73,
                "character": 8
              },
              "end": {
                "line": 73,
                "character": 57
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 78,
                "character": 16
              },
              "end": {
                "line": 86,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 85,
                "character": 14
              },
              "end": {
                "line": 86,
                "character": 32
              }
            }
          },
          {
            "code": "put-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "put",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 92,
                "character": 16
              },
              "end": {
                "line": 100,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 99,
                "character": 14
              },
              "end": {
                "line": 100,
                "character": 32
              }
            }
          },
          {
            "code": "delete-http-status-codes-resource",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "delete",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 112,
                "character": 16
              },
              "end": {
                "line": 116,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 113,
                "character": 14
              },
              "end": {
                "line": 114,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 115,
                "character": 14
              },
              "end": {
                "line": 116,
                "character": 32
              }
            }
          },
          {
            "code": "post-http-status-codes-collections",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api",
              "post",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 124,
                "character": 16
              },
              "end": {
                "line": 128,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/api",
              "post",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 125,
                "character": 14
              },
              "end": {
                "line": 126,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 127,
                "character": 14
              },
              "end": {
                "line": 128,
                "character": 37
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 140,
                "character": 15
              },
              "end": {
                "line": 145,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 141,
                "character": 8
              },
              "end": {
                "line": 141,
                "character": 45
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 142,
                "character": 8
              },
              "end": {
                "line": 142,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 143,
                "character": 8
              },
              "end": {
                "line": 143,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 144,
                "character": 8
              },
              "end": {
                "line": 144,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 145,
                "character": 8
              },
              "end": {
                "line": 145,
                "character": 57
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 150,
                "character": 16
              },
              "end": {
                "line": 160,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 157,
                "character": 14
              },
              "end": {
                "line": 158,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 159,
                "character": 14
              },
              "end": {
                "line": 160,
                "character": 37
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 164,
                "character": 10
              },
              "end": {
                "line": 164,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 165,
                "character": 10
              },
              "end": {
                "line": 165,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 166,
                "character": 10
              },
              "end": {
                "line": 166,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 167,
                "character": 10
              },
              "end": {
                "line": 167,
                "character": 53
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 168,
                "character": 10
              },
              "end": {
                "line": 168,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 169,
                "character": 10
              },
              "end": {
                "line": 169,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 170,
                "character": 10
              },
              "end": {
                "line": 170,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[7].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "parameters",
              "7"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 171,
                "character": 10
              },
              "end": {
                "line": 171,
                "character": 46
              }
            }
          },
          {
            "code": "put-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "put",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 175,
                "character": 16
              },
              "end": {
                "line": 181,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "put",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 176,
                "character": 14
              },
              "end": {
                "line": 177,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 178,
                "character": 14
              },
              "end": {
                "line": 179,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "put",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 180,
                "character": 14
              },
              "end": {
                "line": 181,
                "character": 37
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 192,
                "character": 15
              },
              "end": {
                "line": 204,
                "character": 44
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 193,
                "character": 8
              },
              "end": {
                "line": 193,
                "character": 45
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 194,
                "character": 8
              },
              "end": {
                "line": 194,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 195,
                "character": 8
              },
              "end": {
                "line": 195,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 196,
                "character": 8
              },
              "end": {
                "line": 196,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 197,
                "character": 8
              },
              "end": {
                "line": 197,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 198,
                "character": 8
              },
              "end": {
                "line": 198,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 199,
                "character": 8
              },
              "end": {
                "line": 199,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[7].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "7"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 200,
                "character": 8
              },
              "end": {
                "line": 200,
                "character": 51
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[8].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "8"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 201,
                "character": 8
              },
              "end": {
                "line": 201,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[9].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "9"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 202,
                "character": 8
              },
              "end": {
                "line": 202,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[10].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "10"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 203,
                "character": 8
              },
              "end": {
                "line": 203,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[11].example` property is not truthy",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters",
              "11"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 204,
                "character": 8
              },
              "end": {
                "line": 204,
                "character": 44
              }
            }
          },
          {
            "code": "delete-http-status-codes-resource",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "delete",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 208,
                "character": 16
              },
              "end": {
                "line": 214,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 209,
                "character": 14
              },
              "end": {
                "line": 210,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 211,
                "character": 14
              },
              "end": {
                "line": 212,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "delete",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 213,
                "character": 14
              },
              "end": {
                "line": 214,
                "character": 37
              }
            }
          },
          {
            "code": "post-http-status-codes-collections",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/consumers",
              "post",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 222,
                "character": 16
              },
              "end": {
                "line": 228,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/consumers",
              "post",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 14
              },
              "end": {
                "line": 224,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/consumers",
              "post",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 225,
                "character": 14
              },
              "end": {
                "line": 226,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/consumers",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 227,
                "character": 14
              },
              "end": {
                "line": 228,
                "character": 37
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 239,
                "character": 15
              },
              "end": {
                "line": 245,
                "character": 44
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 240,
                "character": 8
              },
              "end": {
                "line": 240,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 241,
                "character": 8
              },
              "end": {
                "line": 241,
                "character": 51
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 242,
                "character": 8
              },
              "end": {
                "line": 242,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 243,
                "character": 8
              },
              "end": {
                "line": 243,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 244,
                "character": 8
              },
              "end": {
                "line": 244,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 245,
                "character": 8
              },
              "end": {
                "line": 245,
                "character": 44
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 248,
                "character": 16
              },
              "end": {
                "line": 256,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 255,
                "character": 14
              },
              "end": {
                "line": 256,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 260,
                "character": 10
              },
              "end": {
                "line": 260,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 261,
                "character": 10
              },
              "end": {
                "line": 261,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 262,
                "character": 10
              },
              "end": {
                "line": 262,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 263,
                "character": 10
              },
              "end": {
                "line": 263,
                "character": 53
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 264,
                "character": 10
              },
              "end": {
                "line": 264,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 265,
                "character": 10
              },
              "end": {
                "line": 265,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 266,
                "character": 10
              },
              "end": {
                "line": 266,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[7].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "parameters",
              "7"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 267,
                "character": 10
              },
              "end": {
                "line": 267,
                "character": 46
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 271,
                "character": 15
              },
              "end": {
                "line": 272,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 272,
                "character": 8
              },
              "end": {
                "line": 272,
                "character": 50
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 275,
                "character": 16
              },
              "end": {
                "line": 283,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 282,
                "character": 14
              },
              "end": {
                "line": 283,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 287,
                "character": 10
              },
              "end": {
                "line": 287,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 288,
                "character": 10
              },
              "end": {
                "line": 288,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 289,
                "character": 10
              },
              "end": {
                "line": 289,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 290,
                "character": 10
              },
              "end": {
                "line": 290,
                "character": 53
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 291,
                "character": 10
              },
              "end": {
                "line": 291,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 292,
                "character": 10
              },
              "end": {
                "line": 292,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 293,
                "character": 10
              },
              "end": {
                "line": 293,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[7].example` property is not truthy",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "parameters",
              "7"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 294,
                "character": 10
              },
              "end": {
                "line": 294,
                "character": 46
              }
            }
          },
          {
            "code": "nesting-level",
            "message": "You should use max of 3 sub-resource (nesting) levels",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 297,
                "character": 96
              },
              "end": {
                "line": 345,
                "character": 20
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 298,
                "character": 15
              },
              "end": {
                "line": 302,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 299,
                "character": 8
              },
              "end": {
                "line": 299,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 300,
                "character": 8
              },
              "end": {
                "line": 300,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 301,
                "character": 8
              },
              "end": {
                "line": 301,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 302,
                "character": 8
              },
              "end": {
                "line": 302,
                "character": 47
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 305,
                "character": 16
              },
              "end": {
                "line": 313,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 14
              },
              "end": {
                "line": 313,
                "character": 32
              }
            }
          },
          {
            "code": "delete-http-status-codes-resource",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "delete",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 321,
                "character": 16
              },
              "end": {
                "line": 325,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 322,
                "character": 14
              },
              "end": {
                "line": 323,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 324,
                "character": 14
              },
              "end": {
                "line": 325,
                "character": 32
              }
            }
          },
          {
            "code": "put-http-status-codes-resource",
            "message": "Missing the responses[401] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "put",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 332,
                "character": 16
              },
              "end": {
                "line": 336,
                "character": 55
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "put",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 333,
                "character": 14
              },
              "end": {
                "line": 334,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "put",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 335,
                "character": 14
              },
              "end": {
                "line": 336,
                "character": 55
              }
            }
          },
          {
            "code": "nesting-level",
            "message": "You should use max of 3 sub-resource (nesting) levels",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 346,
                "character": 106
              },
              "end": {
                "line": 366,
                "character": 20
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 347,
                "character": 15
              },
              "end": {
                "line": 351,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 348,
                "character": 8
              },
              "end": {
                "line": 348,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 349,
                "character": 8
              },
              "end": {
                "line": 349,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 350,
                "character": 8
              },
              "end": {
                "line": 350,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 351,
                "character": 8
              },
              "end": {
                "line": 351,
                "character": 47
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 354,
                "character": 16
              },
              "end": {
                "line": 362,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 361,
                "character": 14
              },
              "end": {
                "line": 362,
                "character": 32
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 370,
                "character": 16
              },
              "end": {
                "line": 378,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 377,
                "character": 14
              },
              "end": {
                "line": 378,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 382,
                "character": 10
              },
              "end": {
                "line": 382,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 383,
                "character": 10
              },
              "end": {
                "line": 383,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 384,
                "character": 10
              },
              "end": {
                "line": 384,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 385,
                "character": 10
              },
              "end": {
                "line": 385,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 386,
                "character": 10
              },
              "end": {
                "line": 386,
                "character": 58
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 387,
                "character": 10
              },
              "end": {
                "line": 387,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 388,
                "character": 10
              },
              "end": {
                "line": 388,
                "character": 63
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 392,
                "character": 15
              },
              "end": {
                "line": 393,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 393,
                "character": 8
              },
              "end": {
                "line": 393,
                "character": 50
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 396,
                "character": 16
              },
              "end": {
                "line": 404,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 403,
                "character": 14
              },
              "end": {
                "line": 404,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 408,
                "character": 10
              },
              "end": {
                "line": 408,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 409,
                "character": 10
              },
              "end": {
                "line": 409,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 410,
                "character": 10
              },
              "end": {
                "line": 410,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 411,
                "character": 10
              },
              "end": {
                "line": 411,
                "character": 58
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 412,
                "character": 10
              },
              "end": {
                "line": 412,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 413,
                "character": 10
              },
              "end": {
                "line": 413,
                "character": 63
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 417,
                "character": 15
              },
              "end": {
                "line": 418,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 418,
                "character": 8
              },
              "end": {
                "line": 418,
                "character": 50
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 421,
                "character": 16
              },
              "end": {
                "line": 429,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 428,
                "character": 14
              },
              "end": {
                "line": 429,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 433,
                "character": 10
              },
              "end": {
                "line": 433,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 434,
                "character": 10
              },
              "end": {
                "line": 434,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 435,
                "character": 10
              },
              "end": {
                "line": 435,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 436,
                "character": 10
              },
              "end": {
                "line": 436,
                "character": 58
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 437,
                "character": 10
              },
              "end": {
                "line": 437,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 438,
                "character": 10
              },
              "end": {
                "line": 438,
                "character": 63
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 442,
                "character": 15
              },
              "end": {
                "line": 443,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 443,
                "character": 8
              },
              "end": {
                "line": 443,
                "character": 50
              }
            }
          },
          {
            "code": "delete-http-status-codes-resource",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 447,
                "character": 16
              },
              "end": {
                "line": 453,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 448,
                "character": 14
              },
              "end": {
                "line": 449,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 450,
                "character": 14
              },
              "end": {
                "line": 451,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [501].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses",
              "501"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 452,
                "character": 14
              },
              "end": {
                "line": 453,
                "character": 32
              }
            }
          },
          {
            "code": "well-understood-http-status-codes",
            "message": "501 is not a well-understood HTTP status code",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses",
              "501"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 452,
                "character": 14
              },
              "end": {
                "line": 453,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 456,
                "character": 10
              },
              "end": {
                "line": 456,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 457,
                "character": 10
              },
              "end": {
                "line": 457,
                "character": 58
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 458,
                "character": 10
              },
              "end": {
                "line": 458,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 459,
                "character": 10
              },
              "end": {
                "line": 459,
                "character": 63
              }
            }
          },
          {
            "code": "nesting-level",
            "message": "You should use max of 3 sub-resource (nesting) levels",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 462,
                "character": 106
              },
              "end": {
                "line": 485,
                "character": 20
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 463,
                "character": 15
              },
              "end": {
                "line": 467,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 464,
                "character": 8
              },
              "end": {
                "line": 464,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 465,
                "character": 8
              },
              "end": {
                "line": 465,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 466,
                "character": 8
              },
              "end": {
                "line": 466,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 467,
                "character": 8
              },
              "end": {
                "line": 467,
                "character": 47
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 470,
                "character": 16
              },
              "end": {
                "line": 478,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 477,
                "character": 14
              },
              "end": {
                "line": 478,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 482,
                "character": 10
              },
              "end": {
                "line": 482,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 483,
                "character": 10
              },
              "end": {
                "line": 483,
                "character": 47
              }
            }
          },
          {
            "code": "nesting-level",
            "message": "You should use max of 3 sub-resource (nesting) levels",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 486,
                "character": 112
              },
              "end": {
                "line": 509,
                "character": 20
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 487,
                "character": 15
              },
              "end": {
                "line": 491,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 488,
                "character": 8
              },
              "end": {
                "line": 488,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 489,
                "character": 8
              },
              "end": {
                "line": 489,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 490,
                "character": 8
              },
              "end": {
                "line": 490,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 491,
                "character": 8
              },
              "end": {
                "line": 491,
                "character": 47
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 494,
                "character": 16
              },
              "end": {
                "line": 502,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 501,
                "character": 14
              },
              "end": {
                "line": 502,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 506,
                "character": 10
              },
              "end": {
                "line": 506,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 507,
                "character": 10
              },
              "end": {
                "line": 507,
                "character": 47
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 511,
                "character": 15
              },
              "end": {
                "line": 512,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 512,
                "character": 8
              },
              "end": {
                "line": 512,
                "character": 50
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 515,
                "character": 16
              },
              "end": {
                "line": 523,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 522,
                "character": 14
              },
              "end": {
                "line": 523,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 527,
                "character": 10
              },
              "end": {
                "line": 527,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 528,
                "character": 10
              },
              "end": {
                "line": 528,
                "character": 54
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 529,
                "character": 10
              },
              "end": {
                "line": 529,
                "character": 58
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 530,
                "character": 10
              },
              "end": {
                "line": 530,
                "character": 53
              }
            }
          },
          {
            "code": "nesting-level",
            "message": "You should use max of 3 sub-resource (nesting) levels",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 533,
                "character": 123
              },
              "end": {
                "line": 596,
                "character": 23
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 534,
                "character": 15
              },
              "end": {
                "line": 539,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 535,
                "character": 8
              },
              "end": {
                "line": 535,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 536,
                "character": 8
              },
              "end": {
                "line": 536,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 537,
                "character": 8
              },
              "end": {
                "line": 537,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 538,
                "character": 8
              },
              "end": {
                "line": 538,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 539,
                "character": 8
              },
              "end": {
                "line": 539,
                "character": 48
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 542,
                "character": 16
              },
              "end": {
                "line": 550,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 549,
                "character": 14
              },
              "end": {
                "line": 550,
                "character": 32
              }
            }
          },
          {
            "code": "delete-http-status-codes-resource",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "delete",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 558,
                "character": 16
              },
              "end": {
                "line": 562,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 559,
                "character": 14
              },
              "end": {
                "line": 560,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 561,
                "character": 14
              },
              "end": {
                "line": 562,
                "character": 32
              }
            }
          },
          {
            "code": "put-http-status-codes-resource",
            "message": "Missing the responses[401] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 569,
                "character": 16
              },
              "end": {
                "line": 587,
                "character": 101
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 582,
                "character": 14
              },
              "end": {
                "line": 583,
                "character": 55
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 584,
                "character": 14
              },
              "end": {
                "line": 585,
                "character": 57
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [409].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses",
              "409"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 14
              },
              "end": {
                "line": 587,
                "character": 101
              }
            }
          },
          {
            "code": "well-understood-http-status-codes",
            "message": "409 is not a well-understood HTTP status code for PUT",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses",
              "409"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 14
              },
              "end": {
                "line": 587,
                "character": 101
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 600,
                "character": 16
              },
              "end": {
                "line": 608,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 607,
                "character": 14
              },
              "end": {
                "line": 608,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 612,
                "character": 10
              },
              "end": {
                "line": 612,
                "character": 64
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 613,
                "character": 10
              },
              "end": {
                "line": 613,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 614,
                "character": 10
              },
              "end": {
                "line": 614,
                "character": 53
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 615,
                "character": 10
              },
              "end": {
                "line": 615,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 616,
                "character": 10
              },
              "end": {
                "line": 616,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 617,
                "character": 10
              },
              "end": {
                "line": 617,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 618,
                "character": 10
              },
              "end": {
                "line": 618,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[7].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "parameters",
              "7"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 619,
                "character": 10
              },
              "end": {
                "line": 619,
                "character": 47
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 623,
                "character": 15
              },
              "end": {
                "line": 624,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 624,
                "character": 8
              },
              "end": {
                "line": 624,
                "character": 52
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 627,
                "character": 16
              },
              "end": {
                "line": 635,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 634,
                "character": 14
              },
              "end": {
                "line": 635,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 639,
                "character": 10
              },
              "end": {
                "line": 639,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 640,
                "character": 10
              },
              "end": {
                "line": 640,
                "character": 53
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 641,
                "character": 10
              },
              "end": {
                "line": 641,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 642,
                "character": 10
              },
              "end": {
                "line": 642,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 643,
                "character": 10
              },
              "end": {
                "line": 643,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 644,
                "character": 10
              },
              "end": {
                "line": 644,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 645,
                "character": 10
              },
              "end": {
                "line": 645,
                "character": 47
              }
            }
          },
          {
            "code": "delete-http-status-codes-resource",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 651,
                "character": 16
              },
              "end": {
                "line": 655,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 652,
                "character": 14
              },
              "end": {
                "line": 653,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 654,
                "character": 14
              },
              "end": {
                "line": 655,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 658,
                "character": 10
              },
              "end": {
                "line": 658,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 659,
                "character": 10
              },
              "end": {
                "line": 659,
                "character": 53
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 660,
                "character": 10
              },
              "end": {
                "line": 660,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 661,
                "character": 10
              },
              "end": {
                "line": 661,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 662,
                "character": 10
              },
              "end": {
                "line": 662,
                "character": 57
              }
            }
          },
          {
            "code": "nesting-level",
            "message": "You should use max of 3 sub-resource (nesting) levels",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 665,
                "character": 137
              },
              "end": {
                "line": 703,
                "character": 23
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 666,
                "character": 15
              },
              "end": {
                "line": 671,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 667,
                "character": 8
              },
              "end": {
                "line": 667,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 668,
                "character": 8
              },
              "end": {
                "line": 668,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 669,
                "character": 8
              },
              "end": {
                "line": 669,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 670,
                "character": 8
              },
              "end": {
                "line": 670,
                "character": 50
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 671,
                "character": 8
              },
              "end": {
                "line": 671,
                "character": 48
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 674,
                "character": 16
              },
              "end": {
                "line": 682,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 681,
                "character": 14
              },
              "end": {
                "line": 682,
                "character": 32
              }
            }
          },
          {
            "code": "put-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "put",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 690,
                "character": 16
              },
              "end": {
                "line": 694,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "put",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 691,
                "character": 14
              },
              "end": {
                "line": 692,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 693,
                "character": 14
              },
              "end": {
                "line": 694,
                "character": 81
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`PagedDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 706,
                "character": 13
              },
              "end": {
                "line": 718,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "offset doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 709,
                "character": 15
              },
              "end": {
                "line": 711,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`offset.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 709,
                "character": 15
              },
              "end": {
                "line": 711,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`offset.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 709,
                "character": 15
              },
              "end": {
                "line": 711,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "limit doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 712,
                "character": 14
              },
              "end": {
                "line": 714,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`limit.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 712,
                "character": 14
              },
              "end": {
                "line": 714,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`limit.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 712,
                "character": 14
              },
              "end": {
                "line": 714,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "totalElements doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 715,
                "character": 22
              },
              "end": {
                "line": 717,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`totalElements.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 715,
                "character": 22
              },
              "end": {
                "line": 717,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`totalElements.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 715,
                "character": 22
              },
              "end": {
                "line": 717,
                "character": 23
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiSpecificationDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 719,
                "character": 24
              },
              "end": {
                "line": 763,
                "character": 18
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "providerKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 725,
                "character": 20
              },
              "end": {
                "line": 727,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 725,
                "character": 20
              },
              "end": {
                "line": 727,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 725,
                "character": 20
              },
              "end": {
                "line": 727,
                "character": 74
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 728,
                "character": 16
              },
              "end": {
                "line": 731,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 728,
                "character": 16
              },
              "end": {
                "line": 731,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 728,
                "character": 16
              },
              "end": {
                "line": 731,
                "character": 31
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "protocol doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "protocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 732,
                "character": 17
              },
              "end": {
                "line": 734,
                "character": 34
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property deprecated does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "deprecated"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 735,
                "character": 19
              },
              "end": {
                "line": 738,
                "character": 24
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "deprecated doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "deprecated"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 735,
                "character": 19
              },
              "end": {
                "line": 738,
                "character": 24
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property snapshot does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "snapshot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 739,
                "character": 17
              },
              "end": {
                "line": 742,
                "character": 24
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "snapshot doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "snapshot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 739,
                "character": 17
              },
              "end": {
                "line": 742,
                "character": 24
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "previousVersion doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "previousVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 743,
                "character": 24
              },
              "end": {
                "line": 745,
                "character": 56
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`previousVersion.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "previousVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 743,
                "character": 24
              },
              "end": {
                "line": 745,
                "character": 56
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`previousVersion.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "previousVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 743,
                "character": 24
              },
              "end": {
                "line": 745,
                "character": 56
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "changes"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 746,
                "character": 16
              },
              "end": {
                "line": 749,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "consumers"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 750,
                "character": 18
              },
              "end": {
                "line": 753,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 754,
                "character": 16
              },
              "end": {
                "line": 756,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 754,
                "character": 16
              },
              "end": {
                "line": 756,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 754,
                "character": 16
              },
              "end": {
                "line": 756,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "normalizedApiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 757,
                "character": 26
              },
              "end": {
                "line": 759,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 757,
                "character": 26
              },
              "end": {
                "line": 759,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 757,
                "character": 26
              },
              "end": {
                "line": 759,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIVersionDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 764,
                "character": 18
              },
              "end": {
                "line": 787,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 771,
                "character": 16
              },
              "end": {
                "line": 773,
                "character": 46
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 771,
                "character": 16
              },
              "end": {
                "line": 773,
                "character": 46
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 771,
                "character": 16
              },
              "end": {
                "line": 773,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "releaseDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "releaseDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 774,
                "character": 20
              },
              "end": {
                "line": 777,
                "character": 63
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "isRelease doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "isRelease"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 778,
                "character": 18
              },
              "end": {
                "line": 781,
                "character": 82
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "lifecycleVersion doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "lifecycleVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 782,
                "character": 25
              },
              "end": {
                "line": 783,
                "character": 55
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionFullDataDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 793,
                "character": 10
              },
              "end": {
                "line": 798,
                "character": 60
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIVersionID.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 799,
                "character": 17
              },
              "end": {
                "line": 825,
                "character": 17
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "projectKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 804,
                "character": 19
              },
              "end": {
                "line": 807,
                "character": 36
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 804,
                "character": 19
              },
              "end": {
                "line": 807,
                "character": 36
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 804,
                "character": 19
              },
              "end": {
                "line": 807,
                "character": 36
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "normalizedApiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 808,
                "character": 26
              },
              "end": {
                "line": 811,
                "character": 44
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 808,
                "character": 26
              },
              "end": {
                "line": 811,
                "character": 44
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 808,
                "character": 26
              },
              "end": {
                "line": 811,
                "character": 44
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "protocol doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "protocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 812,
                "character": 17
              },
              "end": {
                "line": 816,
                "character": 87
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 817,
                "character": 16
              },
              "end": {
                "line": 820,
                "character": 36
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 817,
                "character": 16
              },
              "end": {
                "line": 820,
                "character": 36
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 817,
                "character": 16
              },
              "end": {
                "line": 820,
                "character": 36
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "RelatedAPIVersionList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 826,
                "character": 26
              },
              "end": {
                "line": 829,
                "character": 49
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIVersionList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 830,
                "character": 19
              },
              "end": {
                "line": 833,
                "character": 60
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`DeploymentRelatedApiDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 834,
                "character": 28
              },
              "end": {
                "line": 851,
                "character": 12
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 841,
                "character": 16
              },
              "end": {
                "line": 843,
                "character": 46
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 841,
                "character": 16
              },
              "end": {
                "line": 843,
                "character": 46
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 841,
                "character": 16
              },
              "end": {
                "line": 843,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "isRelease doesn't have an example",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO",
              "properties",
              "isRelease"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 844,
                "character": 18
              },
              "end": {
                "line": 847,
                "character": 82
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "lifecycleVersion doesn't have an example",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO",
              "properties",
              "lifecycleVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 848,
                "character": 25
              },
              "end": {
                "line": 849,
                "character": 55
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIDeploymentList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 852,
                "character": 22
              },
              "end": {
                "line": 855,
                "character": 52
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIDeploymentID.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 856,
                "character": 20
              },
              "end": {
                "line": 878,
                "character": 60
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "artifactName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "artifactName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 861,
                "character": 21
              },
              "end": {
                "line": 863,
                "character": 39
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`artifactName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "artifactName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 861,
                "character": 21
              },
              "end": {
                "line": 863,
                "character": 39
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`artifactName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "artifactName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 861,
                "character": 21
              },
              "end": {
                "line": 863,
                "character": 39
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "platform doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 864,
                "character": 17
              },
              "end": {
                "line": 867,
                "character": 785
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "tenant doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "tenant"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 868,
                "character": 15
              },
              "end": {
                "line": 871,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "slot doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 872,
                "character": 13
              },
              "end": {
                "line": 874,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`slot.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 872,
                "character": 13
              },
              "end": {
                "line": 874,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`slot.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 872,
                "character": 13
              },
              "end": {
                "line": 874,
                "character": 65
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "environment doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "environment"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 875,
                "character": 20
              },
              "end": {
                "line": 878,
                "character": 60
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIDeploymentDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 879,
                "character": 21
              },
              "end": {
                "line": 902,
                "character": 70
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "projectKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 886,
                "character": 19
              },
              "end": {
                "line": 888,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 886,
                "character": 19
              },
              "end": {
                "line": 888,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 886,
                "character": 19
              },
              "end": {
                "line": 888,
                "character": 49
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 889,
                "character": 16
              },
              "end": {
                "line": 891,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 889,
                "character": 16
              },
              "end": {
                "line": 891,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 889,
                "character": 16
              },
              "end": {
                "line": 891,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "deploymentUrl doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 896,
                "character": 22
              },
              "end": {
                "line": 898,
                "character": 52
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`deploymentUrl.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 896,
                "character": 22
              },
              "end": {
                "line": 898,
                "character": 52
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`deploymentUrl.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 896,
                "character": 22
              },
              "end": {
                "line": 898,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "releaseDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "releaseDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 899,
                "character": 20
              },
              "end": {
                "line": 902,
                "character": 70
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIDeploymentUpdateDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 903,
                "character": 27
              },
              "end": {
                "line": 926,
                "character": 70
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "projectKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 910,
                "character": 19
              },
              "end": {
                "line": 912,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 910,
                "character": 19
              },
              "end": {
                "line": 912,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 910,
                "character": 19
              },
              "end": {
                "line": 912,
                "character": 49
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 913,
                "character": 16
              },
              "end": {
                "line": 915,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 913,
                "character": 16
              },
              "end": {
                "line": 915,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 913,
                "character": 16
              },
              "end": {
                "line": 915,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "deploymentUrl doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 920,
                "character": 22
              },
              "end": {
                "line": 922,
                "character": 52
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`deploymentUrl.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 920,
                "character": 22
              },
              "end": {
                "line": 922,
                "character": 52
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`deploymentUrl.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 920,
                "character": 22
              },
              "end": {
                "line": 922,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "releaseDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "releaseDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 923,
                "character": 20
              },
              "end": {
                "line": 926,
                "character": 70
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiDeploymentUpdateResultDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiDeploymentUpdateResultDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 927,
                "character": 33
              },
              "end": {
                "line": 939,
                "character": 60
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "result doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiDeploymentUpdateResultDTO",
              "properties",
              "result"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 932,
                "character": 15
              },
              "end": {
                "line": 935,
                "character": 28
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiConsumerDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 940,
                "character": 19
              },
              "end": {
                "line": 999,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "consumerId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 945,
                "character": 19
              },
              "end": {
                "line": 947,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`consumerId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 945,
                "character": 19
              },
              "end": {
                "line": 947,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`consumerId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 945,
                "character": 19
              },
              "end": {
                "line": 947,
                "character": 69
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "providerKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 948,
                "character": 20
              },
              "end": {
                "line": 950,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 948,
                "character": 20
              },
              "end": {
                "line": 950,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 948,
                "character": 20
              },
              "end": {
                "line": 950,
                "character": 74
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "APIVersionID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 951,
                "character": 21
              },
              "end": {
                "line": 952,
                "character": 51
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 953,
                "character": 16
              },
              "end": {
                "line": 956,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 953,
                "character": 16
              },
              "end": {
                "line": 956,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 953,
                "character": 16
              },
              "end": {
                "line": 956,
                "character": 31
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "protocol doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "protocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 957,
                "character": 17
              },
              "end": {
                "line": 959,
                "character": 64
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "environment doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "environment"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 960,
                "character": 20
              },
              "end": {
                "line": 963,
                "character": 60
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "vertical doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "vertical"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 964,
                "character": 17
              },
              "end": {
                "line": 967,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "platform doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 968,
                "character": 17
              },
              "end": {
                "line": 970,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`platform.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 968,
                "character": 17
              },
              "end": {
                "line": 970,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`platform.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 968,
                "character": 17
              },
              "end": {
                "line": 970,
                "character": 69
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "tenant doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "tenant"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 971,
                "character": 15
              },
              "end": {
                "line": 974,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "slot doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 975,
                "character": 13
              },
              "end": {
                "line": 977,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`slot.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 975,
                "character": 13
              },
              "end": {
                "line": 977,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`slot.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 975,
                "character": 13
              },
              "end": {
                "line": 977,
                "character": 65
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "dependencies"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 978,
                "character": 21
              },
              "end": {
                "line": 982,
                "character": 225
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 983,
                "character": 16
              },
              "end": {
                "line": 985,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 983,
                "character": 16
              },
              "end": {
                "line": 985,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 983,
                "character": 16
              },
              "end": {
                "line": 985,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "normalizedApiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 986,
                "character": 26
              },
              "end": {
                "line": 988,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 986,
                "character": 26
              },
              "end": {
                "line": 988,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 986,
                "character": 26
              },
              "end": {
                "line": 988,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "projectKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 989,
                "character": 19
              },
              "end": {
                "line": 991,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 989,
                "character": 19
              },
              "end": {
                "line": 991,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 989,
                "character": 19
              },
              "end": {
                "line": 991,
                "character": 74
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ConsumerDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1000,
                "character": 16
              },
              "end": {
                "line": 1042,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "consumerId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1005,
                "character": 19
              },
              "end": {
                "line": 1007,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`consumerId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1005,
                "character": 19
              },
              "end": {
                "line": 1007,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`consumerId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1005,
                "character": 19
              },
              "end": {
                "line": 1007,
                "character": 69
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1008,
                "character": 16
              },
              "end": {
                "line": 1010,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1008,
                "character": 16
              },
              "end": {
                "line": 1010,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1008,
                "character": 16
              },
              "end": {
                "line": 1010,
                "character": 47
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "environment doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "environment"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1011,
                "character": 20
              },
              "end": {
                "line": 1014,
                "character": 67
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "vertical doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "vertical"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1015,
                "character": 17
              },
              "end": {
                "line": 1018,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "platform doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1019,
                "character": 17
              },
              "end": {
                "line": 1021,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`platform.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1019,
                "character": 17
              },
              "end": {
                "line": 1021,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`platform.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1019,
                "character": 17
              },
              "end": {
                "line": 1021,
                "character": 69
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "tenant doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "tenant"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1022,
                "character": 15
              },
              "end": {
                "line": 1025,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "slot doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1026,
                "character": 13
              },
              "end": {
                "line": 1028,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`slot.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1026,
                "character": 13
              },
              "end": {
                "line": 1028,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`slot.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1026,
                "character": 13
              },
              "end": {
                "line": 1028,
                "character": 65
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "apiDependencies"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1029,
                "character": 24
              },
              "end": {
                "line": 1033,
                "character": 42
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "projectKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1034,
                "character": 19
              },
              "end": {
                "line": 1036,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1034,
                "character": 19
              },
              "end": {
                "line": 1036,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1034,
                "character": 19
              },
              "end": {
                "line": 1036,
                "character": 74
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiChangeDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1043,
                "character": 17
              },
              "end": {
                "line": 1063,
                "character": 27
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "itemName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1048,
                "character": 17
              },
              "end": {
                "line": 1050,
                "character": 64
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`itemName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1048,
                "character": 17
              },
              "end": {
                "line": 1050,
                "character": 64
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`itemName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1048,
                "character": 17
              },
              "end": {
                "line": 1050,
                "character": 64
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "changeType doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1051,
                "character": 19
              },
              "end": {
                "line": 1053,
                "character": 67
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`changeType.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1051,
                "character": 19
              },
              "end": {
                "line": 1053,
                "character": 67
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`changeType.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1051,
                "character": 19
              },
              "end": {
                "line": 1053,
                "character": 67
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "isBreaking doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "isBreaking"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1054,
                "character": 19
              },
              "end": {
                "line": 1056,
                "character": 76
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "changeDescription doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1057,
                "character": 26
              },
              "end": {
                "line": 1059,
                "character": 43
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`changeDescription.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1057,
                "character": 26
              },
              "end": {
                "line": 1059,
                "character": 43
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`changeDescription.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1057,
                "character": 26
              },
              "end": {
                "line": 1059,
                "character": 43
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiDependencyDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1064,
                "character": 21
              },
              "end": {
                "line": 1094,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "providerKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1069,
                "character": 20
              },
              "end": {
                "line": 1071,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1069,
                "character": 20
              },
              "end": {
                "line": 1071,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1069,
                "character": 20
              },
              "end": {
                "line": 1071,
                "character": 74
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1072,
                "character": 16
              },
              "end": {
                "line": 1074,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1072,
                "character": 16
              },
              "end": {
                "line": 1074,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1072,
                "character": 16
              },
              "end": {
                "line": 1074,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "normalizedApiName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1075,
                "character": 26
              },
              "end": {
                "line": 1077,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1075,
                "character": 26
              },
              "end": {
                "line": 1077,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1075,
                "character": 26
              },
              "end": {
                "line": 1077,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1078,
                "character": 16
              },
              "end": {
                "line": 1080,
                "character": 42
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1078,
                "character": 16
              },
              "end": {
                "line": 1080,
                "character": 42
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1078,
                "character": 16
              },
              "end": {
                "line": 1080,
                "character": 42
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "protocol doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "protocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1081,
                "character": 17
              },
              "end": {
                "line": 1084,
                "character": 64
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "dependencies"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1085,
                "character": 21
              },
              "end": {
                "line": 1089,
                "character": 225
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiUsageDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1095,
                "character": 16
              },
              "end": {
                "line": 1107,
                "character": 18
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "itemName doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1100,
                "character": 17
              },
              "end": {
                "line": 1102,
                "character": 60
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`itemName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1100,
                "character": 17
              },
              "end": {
                "line": 1102,
                "character": 60
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`itemName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1100,
                "character": 17
              },
              "end": {
                "line": 1102,
                "character": 60
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "usageDescription doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "usageDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1103,
                "character": 25
              },
              "end": {
                "line": 1105,
                "character": 126
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`usageDescription.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "usageDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1103,
                "character": 25
              },
              "end": {
                "line": 1105,
                "character": 126
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`usageDescription.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "usageDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1103,
                "character": 25
              },
              "end": {
                "line": 1105,
                "character": 126
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIGraphNode.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIGraphNode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1108,
                "character": 17
              },
              "end": {
                "line": 1137,
                "character": 18
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property snapshot does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "snapshot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1115,
                "character": 17
              },
              "end": {
                "line": 1118,
                "character": 24
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "snapshot doesn't have an example",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "snapshot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1115,
                "character": 17
              },
              "end": {
                "line": 1118,
                "character": 24
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "changes"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1121,
                "character": 16
              },
              "end": {
                "line": 1124,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "consumers"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1125,
                "character": 18
              },
              "end": {
                "line": 1128,
                "character": 57
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "deployments"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1129,
                "character": 20
              },
              "end": {
                "line": 1132,
                "character": 57
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIDependencyGraphNodeListDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1138,
                "character": 34
              },
              "end": {
                "line": 1142,
                "character": 77
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiSpecificationGraphsDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphsDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1143,
                "character": 30
              },
              "end": {
                "line": 1161,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "providerKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphsDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1149,
                "character": 20
              },
              "end": {
                "line": 1151,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphsDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1149,
                "character": 20
              },
              "end": {
                "line": 1151,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphsDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1149,
                "character": 20
              },
              "end": {
                "line": 1151,
                "character": 74
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiSpecificationGraphNodeDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1162,
                "character": 33
              },
              "end": {
                "line": 1199,
                "character": 18
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "providerKey doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1168,
                "character": 20
              },
              "end": {
                "line": 1170,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1168,
                "character": 20
              },
              "end": {
                "line": 1170,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1168,
                "character": 20
              },
              "end": {
                "line": 1170,
                "character": 74
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "version doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1171,
                "character": 16
              },
              "end": {
                "line": 1174,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1171,
                "character": 16
              },
              "end": {
                "line": 1174,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1171,
                "character": 16
              },
              "end": {
                "line": 1174,
                "character": 31
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "protocol doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "protocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1175,
                "character": 17
              },
              "end": {
                "line": 1178,
                "character": 60
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property deprecated does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "deprecated"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1179,
                "character": 19
              },
              "end": {
                "line": 1181,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "deprecated doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "deprecated"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1179,
                "character": 19
              },
              "end": {
                "line": 1181,
                "character": 23
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property snapshot does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "snapshot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1182,
                "character": 17
              },
              "end": {
                "line": 1185,
                "character": 24
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "snapshot doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "snapshot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1182,
                "character": 17
              },
              "end": {
                "line": 1185,
                "character": 24
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "changes"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1188,
                "character": 16
              },
              "end": {
                "line": 1191,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "consumers"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1192,
                "character": 18
              },
              "end": {
                "line": 1195,
                "character": 55
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1203,
                "character": 10
              },
              "end": {
                "line": 1208,
                "character": 64
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1205,
                "character": 20
              },
              "end": {
                "line": 1208,
                "character": 64
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiConsumerPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1213,
                "character": 10
              },
              "end": {
                "line": 1218,
                "character": 59
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiConsumerPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1215,
                "character": 20
              },
              "end": {
                "line": 1218,
                "character": 59
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1223,
                "character": 10
              },
              "end": {
                "line": 1228,
                "character": 58
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIVersionPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1225,
                "character": 20
              },
              "end": {
                "line": 1228,
                "character": 58
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionFullDataPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1233,
                "character": 10
              },
              "end": {
                "line": 1238,
                "character": 66
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIVersionFullDataPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1235,
                "character": 20
              },
              "end": {
                "line": 1238,
                "character": 66
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1243,
                "character": 10
              },
              "end": {
                "line": 1248,
                "character": 61
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIDeploymentPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1245,
                "character": 20
              },
              "end": {
                "line": 1248,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`apiName.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1256,
                "character": 12
              },
              "end": {
                "line": 1262,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1261,
                "character": 13
              },
              "end": {
                "line": 1262,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1261,
                "character": 13
              },
              "end": {
                "line": 1262,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`normalizedApiName.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1263,
                "character": 22
              },
              "end": {
                "line": 1269,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "normalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1268,
                "character": 13
              },
              "end": {
                "line": 1269,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "normalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1268,
                "character": 13
              },
              "end": {
                "line": 1269,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`consumerVersion.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1270,
                "character": 20
              },
              "end": {
                "line": 1276,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1275,
                "character": 13
              },
              "end": {
                "line": 1276,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1275,
                "character": 13
              },
              "end": {
                "line": 1276,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`offset.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1277,
                "character": 11
              },
              "end": {
                "line": 1287,
                "character": 18
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "offset",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1283,
                "character": 13
              },
              "end": {
                "line": 1287,
                "character": 18
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`limit.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1288,
                "character": 10
              },
              "end": {
                "line": 1299,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`environment.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "environment"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1300,
                "character": 16
              },
              "end": {
                "line": 1308,
                "character": 65
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`pathEnvironment.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathEnvironment"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1309,
                "character": 20
              },
              "end": {
                "line": 1317,
                "character": 65
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`vertical.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "vertical"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1318,
                "character": 13
              },
              "end": {
                "line": 1326,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`platform.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1327,
                "character": 13
              },
              "end": {
                "line": 1335,
                "character": 783
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`pathPlatform.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathPlatform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1336,
                "character": 17
              },
              "end": {
                "line": 1344,
                "character": 783
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`tenant.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "tenant"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1345,
                "character": 11
              },
              "end": {
                "line": 1353,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`pathTenant.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathTenant"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1354,
                "character": 15
              },
              "end": {
                "line": 1362,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`slot.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1363,
                "character": 9
              },
              "end": {
                "line": 1370,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "slot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1369,
                "character": 13
              },
              "end": {
                "line": 1370,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "slot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1369,
                "character": 13
              },
              "end": {
                "line": 1370,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`pathSlot.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathSlot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1371,
                "character": 13
              },
              "end": {
                "line": 1378,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathSlot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1377,
                "character": 13
              },
              "end": {
                "line": 1378,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathSlot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1377,
                "character": 13
              },
              "end": {
                "line": 1378,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`consumerId.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1379,
                "character": 15
              },
              "end": {
                "line": 1385,
                "character": 38
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1383,
                "character": 13
              },
              "end": {
                "line": 1384,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1383,
                "character": 13
              },
              "end": {
                "line": 1384,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`queryVersion.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1386,
                "character": 17
              },
              "end": {
                "line": 1391,
                "character": 57
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1387,
                "character": 13
              },
              "end": {
                "line": 1388,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1387,
                "character": 13
              },
              "end": {
                "line": 1388,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`queryProtocol.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProtocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1392,
                "character": 18
              },
              "end": {
                "line": 1397,
                "character": 91
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProtocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1393,
                "character": 13
              },
              "end": {
                "line": 1394,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProtocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1393,
                "character": 13
              },
              "end": {
                "line": 1394,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`maxApiNodes.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "maxApiNodes"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1398,
                "character": 16
              },
              "end": {
                "line": 1404,
                "character": 84
              }
            }
          },
          {
            "code": "numeric-required-properties-format",
            "message": "`schema.format` property should be defined",
            "path": [
              "components",
              "parameters",
              "maxApiNodes",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1399,
                "character": 13
              },
              "end": {
                "line": 1401,
                "character": 19
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "maxApiNodes",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1399,
                "character": 13
              },
              "end": {
                "line": 1401,
                "character": 19
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "components",
              "parameters",
              "maxApiNodes",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1399,
                "character": 13
              },
              "end": {
                "line": 1401,
                "character": 19
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`apiId.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1405,
                "character": 10
              },
              "end": {
                "line": 1411,
                "character": 33
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1409,
                "character": 13
              },
              "end": {
                "line": 1410,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1409,
                "character": 13
              },
              "end": {
                "line": 1410,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`artifactName.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1412,
                "character": 17
              },
              "end": {
                "line": 1418,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1417,
                "character": 13
              },
              "end": {
                "line": 1418,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1417,
                "character": 13
              },
              "end": {
                "line": 1418,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`queryArtifactName.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1419,
                "character": 22
              },
              "end": {
                "line": 1425,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1424,
                "character": 13
              },
              "end": {
                "line": 1425,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1424,
                "character": 13
              },
              "end": {
                "line": 1425,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`queryArtifactNameArray.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactNameArray"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1426,
                "character": 27
              },
              "end": {
                "line": 1435,
                "character": 19
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "parameters",
              "queryArtifactNameArray",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1431,
                "character": 13
              },
              "end": {
                "line": 1435,
                "character": 19
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactNameArray",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1433,
                "character": 14
              },
              "end": {
                "line": 1434,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactNameArray",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1433,
                "character": 14
              },
              "end": {
                "line": 1434,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`projectKey.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1436,
                "character": 15
              },
              "end": {
                "line": 1442,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "projectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1441,
                "character": 13
              },
              "end": {
                "line": 1442,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "projectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1441,
                "character": 13
              },
              "end": {
                "line": 1442,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`queryProjectKey.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProjectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1443,
                "character": 20
              },
              "end": {
                "line": 1449,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProjectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1448,
                "character": 13
              },
              "end": {
                "line": 1449,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProjectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1448,
                "character": 13
              },
              "end": {
                "line": 1449,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`pathNormalizedApiName.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathNormalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1450,
                "character": 26
              },
              "end": {
                "line": 1456,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathNormalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1455,
                "character": 13
              },
              "end": {
                "line": 1456,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathNormalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1455,
                "character": 13
              },
              "end": {
                "line": 1456,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`version.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1457,
                "character": 12
              },
              "end": {
                "line": 1463,
                "character": 30
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "version",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1461,
                "character": 13
              },
              "end": {
                "line": 1462,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "version",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1461,
                "character": 13
              },
              "end": {
                "line": 1462,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`protocol.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "protocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1464,
                "character": 13
              },
              "end": {
                "line": 1470,
                "character": 54
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "protocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1468,
                "character": 13
              },
              "end": {
                "line": 1469,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "protocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1468,
                "character": 13
              },
              "end": {
                "line": 1469,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`artifactVersion.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1471,
                "character": 20
              },
              "end": {
                "line": 1476,
                "character": 51
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1472,
                "character": 13
              },
              "end": {
                "line": 1473,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1472,
                "character": 13
              },
              "end": {
                "line": 1473,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`pathApiProtocol.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathApiProtocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1477,
                "character": 20
              },
              "end": {
                "line": 1484,
                "character": 69
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`queryApiProtocol.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryApiProtocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1485,
                "character": 21
              },
              "end": {
                "line": 1492,
                "character": 62
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`queryLifecycleVersion.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryLifecycleVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1493,
                "character": 26
              },
              "end": {
                "line": 1501,
                "character": 25
              }
            }
          }
        ]
      }
    ],
    "securityValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "global-security",
            "message": "Global 'security' field is not defined",
            "path": [],
            "severity": 0,
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 1501,
                "character": 25
              }
            }
          },
          {
            "code": "server-https",
            "message": "Server objects should support https",
            "path": [
              "servers",
              "1",
              "url"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 7,
                "character": 9
              },
              "end": {
                "line": 7,
                "character": 76
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 20,
                "character": 15
              },
              "end": {
                "line": 21,
                "character": 45
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 33,
                "character": 14
              },
              "end": {
                "line": 34,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 45,
                "character": 15
              },
              "end": {
                "line": 47,
                "character": 47
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/graph",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 59,
                "character": 14
              },
              "end": {
                "line": 60,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 68,
                "character": 15
              },
              "end": {
                "line": 73,
                "character": 57
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 85,
                "character": 14
              },
              "end": {
                "line": 86,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 99,
                "character": 14
              },
              "end": {
                "line": 100,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 113,
                "character": 14
              },
              "end": {
                "line": 114,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 115,
                "character": 14
              },
              "end": {
                "line": 116,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/api",
              "post",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 125,
                "character": 14
              },
              "end": {
                "line": 126,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 127,
                "character": 14
              },
              "end": {
                "line": 128,
                "character": 37
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 140,
                "character": 15
              },
              "end": {
                "line": 145,
                "character": 57
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 157,
                "character": 14
              },
              "end": {
                "line": 158,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 159,
                "character": 14
              },
              "end": {
                "line": 160,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "put",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 176,
                "character": 14
              },
              "end": {
                "line": 177,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 178,
                "character": 14
              },
              "end": {
                "line": 179,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer",
              "put",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 180,
                "character": 14
              },
              "end": {
                "line": 181,
                "character": 37
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 192,
                "character": 15
              },
              "end": {
                "line": 204,
                "character": 44
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 209,
                "character": 14
              },
              "end": {
                "line": 210,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 211,
                "character": 14
              },
              "end": {
                "line": 212,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/api/{apiId}/{version}/{protocol}/consumer/{consumerId}",
              "delete",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 213,
                "character": 14
              },
              "end": {
                "line": 214,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/consumers",
              "post",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 14
              },
              "end": {
                "line": 224,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/consumers",
              "post",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 225,
                "character": 14
              },
              "end": {
                "line": 226,
                "character": 81
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/consumers",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 227,
                "character": 14
              },
              "end": {
                "line": 228,
                "character": 37
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 239,
                "character": 15
              },
              "end": {
                "line": 245,
                "character": 44
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/consumers/{consumerId}/providers",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 255,
                "character": 14
              },
              "end": {
                "line": 256,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 271,
                "character": 15
              },
              "end": {
                "line": 272,
                "character": 50
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/consumers/{consumerId}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 282,
                "character": 14
              },
              "end": {
                "line": 283,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 298,
                "character": 15
              },
              "end": {
                "line": 302,
                "character": 47
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 14
              },
              "end": {
                "line": 313,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 322,
                "character": 14
              },
              "end": {
                "line": 323,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 324,
                "character": 14
              },
              "end": {
                "line": 325,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "put",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 333,
                "character": 14
              },
              "end": {
                "line": 334,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}",
              "put",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 335,
                "character": 14
              },
              "end": {
                "line": 336,
                "character": 55
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 347,
                "character": 15
              },
              "end": {
                "line": 351,
                "character": 47
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/full-data",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 361,
                "character": 14
              },
              "end": {
                "line": 362,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 377,
                "character": 14
              },
              "end": {
                "line": 378,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 392,
                "character": 15
              },
              "end": {
                "line": 393,
                "character": 50
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 403,
                "character": 14
              },
              "end": {
                "line": 404,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 417,
                "character": 15
              },
              "end": {
                "line": 418,
                "character": 50
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/full-data",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 428,
                "character": 14
              },
              "end": {
                "line": 429,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 442,
                "character": 15
              },
              "end": {
                "line": 443,
                "character": 50
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 448,
                "character": 14
              },
              "end": {
                "line": 449,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 450,
                "character": 14
              },
              "end": {
                "line": 451,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [501].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}",
              "delete",
              "responses",
              "501"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 452,
                "character": 14
              },
              "end": {
                "line": 453,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 463,
                "character": 15
              },
              "end": {
                "line": 467,
                "character": 47
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/consumers",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 477,
                "character": 14
              },
              "end": {
                "line": 478,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 487,
                "character": 15
              },
              "end": {
                "line": 491,
                "character": 47
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/apis/{normalizedApiName}/protocols/{protocol}/versions/{version}/implementations",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 501,
                "character": 14
              },
              "end": {
                "line": 502,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 511,
                "character": 15
              },
              "end": {
                "line": 512,
                "character": 50
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-projects/{projectKey}/dependency-graph",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 522,
                "character": 14
              },
              "end": {
                "line": 523,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 534,
                "character": 15
              },
              "end": {
                "line": 539,
                "character": 48
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 549,
                "character": 14
              },
              "end": {
                "line": 550,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 559,
                "character": 14
              },
              "end": {
                "line": 560,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 561,
                "character": 14
              },
              "end": {
                "line": 562,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 582,
                "character": 14
              },
              "end": {
                "line": 583,
                "character": 55
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 584,
                "character": 14
              },
              "end": {
                "line": 585,
                "character": 57
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [409].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}",
              "put",
              "responses",
              "409"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 14
              },
              "end": {
                "line": 587,
                "character": 101
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 607,
                "character": 14
              },
              "end": {
                "line": 608,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 623,
                "character": 15
              },
              "end": {
                "line": 624,
                "character": 52
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 634,
                "character": 14
              },
              "end": {
                "line": 635,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 652,
                "character": 14
              },
              "end": {
                "line": 653,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 654,
                "character": 14
              },
              "end": {
                "line": 655,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 666,
                "character": 15
              },
              "end": {
                "line": 671,
                "character": 48
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 681,
                "character": 14
              },
              "end": {
                "line": 682,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [201].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "put",
              "responses",
              "201"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 691,
                "character": 14
              },
              "end": {
                "line": 692,
                "character": 30
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/api-deployment/artifacts/{artifactName}/platforms/{platform}/environments/{environment}/tenants/{tenant}/slots/{slot}/consumed-apis",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 693,
                "character": 14
              },
              "end": {
                "line": 694,
                "character": 81
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`PagedDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 706,
                "character": 13
              },
              "end": {
                "line": 718,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`offset.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 709,
                "character": 15
              },
              "end": {
                "line": 711,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`offset.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 709,
                "character": 15
              },
              "end": {
                "line": 711,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`limit.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 712,
                "character": 14
              },
              "end": {
                "line": 714,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`limit.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 712,
                "character": 14
              },
              "end": {
                "line": 714,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`totalElements.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 715,
                "character": 22
              },
              "end": {
                "line": 717,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`totalElements.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 715,
                "character": 22
              },
              "end": {
                "line": 717,
                "character": 23
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiSpecificationDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 719,
                "character": 24
              },
              "end": {
                "line": 763,
                "character": 18
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 725,
                "character": 20
              },
              "end": {
                "line": 727,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 725,
                "character": 20
              },
              "end": {
                "line": 727,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 728,
                "character": 16
              },
              "end": {
                "line": 731,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 728,
                "character": 16
              },
              "end": {
                "line": 731,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`previousVersion.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "previousVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 743,
                "character": 24
              },
              "end": {
                "line": 745,
                "character": 56
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`previousVersion.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "previousVersion"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 743,
                "character": 24
              },
              "end": {
                "line": 745,
                "character": 56
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "changes"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 746,
                "character": 16
              },
              "end": {
                "line": 749,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "consumers"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 750,
                "character": 18
              },
              "end": {
                "line": 753,
                "character": 55
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 754,
                "character": 16
              },
              "end": {
                "line": 756,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 754,
                "character": 16
              },
              "end": {
                "line": 756,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 757,
                "character": 26
              },
              "end": {
                "line": 759,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 757,
                "character": 26
              },
              "end": {
                "line": 759,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIVersionDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 764,
                "character": 18
              },
              "end": {
                "line": 787,
                "character": 21
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 771,
                "character": 16
              },
              "end": {
                "line": 773,
                "character": 46
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 771,
                "character": 16
              },
              "end": {
                "line": 773,
                "character": 46
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionFullDataDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 793,
                "character": 10
              },
              "end": {
                "line": 798,
                "character": 60
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIVersionID.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 799,
                "character": 17
              },
              "end": {
                "line": 825,
                "character": 17
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 804,
                "character": 19
              },
              "end": {
                "line": 807,
                "character": 36
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 804,
                "character": 19
              },
              "end": {
                "line": 807,
                "character": 36
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 808,
                "character": 26
              },
              "end": {
                "line": 811,
                "character": 44
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 808,
                "character": 26
              },
              "end": {
                "line": 811,
                "character": 44
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 817,
                "character": 16
              },
              "end": {
                "line": 820,
                "character": 36
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIVersionID",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 817,
                "character": 16
              },
              "end": {
                "line": 820,
                "character": 36
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "RelatedAPIVersionList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 826,
                "character": 26
              },
              "end": {
                "line": 829,
                "character": 49
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIVersionList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 830,
                "character": 19
              },
              "end": {
                "line": 833,
                "character": 60
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`DeploymentRelatedApiDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 834,
                "character": 28
              },
              "end": {
                "line": 851,
                "character": 12
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 841,
                "character": 16
              },
              "end": {
                "line": 843,
                "character": 46
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "DeploymentRelatedApiDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 841,
                "character": 16
              },
              "end": {
                "line": 843,
                "character": 46
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIDeploymentList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 852,
                "character": 22
              },
              "end": {
                "line": 855,
                "character": 52
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIDeploymentID.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 856,
                "character": 20
              },
              "end": {
                "line": 878,
                "character": 60
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`artifactName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "artifactName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 861,
                "character": 21
              },
              "end": {
                "line": 863,
                "character": 39
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`artifactName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "artifactName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 861,
                "character": 21
              },
              "end": {
                "line": 863,
                "character": 39
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`slot.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 872,
                "character": 13
              },
              "end": {
                "line": 874,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`slot.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentID",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 872,
                "character": 13
              },
              "end": {
                "line": 874,
                "character": 65
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIDeploymentDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 879,
                "character": 21
              },
              "end": {
                "line": 902,
                "character": 70
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 886,
                "character": 19
              },
              "end": {
                "line": 888,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 886,
                "character": 19
              },
              "end": {
                "line": 888,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 889,
                "character": 16
              },
              "end": {
                "line": 891,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 889,
                "character": 16
              },
              "end": {
                "line": 891,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`deploymentUrl.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 896,
                "character": 22
              },
              "end": {
                "line": 898,
                "character": 52
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`deploymentUrl.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 896,
                "character": 22
              },
              "end": {
                "line": 898,
                "character": 52
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIDeploymentUpdateDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 903,
                "character": 27
              },
              "end": {
                "line": 926,
                "character": 70
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 910,
                "character": 19
              },
              "end": {
                "line": 912,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 910,
                "character": 19
              },
              "end": {
                "line": 912,
                "character": 49
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 913,
                "character": 16
              },
              "end": {
                "line": 915,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 913,
                "character": 16
              },
              "end": {
                "line": 915,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`deploymentUrl.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 920,
                "character": 22
              },
              "end": {
                "line": 922,
                "character": 52
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`deploymentUrl.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "APIDeploymentUpdateDTO",
              "properties",
              "deploymentUrl"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 920,
                "character": 22
              },
              "end": {
                "line": 922,
                "character": 52
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiDeploymentUpdateResultDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiDeploymentUpdateResultDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 927,
                "character": 33
              },
              "end": {
                "line": 939,
                "character": 60
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiConsumerDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 940,
                "character": 19
              },
              "end": {
                "line": 999,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`consumerId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 945,
                "character": 19
              },
              "end": {
                "line": 947,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`consumerId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 945,
                "character": 19
              },
              "end": {
                "line": 947,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 948,
                "character": 20
              },
              "end": {
                "line": 950,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 948,
                "character": 20
              },
              "end": {
                "line": 950,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 953,
                "character": 16
              },
              "end": {
                "line": 956,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 953,
                "character": 16
              },
              "end": {
                "line": 956,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`platform.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 968,
                "character": 17
              },
              "end": {
                "line": 970,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`platform.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 968,
                "character": 17
              },
              "end": {
                "line": 970,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`slot.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 975,
                "character": 13
              },
              "end": {
                "line": 977,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`slot.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 975,
                "character": 13
              },
              "end": {
                "line": 977,
                "character": 65
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "dependencies"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 978,
                "character": 21
              },
              "end": {
                "line": 982,
                "character": 225
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 983,
                "character": 16
              },
              "end": {
                "line": 985,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 983,
                "character": 16
              },
              "end": {
                "line": 985,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 986,
                "character": 26
              },
              "end": {
                "line": 988,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 986,
                "character": 26
              },
              "end": {
                "line": 988,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 989,
                "character": 19
              },
              "end": {
                "line": 991,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 989,
                "character": 19
              },
              "end": {
                "line": 991,
                "character": 74
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ConsumerDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1000,
                "character": 16
              },
              "end": {
                "line": 1042,
                "character": 25
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`consumerId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1005,
                "character": 19
              },
              "end": {
                "line": 1007,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`consumerId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "consumerId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1005,
                "character": 19
              },
              "end": {
                "line": 1007,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1008,
                "character": 16
              },
              "end": {
                "line": 1010,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1008,
                "character": 16
              },
              "end": {
                "line": 1010,
                "character": 47
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`platform.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1019,
                "character": 17
              },
              "end": {
                "line": 1021,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`platform.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "platform"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1019,
                "character": 17
              },
              "end": {
                "line": 1021,
                "character": 69
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`slot.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1026,
                "character": 13
              },
              "end": {
                "line": 1028,
                "character": 65
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`slot.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "slot"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1026,
                "character": 13
              },
              "end": {
                "line": 1028,
                "character": 65
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "apiDependencies"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1029,
                "character": 24
              },
              "end": {
                "line": 1033,
                "character": 42
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`projectKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1034,
                "character": 19
              },
              "end": {
                "line": 1036,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`projectKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConsumerDTO",
              "properties",
              "projectKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1034,
                "character": 19
              },
              "end": {
                "line": 1036,
                "character": 74
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiChangeDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1043,
                "character": 17
              },
              "end": {
                "line": 1063,
                "character": 27
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`itemName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1048,
                "character": 17
              },
              "end": {
                "line": 1050,
                "character": 64
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`itemName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1048,
                "character": 17
              },
              "end": {
                "line": 1050,
                "character": 64
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`changeType.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1051,
                "character": 19
              },
              "end": {
                "line": 1053,
                "character": 67
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`changeType.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1051,
                "character": 19
              },
              "end": {
                "line": 1053,
                "character": 67
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`changeDescription.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1057,
                "character": 26
              },
              "end": {
                "line": 1059,
                "character": 43
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`changeDescription.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiChangeDTO",
              "properties",
              "changeDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1057,
                "character": 26
              },
              "end": {
                "line": 1059,
                "character": 43
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiDependencyDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1064,
                "character": 21
              },
              "end": {
                "line": 1094,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1069,
                "character": 20
              },
              "end": {
                "line": 1071,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1069,
                "character": 20
              },
              "end": {
                "line": 1071,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1072,
                "character": 16
              },
              "end": {
                "line": 1074,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "apiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1072,
                "character": 16
              },
              "end": {
                "line": 1074,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`normalizedApiName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1075,
                "character": 26
              },
              "end": {
                "line": 1077,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`normalizedApiName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "normalizedApiName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1075,
                "character": 26
              },
              "end": {
                "line": 1077,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1078,
                "character": 16
              },
              "end": {
                "line": 1080,
                "character": 42
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1078,
                "character": 16
              },
              "end": {
                "line": 1080,
                "character": 42
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiDependencyDTO",
              "properties",
              "dependencies"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1085,
                "character": 21
              },
              "end": {
                "line": 1089,
                "character": 225
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiUsageDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1095,
                "character": 16
              },
              "end": {
                "line": 1107,
                "character": 18
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`itemName.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1100,
                "character": 17
              },
              "end": {
                "line": 1102,
                "character": 60
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`itemName.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "itemName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1100,
                "character": 17
              },
              "end": {
                "line": 1102,
                "character": 60
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`usageDescription.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "usageDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1103,
                "character": 25
              },
              "end": {
                "line": 1105,
                "character": 126
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`usageDescription.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiUsageDTO",
              "properties",
              "usageDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1103,
                "character": 25
              },
              "end": {
                "line": 1105,
                "character": 126
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`APIGraphNode.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIGraphNode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1108,
                "character": 17
              },
              "end": {
                "line": 1137,
                "character": 18
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "changes"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1121,
                "character": 16
              },
              "end": {
                "line": 1124,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "consumers"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1125,
                "character": 18
              },
              "end": {
                "line": 1128,
                "character": 57
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIGraphNode",
              "properties",
              "deployments"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1129,
                "character": 20
              },
              "end": {
                "line": 1132,
                "character": 57
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIDependencyGraphNodeListDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1138,
                "character": 34
              },
              "end": {
                "line": 1142,
                "character": 77
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiSpecificationGraphsDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphsDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1143,
                "character": 30
              },
              "end": {
                "line": 1161,
                "character": 21
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphsDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1149,
                "character": 20
              },
              "end": {
                "line": 1151,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphsDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1149,
                "character": 20
              },
              "end": {
                "line": 1151,
                "character": 74
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiSpecificationGraphNodeDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1162,
                "character": 33
              },
              "end": {
                "line": 1199,
                "character": 18
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`providerKey.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1168,
                "character": 20
              },
              "end": {
                "line": 1170,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`providerKey.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "providerKey"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1168,
                "character": 20
              },
              "end": {
                "line": 1170,
                "character": 74
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`version.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1171,
                "character": 16
              },
              "end": {
                "line": 1174,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`version.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "version"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1171,
                "character": 16
              },
              "end": {
                "line": 1174,
                "character": 31
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "changes"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1188,
                "character": 16
              },
              "end": {
                "line": 1191,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationGraphNodeDTO",
              "properties",
              "consumers"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1192,
                "character": 18
              },
              "end": {
                "line": 1195,
                "character": 55
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1203,
                "character": 10
              },
              "end": {
                "line": 1208,
                "character": 64
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiSpecificationPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1205,
                "character": 20
              },
              "end": {
                "line": 1208,
                "character": 64
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiConsumerPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1213,
                "character": 10
              },
              "end": {
                "line": 1218,
                "character": 59
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiConsumerPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1215,
                "character": 20
              },
              "end": {
                "line": 1218,
                "character": 59
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1223,
                "character": 10
              },
              "end": {
                "line": 1228,
                "character": 58
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIVersionPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1225,
                "character": 20
              },
              "end": {
                "line": 1228,
                "character": 58
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIVersionFullDataPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1233,
                "character": 10
              },
              "end": {
                "line": 1238,
                "character": 66
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIVersionFullDataPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1235,
                "character": 20
              },
              "end": {
                "line": 1238,
                "character": 66
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "APIDeploymentPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1243,
                "character": 10
              },
              "end": {
                "line": 1248,
                "character": 61
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "APIDeploymentPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1245,
                "character": 20
              },
              "end": {
                "line": 1248,
                "character": 61
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1261,
                "character": 13
              },
              "end": {
                "line": 1262,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1261,
                "character": 13
              },
              "end": {
                "line": 1262,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "normalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1268,
                "character": 13
              },
              "end": {
                "line": 1269,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "normalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1268,
                "character": 13
              },
              "end": {
                "line": 1269,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1275,
                "character": 13
              },
              "end": {
                "line": 1276,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1275,
                "character": 13
              },
              "end": {
                "line": 1276,
                "character": 20
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "offset",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1283,
                "character": 13
              },
              "end": {
                "line": 1287,
                "character": 18
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "slot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1369,
                "character": 13
              },
              "end": {
                "line": 1370,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "slot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1369,
                "character": 13
              },
              "end": {
                "line": 1370,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathSlot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1377,
                "character": 13
              },
              "end": {
                "line": 1378,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathSlot",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1377,
                "character": 13
              },
              "end": {
                "line": 1378,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1383,
                "character": 13
              },
              "end": {
                "line": 1384,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "consumerId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1383,
                "character": 13
              },
              "end": {
                "line": 1384,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1387,
                "character": 13
              },
              "end": {
                "line": 1388,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1387,
                "character": 13
              },
              "end": {
                "line": 1388,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProtocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1393,
                "character": 13
              },
              "end": {
                "line": 1394,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProtocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1393,
                "character": 13
              },
              "end": {
                "line": 1394,
                "character": 20
              }
            }
          },
          {
            "code": "numeric-required-properties-format",
            "message": "`schema.format` property should be defined",
            "path": [
              "components",
              "parameters",
              "maxApiNodes",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1399,
                "character": 13
              },
              "end": {
                "line": 1401,
                "character": 19
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "maxApiNodes",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1399,
                "character": 13
              },
              "end": {
                "line": 1401,
                "character": 19
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "components",
              "parameters",
              "maxApiNodes",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1399,
                "character": 13
              },
              "end": {
                "line": 1401,
                "character": 19
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1409,
                "character": 13
              },
              "end": {
                "line": 1410,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "apiId",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1409,
                "character": 13
              },
              "end": {
                "line": 1410,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1417,
                "character": 13
              },
              "end": {
                "line": 1418,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1417,
                "character": 13
              },
              "end": {
                "line": 1418,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1424,
                "character": 13
              },
              "end": {
                "line": 1425,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1424,
                "character": 13
              },
              "end": {
                "line": 1425,
                "character": 20
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "parameters",
              "queryArtifactNameArray",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1431,
                "character": 13
              },
              "end": {
                "line": 1435,
                "character": 19
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactNameArray",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1433,
                "character": 14
              },
              "end": {
                "line": 1434,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryArtifactNameArray",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1433,
                "character": 14
              },
              "end": {
                "line": 1434,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "projectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1441,
                "character": 13
              },
              "end": {
                "line": 1442,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "projectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1441,
                "character": 13
              },
              "end": {
                "line": 1442,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProjectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1448,
                "character": 13
              },
              "end": {
                "line": 1449,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "queryProjectKey",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1448,
                "character": 13
              },
              "end": {
                "line": 1449,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathNormalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1455,
                "character": 13
              },
              "end": {
                "line": 1456,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "pathNormalizedApiName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1455,
                "character": 13
              },
              "end": {
                "line": 1456,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "version",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1461,
                "character": 13
              },
              "end": {
                "line": 1462,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "version",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1461,
                "character": 13
              },
              "end": {
                "line": 1462,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "protocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1468,
                "character": 13
              },
              "end": {
                "line": 1469,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "protocol",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1468,
                "character": 13
              },
              "end": {
                "line": 1469,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1472,
                "character": 13
              },
              "end": {
                "line": 1473,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "artifactVersion",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1472,
                "character": 13
              },
              "end": {
                "line": 1473,
                "character": 20
              }
            }
          }
        ]
      }
    ],
    "documentationValidations": [],
    "lintingGrade": {
      "grade": "D",
      "description": "Inadequate"
    },
    "securityGrade": {
      "grade": "C",
      "description": "Adequate"
    }
  },
  {
    "apiName": "API Event Processor",
    "apiProtocol": "REST",
    "apiVersion": "1.3.2",
    "pipelineVersion": "v2",
    "lintValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "ensure-basepath-version",
            "message": "url version should be v1",
            "path": [],
            "severity": 1,
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 711,
                "character": 15
              }
            }
          },
          {
            "code": "global-security",
            "message": "Global 'security' field is not defined",
            "path": [],
            "severity": 0,
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 711,
                "character": 15
              }
            }
          },
          {
            "code": "contact-email",
            "message": "Definition must have a contact email",
            "path": [
              "info"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1,
                "character": 5
              },
              "end": {
                "line": 3,
                "character": 18
              }
            }
          },
          {
            "code": "info-contact",
            "message": "Info object should contain `contact` object.",
            "path": [
              "info"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1,
                "character": 5
              },
              "end": {
                "line": 3,
                "character": 18
              }
            }
          },
          {
            "code": "info-description",
            "message": "OpenAPI object info `description` must be present and non-empty string.",
            "path": [
              "info"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 1,
                "character": 5
              },
              "end": {
                "line": 3,
                "character": 18
              }
            }
          },
          {
            "code": "server-https",
            "message": "Server objects should support https",
            "path": [
              "servers",
              "1",
              "url"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 7,
                "character": 9
              },
              "end": {
                "line": 7,
                "character": 76
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 18,
                "character": 15
              },
              "end": {
                "line": 19,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 19,
                "character": 8
              },
              "end": {
                "line": 19,
                "character": 48
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 22,
                "character": 16
              },
              "end": {
                "line": 30,
                "character": 66
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 29,
                "character": 14
              },
              "end": {
                "line": 30,
                "character": 66
              }
            }
          },
          {
            "code": "delete-http-status-codes-resource",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "delete",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 38,
                "character": 16
              },
              "end": {
                "line": 42,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 14
              },
              "end": {
                "line": 40,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 41,
                "character": 14
              },
              "end": {
                "line": 42,
                "character": 32
              }
            }
          },
          {
            "code": "put-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "put",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 49,
                "character": 16
              },
              "end": {
                "line": 57,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 56,
                "character": 14
              },
              "end": {
                "line": 57,
                "character": 32
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/tickets",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 71,
                "character": 16
              },
              "end": {
                "line": 79,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 78,
                "character": 14
              },
              "end": {
                "line": 79,
                "character": 37
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 83,
                "character": 11
              },
              "end": {
                "line": 83,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 84,
                "character": 11
              },
              "end": {
                "line": 84,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 85,
                "character": 11
              },
              "end": {
                "line": 85,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 86,
                "character": 11
              },
              "end": {
                "line": 86,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 87,
                "character": 11
              },
              "end": {
                "line": 87,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 88,
                "character": 11
              },
              "end": {
                "line": 88,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 89,
                "character": 11
              },
              "end": {
                "line": 89,
                "character": 65
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[7].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "7"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 90,
                "character": 11
              },
              "end": {
                "line": 90,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[8].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "8"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 91,
                "character": 11
              },
              "end": {
                "line": 91,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[9].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "9"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 92,
                "character": 11
              },
              "end": {
                "line": 92,
                "character": 51
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[10].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "10"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 93,
                "character": 11
              },
              "end": {
                "line": 93,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[11].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "11"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 94,
                "character": 11
              },
              "end": {
                "line": 94,
                "character": 49
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[12].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "get",
              "parameters",
              "12"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 95,
                "character": 11
              },
              "end": {
                "line": 95,
                "character": 48
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "delete",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 106,
                "character": 14
              },
              "end": {
                "line": 107,
                "character": 37
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/tickets",
              "delete",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 110,
                "character": 10
              },
              "end": {
                "line": 110,
                "character": 54
              }
            }
          },
          {
            "code": "query-camel-case",
            "message": "query parameters should be camelCase",
            "path": [
              "paths",
              "/tickets",
              "delete",
              "parameters",
              "0",
              "name"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 110,
                "character": 10
              },
              "end": {
                "line": 110,
                "character": 54
              }
            }
          },
          {
            "code": "post-http-status-codes-collections",
            "message": "Missing the responses[401] http definition",
            "path": [
              "paths",
              "/tickets",
              "post",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 116,
                "character": 16
              },
              "end": {
                "line": 126,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 123,
                "character": 14
              },
              "end": {
                "line": 124,
                "character": 36
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 125,
                "character": 14
              },
              "end": {
                "line": 126,
                "character": 37
              }
            }
          },
          {
            "code": "post-http-status-codes-collections",
            "message": "Missing the responses[201] http definition",
            "path": [
              "paths",
              "/tickets/controllers",
              "post",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 148,
                "character": 16
              },
              "end": {
                "line": 158,
                "character": 39
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/tickets/controllers",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 155,
                "character": 14
              },
              "end": {
                "line": 156,
                "character": 36
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets/controllers",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 157,
                "character": 14
              },
              "end": {
                "line": 158,
                "character": 39
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/archived-tickets/{ticketID}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 163,
                "character": 15
              },
              "end": {
                "line": 164,
                "character": 48
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets/{ticketID}",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 164,
                "character": 8
              },
              "end": {
                "line": 164,
                "character": 48
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/archived-tickets/{ticketID}",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 167,
                "character": 16
              },
              "end": {
                "line": 175,
                "character": 72
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets/{ticketID}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 174,
                "character": 14
              },
              "end": {
                "line": 175,
                "character": 72
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 185,
                "character": 16
              },
              "end": {
                "line": 193,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 192,
                "character": 14
              },
              "end": {
                "line": 193,
                "character": 37
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 197,
                "character": 11
              },
              "end": {
                "line": 197,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 198,
                "character": 11
              },
              "end": {
                "line": 198,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 199,
                "character": 11
              },
              "end": {
                "line": 199,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[3].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "3"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 200,
                "character": 11
              },
              "end": {
                "line": 200,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[4].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "4"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 201,
                "character": 11
              },
              "end": {
                "line": 201,
                "character": 59
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[5].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "5"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 202,
                "character": 11
              },
              "end": {
                "line": 202,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[6].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "6"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 203,
                "character": 11
              },
              "end": {
                "line": 203,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[7].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "7"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 204,
                "character": 11
              },
              "end": {
                "line": 204,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[8].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "8"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 205,
                "character": 11
              },
              "end": {
                "line": 205,
                "character": 65
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[9].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "9"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 206,
                "character": 11
              },
              "end": {
                "line": 206,
                "character": 61
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[10].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "10"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 207,
                "character": 11
              },
              "end": {
                "line": 207,
                "character": 57
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[11].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "11"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 208,
                "character": 11
              },
              "end": {
                "line": 208,
                "character": 51
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[12].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "12"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 209,
                "character": 11
              },
              "end": {
                "line": 209,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[13].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "13"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 210,
                "character": 11
              },
              "end": {
                "line": 210,
                "character": 49
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[14].example` property is not truthy",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "parameters",
              "14"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 211,
                "character": 11
              },
              "end": {
                "line": 211,
                "character": 48
              }
            }
          },
          {
            "code": "post-http-status-codes-collections",
            "message": "Missing the responses[201] http definition",
            "path": [
              "paths",
              "/archived-tickets/unarchive",
              "post",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 16
              },
              "end": {
                "line": 233,
                "character": 39
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets/unarchive",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 230,
                "character": 14
              },
              "end": {
                "line": 231,
                "character": 36
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets/unarchive",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 232,
                "character": 14
              },
              "end": {
                "line": 233,
                "character": 39
              }
            }
          },
          {
            "code": "operation-tag-defined",
            "message": "Operation tags should be defined in global tags.",
            "path": [
              "paths",
              "/blacklist",
              "get",
              "tags",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 241,
                "character": 10
              },
              "end": {
                "line": 241,
                "character": 19
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/blacklist",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 242,
                "character": 16
              },
              "end": {
                "line": 250,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 249,
                "character": 14
              },
              "end": {
                "line": 250,
                "character": 37
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/blacklist",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 254,
                "character": 11
              },
              "end": {
                "line": 254,
                "character": 58
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/blacklist",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 255,
                "character": 11
              },
              "end": {
                "line": 255,
                "character": 51
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[2].example` property is not truthy",
            "path": [
              "paths",
              "/blacklist",
              "get",
              "parameters",
              "2"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 256,
                "character": 11
              },
              "end": {
                "line": 256,
                "character": 52
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "put",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 261,
                "character": 14
              },
              "end": {
                "line": 262,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 263,
                "character": 14
              },
              "end": {
                "line": 264,
                "character": 32
              }
            }
          },
          {
            "code": "operation-tag-defined",
            "message": "Operation tags should be defined in global tags.",
            "path": [
              "paths",
              "/blacklist",
              "put",
              "tags",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 272,
                "character": 8
              },
              "end": {
                "line": 272,
                "character": 17
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "delete",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 283,
                "character": 14
              },
              "end": {
                "line": 284,
                "character": 37
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/blacklist",
              "delete",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 287,
                "character": 10
              },
              "end": {
                "line": 287,
                "character": 57
              }
            }
          },
          {
            "code": "operation-tag-defined",
            "message": "Operation tags should be defined in global tags.",
            "path": [
              "paths",
              "/blacklist",
              "delete",
              "tags",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 289,
                "character": 10
              },
              "end": {
                "line": 289,
                "character": 19
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`ticketID.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 292,
                "character": 13
              },
              "end": {
                "line": 298,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketID",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 297,
                "character": 13
              },
              "end": {
                "line": 298,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketID",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 297,
                "character": 13
              },
              "end": {
                "line": 298,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`ticketStatus.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketStatus"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 299,
                "character": 17
              },
              "end": {
                "line": 306,
                "character": 64
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`deleteTicketStatus.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "deleteTicketStatus"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 307,
                "character": 23
              },
              "end": {
                "line": 314,
                "character": 37
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`ticketDate.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 315,
                "character": 15
              },
              "end": {
                "line": 322,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`attempts.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "attempts"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 323,
                "character": 13
              },
              "end": {
                "line": 329,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-format",
            "message": "`schema.format` property should be defined",
            "path": [
              "components",
              "parameters",
              "attempts",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 328,
                "character": 13
              },
              "end": {
                "line": 329,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "attempts",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 328,
                "character": 13
              },
              "end": {
                "line": 329,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "components",
              "parameters",
              "attempts",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 328,
                "character": 13
              },
              "end": {
                "line": 329,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`eventType.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "eventType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 330,
                "character": 14
              },
              "end": {
                "line": 337,
                "character": 46
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`fromCreationDate.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "fromCreationDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 338,
                "character": 21
              },
              "end": {
                "line": 345,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`toCreationDate.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "toCreationDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 346,
                "character": 19
              },
              "end": {
                "line": 353,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`fromUpdateDate.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "fromUpdateDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 354,
                "character": 19
              },
              "end": {
                "line": 361,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`toUpdateDate.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "toUpdateDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 362,
                "character": 17
              },
              "end": {
                "line": 369,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`ticketIDList.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketIDList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 370,
                "character": 17
              },
              "end": {
                "line": 379,
                "character": 19
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "parameters",
              "ticketIDList",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 375,
                "character": 13
              },
              "end": {
                "line": 379,
                "character": 19
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketIDList",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 377,
                "character": 14
              },
              "end": {
                "line": 378,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketIDList",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 377,
                "character": 14
              },
              "end": {
                "line": 378,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`ruleCodeElement.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCodeElement"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 380,
                "character": 20
              },
              "end": {
                "line": 389,
                "character": 19
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "parameters",
              "ruleCodeElement",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 385,
                "character": 13
              },
              "end": {
                "line": 389,
                "character": 19
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCodeElement",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 387,
                "character": 14
              },
              "end": {
                "line": 388,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCodeElement",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 387,
                "character": 14
              },
              "end": {
                "line": 388,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`offset.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 390,
                "character": 11
              },
              "end": {
                "line": 400,
                "character": 18
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "offset",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 396,
                "character": 13
              },
              "end": {
                "line": 400,
                "character": 18
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`limit.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 401,
                "character": 10
              },
              "end": {
                "line": 412,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`fromArchivedDate.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "fromArchivedDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 413,
                "character": 21
              },
              "end": {
                "line": 420,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`toArchivedDate.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "toArchivedDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 421,
                "character": 19
              },
              "end": {
                "line": 428,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`eventMessageFilter.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "eventMessageFilter"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 429,
                "character": 23
              },
              "end": {
                "line": 435,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "eventMessageFilter",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 434,
                "character": 13
              },
              "end": {
                "line": 435,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "eventMessageFilter",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 434,
                "character": 13
              },
              "end": {
                "line": 435,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`eventMessageFilterType.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "eventMessageFilterType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 436,
                "character": 27
              },
              "end": {
                "line": 443,
                "character": 35
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`ruleDescription.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 444,
                "character": 20
              },
              "end": {
                "line": 450,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleDescription",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 449,
                "character": 13
              },
              "end": {
                "line": 450,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleDescription",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 449,
                "character": 13
              },
              "end": {
                "line": 450,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`ruleCode.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 451,
                "character": 13
              },
              "end": {
                "line": 457,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCode",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 456,
                "character": 13
              },
              "end": {
                "line": 457,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCode",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 456,
                "character": 13
              },
              "end": {
                "line": 457,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`jsonField.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "jsonField"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 458,
                "character": 14
              },
              "end": {
                "line": 464,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "jsonField",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 463,
                "character": 13
              },
              "end": {
                "line": 464,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "jsonField",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 463,
                "character": 13
              },
              "end": {
                "line": 464,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`additionalInfo.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "additionalInfo"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 465,
                "character": 19
              },
              "end": {
                "line": 471,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "additionalInfo",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 470,
                "character": 13
              },
              "end": {
                "line": 471,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "additionalInfo",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 470,
                "character": 13
              },
              "end": {
                "line": 471,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`stepName.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepName"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 472,
                "character": 13
              },
              "end": {
                "line": 478,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 477,
                "character": 13
              },
              "end": {
                "line": 478,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 477,
                "character": 13
              },
              "end": {
                "line": 478,
                "character": 20
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`stepError.example` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepError"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 479,
                "character": 14
              },
              "end": {
                "line": 485,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepError",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 484,
                "character": 13
              },
              "end": {
                "line": 485,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepError",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 484,
                "character": 13
              },
              "end": {
                "line": 485,
                "character": 20
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "TicketListResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 487,
                "character": 23
              },
              "end": {
                "line": 492,
                "character": 17
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketResponse.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 493,
                "character": 19
              },
              "end": {
                "line": 506,
                "character": 15
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "ticketId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 497,
                "character": 17
              },
              "end": {
                "line": 498,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`ticketId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 497,
                "character": 17
              },
              "end": {
                "line": 498,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ticketId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 497,
                "character": 17
              },
              "end": {
                "line": 498,
                "character": 22
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property success does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "success"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 499,
                "character": 16
              },
              "end": {
                "line": 500,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "success doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "success"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 499,
                "character": 16
              },
              "end": {
                "line": 500,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "error doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 501,
                "character": 14
              },
              "end": {
                "line": 502,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`error.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 501,
                "character": 14
              },
              "end": {
                "line": 502,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`error.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 501,
                "character": 14
              },
              "end": {
                "line": 502,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`PerformActionRequest.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 507,
                "character": 25
              },
              "end": {
                "line": 522,
                "character": 12
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "action doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "action"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 511,
                "character": 15
              },
              "end": {
                "line": 513,
                "character": 51
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "data"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 514,
                "character": 13
              },
              "end": {
                "line": 518,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "data doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "data"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 514,
                "character": 13
              },
              "end": {
                "line": 518,
                "character": 21
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "data",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 516,
                "character": 16
              },
              "end": {
                "line": 517,
                "character": 24
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "data",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 516,
                "character": 16
              },
              "end": {
                "line": 517,
                "character": 24
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketsList.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketsList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 523,
                "character": 16
              },
              "end": {
                "line": 535,
                "character": 12
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "TicketsList",
              "properties",
              "ticketIdList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 527,
                "character": 21
              },
              "end": {
                "line": 531,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "ticketIdList doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketsList",
              "properties",
              "ticketIdList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 527,
                "character": 21
              },
              "end": {
                "line": 531,
                "character": 21
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketsList",
              "properties",
              "ticketIdList",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 529,
                "character": 16
              },
              "end": {
                "line": 530,
                "character": 24
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketsList",
              "properties",
              "ticketIdList",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 529,
                "character": 16
              },
              "end": {
                "line": 530,
                "character": 24
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketDTOFull.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 536,
                "character": 18
              },
              "end": {
                "line": 568,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "ticketId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 546,
                "character": 17
              },
              "end": {
                "line": 547,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`ticketId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 546,
                "character": 17
              },
              "end": {
                "line": 547,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ticketId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 546,
                "character": 17
              },
              "end": {
                "line": 547,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "eventType doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "eventType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 548,
                "character": 18
              },
              "end": {
                "line": 550,
                "character": 78
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "retryStatus doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "retryStatus"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 551,
                "character": 20
              },
              "end": {
                "line": 553,
                "character": 66
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "attemptCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "attemptCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 554,
                "character": 21
              },
              "end": {
                "line": 555,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-format",
            "message": "`attemptCount.format` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "attemptCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 554,
                "character": 21
              },
              "end": {
                "line": 555,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`attemptCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "attemptCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 554,
                "character": 21
              },
              "end": {
                "line": 555,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`attemptCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "attemptCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 554,
                "character": 21
              },
              "end": {
                "line": 555,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "creationDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "creationDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 556,
                "character": 21
              },
              "end": {
                "line": 558,
                "character": 27
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "updateDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "updateDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 559,
                "character": 19
              },
              "end": {
                "line": 561,
                "character": 27
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "lastRetryDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "lastRetryDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 562,
                "character": 22
              },
              "end": {
                "line": 564,
                "character": 27
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "sourceEvent doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 567,
                "character": 20
              },
              "end": {
                "line": 568,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`sourceEvent.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 567,
                "character": 20
              },
              "end": {
                "line": 568,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`sourceEvent.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 567,
                "character": 20
              },
              "end": {
                "line": 568,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 569,
                "character": 14
              },
              "end": {
                "line": 587,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "eventType doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTO",
              "properties",
              "eventType"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 578,
                "character": 18
              },
              "end": {
                "line": 580,
                "character": 78
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "retryStatus doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTO",
              "properties",
              "retryStatus"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 581,
                "character": 20
              },
              "end": {
                "line": 583,
                "character": 43
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "sourceEvent doesn't have an example",
            "path": [
              "components",
              "schemas",
              "TicketDTO",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 20
              },
              "end": {
                "line": 587,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`sourceEvent.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTO",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 20
              },
              "end": {
                "line": 587,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`sourceEvent.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTO",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 20
              },
              "end": {
                "line": 587,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 591,
                "character": 10
              },
              "end": {
                "line": 596,
                "character": 58
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "TicketPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 593,
                "character": 20
              },
              "end": {
                "line": 596,
                "character": 58
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ArchivedTicketPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 600,
                "character": 10
              },
              "end": {
                "line": 605,
                "character": 69
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ArchivedTicketPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 602,
                "character": 20
              },
              "end": {
                "line": 605,
                "character": 69
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`PagedDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 606,
                "character": 13
              },
              "end": {
                "line": 618,
                "character": 21
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "offset doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 609,
                "character": 15
              },
              "end": {
                "line": 611,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`offset.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 609,
                "character": 15
              },
              "end": {
                "line": 611,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`offset.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 609,
                "character": 15
              },
              "end": {
                "line": 611,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "limit doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 612,
                "character": 14
              },
              "end": {
                "line": 614,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`limit.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 612,
                "character": 14
              },
              "end": {
                "line": 614,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`limit.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 612,
                "character": 14
              },
              "end": {
                "line": 614,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "totalElements doesn't have an example",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 615,
                "character": 22
              },
              "end": {
                "line": 617,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`totalElements.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 615,
                "character": 22
              },
              "end": {
                "line": 617,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`totalElements.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 615,
                "character": 22
              },
              "end": {
                "line": 617,
                "character": 23
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`RetryContextDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 619,
                "character": 20
              },
              "end": {
                "line": 631,
                "character": 22
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "failedSteps"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 622,
                "character": 20
              },
              "end": {
                "line": 625,
                "character": 54
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "skippedSteps"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 626,
                "character": 21
              },
              "end": {
                "line": 629,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "additionalInfo doesn't have an example",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "additionalInfo"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 630,
                "character": 23
              },
              "end": {
                "line": 631,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`additionalInfo.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "additionalInfo"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 630,
                "character": 23
              },
              "end": {
                "line": 631,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`additionalInfo.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "additionalInfo"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 630,
                "character": 23
              },
              "end": {
                "line": 631,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`FailedStepDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 632,
                "character": 18
              },
              "end": {
                "line": 638,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "step doesn't have an example",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 635,
                "character": 13
              },
              "end": {
                "line": 636,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`step.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 635,
                "character": 13
              },
              "end": {
                "line": 636,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`step.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 635,
                "character": 13
              },
              "end": {
                "line": 636,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "error doesn't have an example",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 637,
                "character": 14
              },
              "end": {
                "line": 638,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`error.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 637,
                "character": 14
              },
              "end": {
                "line": 638,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`error.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 637,
                "character": 14
              },
              "end": {
                "line": 638,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`SkippedStepDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 639,
                "character": 19
              },
              "end": {
                "line": 645,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "step doesn't have an example",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 642,
                "character": 13
              },
              "end": {
                "line": 643,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`step.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 642,
                "character": 13
              },
              "end": {
                "line": 643,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`step.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 642,
                "character": 13
              },
              "end": {
                "line": 643,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "reason doesn't have an example",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "reason"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 644,
                "character": 15
              },
              "end": {
                "line": 645,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`reason.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "reason"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 644,
                "character": 15
              },
              "end": {
                "line": 645,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`reason.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "reason"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 644,
                "character": 15
              },
              "end": {
                "line": 645,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ArchivedEventFullInfoDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ArchivedEventFullInfoDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 646,
                "character": 29
              },
              "end": {
                "line": 655,
                "character": 51
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "archivedDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ArchivedEventFullInfoDTO",
              "properties",
              "archivedDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 651,
                "character": 21
              },
              "end": {
                "line": 653,
                "character": 27
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "ArchivedEventFullInfoDTO",
              "properties",
              "eventRetryInfoDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 654,
                "character": 26
              },
              "end": {
                "line": 655,
                "character": 51
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`BlacklistEntryDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 656,
                "character": 22
              },
              "end": {
                "line": 674,
                "character": 53
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "ruleCode doesn't have an example",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 665,
                "character": 17
              },
              "end": {
                "line": 667,
                "character": 23
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ruleCode.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 665,
                "character": 17
              },
              "end": {
                "line": 667,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "ruleDescription doesn't have an example",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "ruleDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 668,
                "character": 24
              },
              "end": {
                "line": 670,
                "character": 24
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ruleDescription.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "ruleDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 668,
                "character": 24
              },
              "end": {
                "line": 670,
                "character": 24
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "conditions"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 671,
                "character": 19
              },
              "end": {
                "line": 674,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "BlacklistEntriesDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 675,
                "character": 24
              },
              "end": {
                "line": 679,
                "character": 54
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ConditionDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ConditionDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 680,
                "character": 17
              },
              "end": {
                "line": 691,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "jsonField doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "jsonField"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 688,
                "character": 18
              },
              "end": {
                "line": 689,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`jsonField.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "jsonField"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 688,
                "character": 18
              },
              "end": {
                "line": 689,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`jsonField.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "jsonField"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 688,
                "character": 18
              },
              "end": {
                "line": 689,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "regexFilter doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "regexFilter"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 690,
                "character": 20
              },
              "end": {
                "line": 691,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`regexFilter.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "regexFilter"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 690,
                "character": 20
              },
              "end": {
                "line": 691,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`regexFilter.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "regexFilter"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 690,
                "character": 20
              },
              "end": {
                "line": 691,
                "character": 22
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "BlacklistEntriesResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 692,
                "character": 29
              },
              "end": {
                "line": 697,
                "character": 17
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`BlacklistEntryResponse.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 698,
                "character": 27
              },
              "end": {
                "line": 711,
                "character": 15
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "ruleCode doesn't have an example",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 702,
                "character": 17
              },
              "end": {
                "line": 703,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`ruleCode.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 702,
                "character": 17
              },
              "end": {
                "line": 703,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ruleCode.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 702,
                "character": 17
              },
              "end": {
                "line": 703,
                "character": 22
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property success does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "success"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 704,
                "character": 16
              },
              "end": {
                "line": 705,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "success doesn't have an example",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "success"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 704,
                "character": 16
              },
              "end": {
                "line": 705,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "error doesn't have an example",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 706,
                "character": 14
              },
              "end": {
                "line": 707,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`error.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 706,
                "character": 14
              },
              "end": {
                "line": 707,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`error.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 706,
                "character": 14
              },
              "end": {
                "line": 707,
                "character": 22
              }
            }
          }
        ]
      }
    ],
    "securityValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "global-security",
            "message": "Global 'security' field is not defined",
            "path": [],
            "severity": 0,
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 711,
                "character": 15
              }
            }
          },
          {
            "code": "server-https",
            "message": "Server objects should support https",
            "path": [
              "servers",
              "1",
              "url"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 7,
                "character": 9
              },
              "end": {
                "line": 7,
                "character": 76
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 18,
                "character": 15
              },
              "end": {
                "line": 19,
                "character": 48
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 29,
                "character": 14
              },
              "end": {
                "line": 30,
                "character": 66
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "delete",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 14
              },
              "end": {
                "line": 40,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "delete",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 41,
                "character": 14
              },
              "end": {
                "line": 42,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/tickets/{ticketID}",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 56,
                "character": 14
              },
              "end": {
                "line": 57,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 78,
                "character": 14
              },
              "end": {
                "line": 79,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "delete",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 106,
                "character": 14
              },
              "end": {
                "line": 107,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 123,
                "character": 14
              },
              "end": {
                "line": 124,
                "character": 36
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 125,
                "character": 14
              },
              "end": {
                "line": 126,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/tickets/controllers",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 155,
                "character": 14
              },
              "end": {
                "line": 156,
                "character": 36
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/tickets/controllers",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 157,
                "character": 14
              },
              "end": {
                "line": 158,
                "character": 39
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/archived-tickets/{ticketID}",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 163,
                "character": 15
              },
              "end": {
                "line": 164,
                "character": 48
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets/{ticketID}",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 174,
                "character": 14
              },
              "end": {
                "line": 175,
                "character": 72
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 192,
                "character": 14
              },
              "end": {
                "line": 193,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets/unarchive",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 230,
                "character": 14
              },
              "end": {
                "line": 231,
                "character": 36
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/archived-tickets/unarchive",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 232,
                "character": 14
              },
              "end": {
                "line": 233,
                "character": 39
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "get",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 249,
                "character": 14
              },
              "end": {
                "line": 250,
                "character": 37
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "put",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 261,
                "character": 14
              },
              "end": {
                "line": 262,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "put",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 263,
                "character": 14
              },
              "end": {
                "line": 264,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/blacklist",
              "delete",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 283,
                "character": 14
              },
              "end": {
                "line": 284,
                "character": 37
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketID",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 297,
                "character": 13
              },
              "end": {
                "line": 298,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketID",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 297,
                "character": 13
              },
              "end": {
                "line": 298,
                "character": 20
              }
            }
          },
          {
            "code": "numeric-required-properties-format",
            "message": "`schema.format` property should be defined",
            "path": [
              "components",
              "parameters",
              "attempts",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 328,
                "character": 13
              },
              "end": {
                "line": 329,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "attempts",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 328,
                "character": 13
              },
              "end": {
                "line": 329,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "components",
              "parameters",
              "attempts",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 328,
                "character": 13
              },
              "end": {
                "line": 329,
                "character": 21
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "parameters",
              "ticketIDList",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 375,
                "character": 13
              },
              "end": {
                "line": 379,
                "character": 19
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketIDList",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 377,
                "character": 14
              },
              "end": {
                "line": 378,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ticketIDList",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 377,
                "character": 14
              },
              "end": {
                "line": 378,
                "character": 22
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "parameters",
              "ruleCodeElement",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 385,
                "character": 13
              },
              "end": {
                "line": 389,
                "character": 19
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCodeElement",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 387,
                "character": 14
              },
              "end": {
                "line": 388,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCodeElement",
              "schema",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 387,
                "character": 14
              },
              "end": {
                "line": 388,
                "character": 22
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "components",
              "parameters",
              "offset",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 396,
                "character": 13
              },
              "end": {
                "line": 400,
                "character": 18
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "eventMessageFilter",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 434,
                "character": 13
              },
              "end": {
                "line": 435,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "eventMessageFilter",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 434,
                "character": 13
              },
              "end": {
                "line": 435,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleDescription",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 449,
                "character": 13
              },
              "end": {
                "line": 450,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleDescription",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 449,
                "character": 13
              },
              "end": {
                "line": 450,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCode",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 456,
                "character": 13
              },
              "end": {
                "line": 457,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "ruleCode",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 456,
                "character": 13
              },
              "end": {
                "line": 457,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "jsonField",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 463,
                "character": 13
              },
              "end": {
                "line": 464,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "jsonField",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 463,
                "character": 13
              },
              "end": {
                "line": 464,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "additionalInfo",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 470,
                "character": 13
              },
              "end": {
                "line": 471,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "additionalInfo",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 470,
                "character": 13
              },
              "end": {
                "line": 471,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 477,
                "character": 13
              },
              "end": {
                "line": 478,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepName",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 477,
                "character": 13
              },
              "end": {
                "line": 478,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepError",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 484,
                "character": 13
              },
              "end": {
                "line": 485,
                "character": 20
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "components",
              "parameters",
              "stepError",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 484,
                "character": 13
              },
              "end": {
                "line": 485,
                "character": 20
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "TicketListResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 487,
                "character": 23
              },
              "end": {
                "line": 492,
                "character": 17
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketResponse.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 493,
                "character": 19
              },
              "end": {
                "line": 506,
                "character": 15
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`ticketId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 497,
                "character": 17
              },
              "end": {
                "line": 498,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ticketId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 497,
                "character": 17
              },
              "end": {
                "line": 498,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`error.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 501,
                "character": 14
              },
              "end": {
                "line": 502,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`error.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 501,
                "character": 14
              },
              "end": {
                "line": 502,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`PerformActionRequest.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 507,
                "character": 25
              },
              "end": {
                "line": 522,
                "character": 12
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "data"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 514,
                "character": 13
              },
              "end": {
                "line": 518,
                "character": 21
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "data",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 516,
                "character": 16
              },
              "end": {
                "line": 517,
                "character": 24
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PerformActionRequest",
              "properties",
              "data",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 516,
                "character": 16
              },
              "end": {
                "line": 517,
                "character": 24
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketsList.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketsList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 523,
                "character": 16
              },
              "end": {
                "line": 535,
                "character": 12
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "TicketsList",
              "properties",
              "ticketIdList"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 527,
                "character": 21
              },
              "end": {
                "line": 531,
                "character": 21
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`items.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketsList",
              "properties",
              "ticketIdList",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 529,
                "character": 16
              },
              "end": {
                "line": 530,
                "character": 24
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`items.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketsList",
              "properties",
              "ticketIdList",
              "items"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 529,
                "character": 16
              },
              "end": {
                "line": 530,
                "character": 24
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketDTOFull.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 536,
                "character": 18
              },
              "end": {
                "line": 568,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`ticketId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 546,
                "character": 17
              },
              "end": {
                "line": 547,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ticketId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "ticketId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 546,
                "character": 17
              },
              "end": {
                "line": 547,
                "character": 22
              }
            }
          },
          {
            "code": "numeric-required-properties-format",
            "message": "`attemptCount.format` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "attemptCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 554,
                "character": 21
              },
              "end": {
                "line": 555,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`attemptCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "attemptCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 554,
                "character": 21
              },
              "end": {
                "line": 555,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`attemptCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "attemptCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 554,
                "character": 21
              },
              "end": {
                "line": 555,
                "character": 23
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`sourceEvent.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 567,
                "character": 20
              },
              "end": {
                "line": 568,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`sourceEvent.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTOFull",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 567,
                "character": 20
              },
              "end": {
                "line": 568,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`TicketDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 569,
                "character": 14
              },
              "end": {
                "line": 587,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`sourceEvent.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTO",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 20
              },
              "end": {
                "line": 587,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`sourceEvent.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "TicketDTO",
              "properties",
              "sourceEvent"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 586,
                "character": 20
              },
              "end": {
                "line": 587,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "TicketPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 591,
                "character": 10
              },
              "end": {
                "line": 596,
                "character": 58
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "TicketPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 593,
                "character": 20
              },
              "end": {
                "line": 596,
                "character": 58
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`[1].additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ArchivedTicketPagedDTO",
              "allOf",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 600,
                "character": 10
              },
              "end": {
                "line": 605,
                "character": 69
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ArchivedTicketPagedDTO",
              "allOf",
              "1",
              "properties",
              "content"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 602,
                "character": 20
              },
              "end": {
                "line": 605,
                "character": 69
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`PagedDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 606,
                "character": 13
              },
              "end": {
                "line": 618,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`offset.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 609,
                "character": 15
              },
              "end": {
                "line": 611,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`offset.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "offset"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 609,
                "character": 15
              },
              "end": {
                "line": 611,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`limit.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 612,
                "character": 14
              },
              "end": {
                "line": 614,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`limit.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "limit"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 612,
                "character": 14
              },
              "end": {
                "line": 614,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`totalElements.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 615,
                "character": 22
              },
              "end": {
                "line": 617,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`totalElements.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "PagedDTO",
              "properties",
              "totalElements"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 615,
                "character": 22
              },
              "end": {
                "line": 617,
                "character": 23
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`RetryContextDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 619,
                "character": 20
              },
              "end": {
                "line": 631,
                "character": 22
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "failedSteps"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 622,
                "character": 20
              },
              "end": {
                "line": 625,
                "character": 54
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "skippedSteps"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 626,
                "character": 21
              },
              "end": {
                "line": 629,
                "character": 55
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`additionalInfo.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "additionalInfo"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 630,
                "character": 23
              },
              "end": {
                "line": 631,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`additionalInfo.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "RetryContextDTO",
              "properties",
              "additionalInfo"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 630,
                "character": 23
              },
              "end": {
                "line": 631,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`FailedStepDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 632,
                "character": 18
              },
              "end": {
                "line": 638,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`step.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 635,
                "character": 13
              },
              "end": {
                "line": 636,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`step.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 635,
                "character": 13
              },
              "end": {
                "line": 636,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`error.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 637,
                "character": 14
              },
              "end": {
                "line": 638,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`error.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "FailedStepDTO",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 637,
                "character": 14
              },
              "end": {
                "line": 638,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`SkippedStepDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 639,
                "character": 19
              },
              "end": {
                "line": 645,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`step.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 642,
                "character": 13
              },
              "end": {
                "line": 643,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`step.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "step"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 642,
                "character": 13
              },
              "end": {
                "line": 643,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`reason.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "reason"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 644,
                "character": 15
              },
              "end": {
                "line": 645,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`reason.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SkippedStepDTO",
              "properties",
              "reason"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 644,
                "character": 15
              },
              "end": {
                "line": 645,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ArchivedEventFullInfoDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ArchivedEventFullInfoDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 646,
                "character": 29
              },
              "end": {
                "line": 655,
                "character": 51
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`BlacklistEntryDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 656,
                "character": 22
              },
              "end": {
                "line": 674,
                "character": 53
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ruleCode.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 665,
                "character": 17
              },
              "end": {
                "line": 667,
                "character": 23
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ruleDescription.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "ruleDescription"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 668,
                "character": 24
              },
              "end": {
                "line": 670,
                "character": 24
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryDTO",
              "properties",
              "conditions"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 671,
                "character": 19
              },
              "end": {
                "line": 674,
                "character": 53
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "BlacklistEntriesDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 675,
                "character": 24
              },
              "end": {
                "line": 679,
                "character": 54
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ConditionDTO.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ConditionDTO"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 680,
                "character": 17
              },
              "end": {
                "line": 691,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`jsonField.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "jsonField"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 688,
                "character": 18
              },
              "end": {
                "line": 689,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`jsonField.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "jsonField"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 688,
                "character": 18
              },
              "end": {
                "line": 689,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`regexFilter.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "regexFilter"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 690,
                "character": 20
              },
              "end": {
                "line": 691,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`regexFilter.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ConditionDTO",
              "properties",
              "regexFilter"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 690,
                "character": 20
              },
              "end": {
                "line": 691,
                "character": 22
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "BlacklistEntriesResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 692,
                "character": 29
              },
              "end": {
                "line": 697,
                "character": 17
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`BlacklistEntryResponse.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 698,
                "character": 27
              },
              "end": {
                "line": 711,
                "character": 15
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`ruleCode.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 702,
                "character": 17
              },
              "end": {
                "line": 703,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`ruleCode.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "ruleCode"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 702,
                "character": 17
              },
              "end": {
                "line": 703,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`error.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 706,
                "character": 14
              },
              "end": {
                "line": 707,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`error.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "BlacklistEntryResponse",
              "properties",
              "error"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 706,
                "character": 14
              },
              "end": {
                "line": 707,
                "character": 22
              }
            }
          }
        ]
      }
    ],
    "documentationValidations": [],
    "lintingGrade": {
      "grade": "D",
      "description": "Inadequate"
    },
    "securityGrade": {
      "grade": "C",
      "description": "Adequate"
    }
  },
  {
    "apiName": "API Statistics",
    "apiProtocol": "REST",
    "apiVersion": "2.1.4",
    "pipelineVersion": "v2",
    "lintValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "ensure-basepath-version",
            "message": "url version should be v2",
            "path": [],
            "severity": 1,
            "range": {
              "start": {
                "line": 0,
                "character": 0
              },
              "end": {
                "line": 434,
                "character": 19
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 20,
                "character": 8
              },
              "end": {
                "line": 48,
                "character": 22
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 25,
                "character": 16
              },
              "end": {
                "line": 36,
                "character": 32
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "responses",
              "200",
              "content",
              "application/json",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 30,
                "character": 21
              },
              "end": {
                "line": 33,
                "character": 55
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 35,
                "character": 14
              },
              "end": {
                "line": 36,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 10
              },
              "end": {
                "line": 43,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 17
              },
              "end": {
                "line": 41,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 17
              },
              "end": {
                "line": 41,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 44,
                "character": 10
              },
              "end": {
                "line": 48,
                "character": 22
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 44,
                "character": 17
              },
              "end": {
                "line": 46,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 44,
                "character": 17
              },
              "end": {
                "line": 46,
                "character": 25
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/apis/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 49,
                "character": 15
              },
              "end": {
                "line": 49,
                "character": 18
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 51,
                "character": 15
              },
              "end": {
                "line": 56,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 52,
                "character": 8
              },
              "end": {
                "line": 56,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 55,
                "character": 15
              },
              "end": {
                "line": 56,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 55,
                "character": 15
              },
              "end": {
                "line": 56,
                "character": 22
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "get"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 57,
                "character": 8
              },
              "end": {
                "line": 72,
                "character": 32
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 63,
                "character": 16
              },
              "end": {
                "line": 72,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 71,
                "character": 14
              },
              "end": {
                "line": 72,
                "character": 32
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 73,
                "character": 9
              },
              "end": {
                "line": 101,
                "character": 51
              }
            }
          },
          {
            "code": "post-http-status-codes-controller",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 78,
                "character": 16
              },
              "end": {
                "line": 96,
                "character": 44
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 79,
                "character": 14
              },
              "end": {
                "line": 80,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 87,
                "character": 14
              },
              "end": {
                "line": 88,
                "character": 34
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [401].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "401"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 89,
                "character": 14
              },
              "end": {
                "line": 90,
                "character": 35
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [403].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "403"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 91,
                "character": 14
              },
              "end": {
                "line": 92,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 93,
                "character": 14
              },
              "end": {
                "line": 94,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 95,
                "character": 14
              },
              "end": {
                "line": 96,
                "character": 44
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 103,
                "character": 15
              },
              "end": {
                "line": 108,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 104,
                "character": 8
              },
              "end": {
                "line": 108,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 107,
                "character": 15
              },
              "end": {
                "line": 108,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 107,
                "character": 15
              },
              "end": {
                "line": 108,
                "character": 22
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 109,
                "character": 9
              },
              "end": {
                "line": 133,
                "character": 32
              }
            }
          },
          {
            "code": "post-http-status-codes-controller",
            "message": "Missing the responses[200] http definition",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 119,
                "character": 16
              },
              "end": {
                "line": 133,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 126,
                "character": 14
              },
              "end": {
                "line": 127,
                "character": 34
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [401].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "401"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 128,
                "character": 14
              },
              "end": {
                "line": 129,
                "character": 35
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [403].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "403"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 130,
                "character": 14
              },
              "end": {
                "line": 131,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 132,
                "character": 14
              },
              "end": {
                "line": 133,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 135,
                "character": 15
              },
              "end": {
                "line": 140,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 136,
                "character": 8
              },
              "end": {
                "line": 140,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 139,
                "character": 15
              },
              "end": {
                "line": 140,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 139,
                "character": 15
              },
              "end": {
                "line": 140,
                "character": 22
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "get"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 141,
                "character": 8
              },
              "end": {
                "line": 168,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 148,
                "character": 10
              },
              "end": {
                "line": 153,
                "character": 24
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 154,
                "character": 10
              },
              "end": {
                "line": 159,
                "character": 24
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 160,
                "character": 16
              },
              "end": {
                "line": 168,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 167,
                "character": 14
              },
              "end": {
                "line": 168,
                "character": 32
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/verticals/activity",
              "get"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 170,
                "character": 8
              },
              "end": {
                "line": 197,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/activity",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 177,
                "character": 10
              },
              "end": {
                "line": 182,
                "character": 24
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/activity",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 183,
                "character": 10
              },
              "end": {
                "line": 188,
                "character": 24
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/v2/verticals/activity",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 189,
                "character": 16
              },
              "end": {
                "line": 197,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/verticals/activity",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 196,
                "character": 14
              },
              "end": {
                "line": 197,
                "character": 32
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 199,
                "character": 8
              },
              "end": {
                "line": 227,
                "character": 22
              }
            }
          },
          {
            "code": "get-http-status-codes-collections",
            "message": "Missing the responses[204] http definition",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 202,
                "character": 16
              },
              "end": {
                "line": 213,
                "character": 32
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "responses",
              "200",
              "content",
              "application/json",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 207,
                "character": 21
              },
              "end": {
                "line": 210,
                "character": 60
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 212,
                "character": 14
              },
              "end": {
                "line": 213,
                "character": 32
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 218,
                "character": 10
              },
              "end": {
                "line": 222,
                "character": 21
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 218,
                "character": 17
              },
              "end": {
                "line": 220,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 218,
                "character": 17
              },
              "end": {
                "line": 220,
                "character": 25
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[1].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "1"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 10
              },
              "end": {
                "line": 227,
                "character": 22
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 17
              },
              "end": {
                "line": 225,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 17
              },
              "end": {
                "line": 225,
                "character": 25
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 228,
                "character": 15
              },
              "end": {
                "line": 228,
                "character": 18
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 230,
                "character": 15
              },
              "end": {
                "line": 235,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-param-examples",
            "message": "`[0].example` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "parameters",
              "0"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 231,
                "character": 8
              },
              "end": {
                "line": 235,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 231,
                "character": 15
              },
              "end": {
                "line": 232,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 231,
                "character": 15
              },
              "end": {
                "line": 232,
                "character": 22
              }
            }
          },
          {
            "code": "operation-description",
            "message": "Operation `description` must be present and non-empty string.",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "get"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 236,
                "character": 8
              },
              "end": {
                "line": 254,
                "character": 15
              }
            }
          },
          {
            "code": "get-http-status-codes-resource",
            "message": "Missing the responses[400] http definition",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "get",
              "responses"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 239,
                "character": 16
              },
              "end": {
                "line": 251,
                "character": 58
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiStats.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiStats"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 261,
                "character": 13
              },
              "end": {
                "line": 293,
                "character": 15
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 276,
                "character": 14
              },
              "end": {
                "line": 277,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 276,
                "character": 14
              },
              "end": {
                "line": 277,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 276,
                "character": 14
              },
              "end": {
                "line": 277,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "verticalId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 278,
                "character": 19
              },
              "end": {
                "line": 279,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 278,
                "character": 19
              },
              "end": {
                "line": 279,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 278,
                "character": 19
              },
              "end": {
                "line": 279,
                "character": 22
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property hasReadme does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "hasReadme"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 280,
                "character": 18
              },
              "end": {
                "line": 281,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "hasReadme doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "hasReadme"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 280,
                "character": 18
              },
              "end": {
                "line": 281,
                "character": 23
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property hasSummary does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "hasSummary"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 282,
                "character": 19
              },
              "end": {
                "line": 283,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "hasSummary doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "hasSummary"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 282,
                "character": 19
              },
              "end": {
                "line": 283,
                "character": 23
              }
            }
          },
          {
            "code": "boolean-prefix-property",
            "message": "property hasApiPortalConfig does not have the proper prefix for boolean",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "hasApiPortalConfig"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 284,
                "character": 27
              },
              "end": {
                "line": 285,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "hasApiPortalConfig doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "hasApiPortalConfig"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 284,
                "character": 27
              },
              "end": {
                "line": 285,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 286,
                "character": 27
              },
              "end": {
                "line": 287,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "bitbucketProjectID doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 286,
                "character": 27
              },
              "end": {
                "line": 287,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`bitbucketProjectID.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 286,
                "character": 27
              },
              "end": {
                "line": 287,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`bitbucketProjectID.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 286,
                "character": 27
              },
              "end": {
                "line": 287,
                "character": 22
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "subapis"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 288,
                "character": 16
              },
              "end": {
                "line": 291,
                "character": 47
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`VerticalStats.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 294,
                "character": 18
              },
              "end": {
                "line": 335,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "verticalId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 298,
                "character": 19
              },
              "end": {
                "line": 299,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 298,
                "character": 19
              },
              "end": {
                "line": 299,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 298,
                "character": 19
              },
              "end": {
                "line": 299,
                "character": 22
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "totalAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 300,
                "character": 22
              },
              "end": {
                "line": 302,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "totalAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "totalAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 300,
                "character": 22
              },
              "end": {
                "line": 302,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`totalAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "totalAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 300,
                "character": 22
              },
              "end": {
                "line": 302,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`totalAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "totalAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 300,
                "character": 22
              },
              "end": {
                "line": 302,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "openapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 303,
                "character": 24
              },
              "end": {
                "line": 305,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "openapiAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "openapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 303,
                "character": 24
              },
              "end": {
                "line": 305,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`openapiAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "openapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 303,
                "character": 24
              },
              "end": {
                "line": 305,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`openapiAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "openapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 303,
                "character": 24
              },
              "end": {
                "line": 305,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "swaggerAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 306,
                "character": 24
              },
              "end": {
                "line": 308,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "swaggerAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "swaggerAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 306,
                "character": 24
              },
              "end": {
                "line": 308,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`swaggerAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "swaggerAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 306,
                "character": 24
              },
              "end": {
                "line": 308,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`swaggerAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "swaggerAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 306,
                "character": 24
              },
              "end": {
                "line": 308,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "graphqlAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 309,
                "character": 24
              },
              "end": {
                "line": 311,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "graphqlAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "graphqlAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 309,
                "character": 24
              },
              "end": {
                "line": 311,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`graphqlAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "graphqlAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 309,
                "character": 24
              },
              "end": {
                "line": 311,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`graphqlAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "graphqlAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 309,
                "character": 24
              },
              "end": {
                "line": 311,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "soapAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 21
              },
              "end": {
                "line": 314,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "soapAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "soapAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 21
              },
              "end": {
                "line": 314,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`soapAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "soapAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 21
              },
              "end": {
                "line": 314,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`soapAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "soapAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 21
              },
              "end": {
                "line": 314,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "grpcAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 315,
                "character": 21
              },
              "end": {
                "line": 317,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "grpcAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "grpcAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 315,
                "character": 21
              },
              "end": {
                "line": 317,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`grpcAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "grpcAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 315,
                "character": 21
              },
              "end": {
                "line": 317,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`grpcAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "grpcAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 315,
                "character": 21
              },
              "end": {
                "line": 317,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "avroAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 318,
                "character": 21
              },
              "end": {
                "line": 320,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "avroAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "avroAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 318,
                "character": 21
              },
              "end": {
                "line": 320,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`avroAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "avroAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 318,
                "character": 21
              },
              "end": {
                "line": 320,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`avroAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "avroAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 318,
                "character": 21
              },
              "end": {
                "line": 320,
                "character": 23
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "asyncapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 321,
                "character": 25
              },
              "end": {
                "line": 323,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "asyncapiAPICount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "asyncapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 321,
                "character": 25
              },
              "end": {
                "line": 323,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`asyncapiAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "asyncapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 321,
                "character": 25
              },
              "end": {
                "line": 323,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`asyncapiAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "asyncapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 321,
                "character": 25
              },
              "end": {
                "line": 323,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiHasReadmeCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasReadmeCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 324,
                "character": 26
              },
              "end": {
                "line": 326,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apiHasReadmeCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasReadmeCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 324,
                "character": 26
              },
              "end": {
                "line": 326,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`apiHasReadmeCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasReadmeCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 324,
                "character": 26
              },
              "end": {
                "line": 326,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiHasSummaryCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasSummaryCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 327,
                "character": 27
              },
              "end": {
                "line": 329,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apiHasSummaryCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasSummaryCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 327,
                "character": 27
              },
              "end": {
                "line": 329,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`apiHasSummaryCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasSummaryCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 327,
                "character": 27
              },
              "end": {
                "line": 329,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "commentsCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 330,
                "character": 22
              },
              "end": {
                "line": 332,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`commentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 330,
                "character": 22
              },
              "end": {
                "line": 332,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`commentsCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 330,
                "character": 22
              },
              "end": {
                "line": 332,
                "character": 23
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apisWithCommentsCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 333,
                "character": 30
              },
              "end": {
                "line": 335,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apisWithCommentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 333,
                "character": 30
              },
              "end": {
                "line": 335,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`apisWithCommentsCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 333,
                "character": 30
              },
              "end": {
                "line": 335,
                "character": 23
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiComments.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiComments"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 336,
                "character": 16
              },
              "end": {
                "line": 364,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "verticalId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 341,
                "character": 19
              },
              "end": {
                "line": 343,
                "character": 76
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 341,
                "character": 19
              },
              "end": {
                "line": 343,
                "character": 76
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 341,
                "character": 19
              },
              "end": {
                "line": 343,
                "character": 76
              }
            }
          },
          {
            "code": "camel-case-for-properties",
            "message": "Property name has to be camelCase",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 344,
                "character": 27
              },
              "end": {
                "line": 346,
                "character": 131
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "bitbucketProjectID doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 344,
                "character": 27
              },
              "end": {
                "line": 346,
                "character": 131
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`bitbucketProjectID.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 344,
                "character": 27
              },
              "end": {
                "line": 346,
                "character": 131
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`bitbucketProjectID.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 344,
                "character": 27
              },
              "end": {
                "line": 346,
                "character": 131
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apiId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 347,
                "character": 14
              },
              "end": {
                "line": 349,
                "character": 67
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 347,
                "character": 14
              },
              "end": {
                "line": 349,
                "character": 67
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 347,
                "character": 14
              },
              "end": {
                "line": 349,
                "character": 67
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "commentsCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 350,
                "character": 22
              },
              "end": {
                "line": 354,
                "character": 55
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`commentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 350,
                "character": 22
              },
              "end": {
                "line": 354,
                "character": 55
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "commentsDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "commentsDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 355,
                "character": 21
              },
              "end": {
                "line": 358,
                "character": 54
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`SubApi.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "SubApi"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 365,
                "character": 11
              },
              "end": {
                "line": 383,
                "character": 18
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "name doesn't have an example",
            "path": [
              "components",
              "schemas",
              "SubApi",
              "properties",
              "name"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 369,
                "character": 13
              },
              "end": {
                "line": 370,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`name.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SubApi",
              "properties",
              "name"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 369,
                "character": 13
              },
              "end": {
                "line": 370,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`name.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SubApi",
              "properties",
              "name"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 369,
                "character": 13
              },
              "end": {
                "line": 370,
                "character": 22
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "protocol doesn't have an example",
            "path": [
              "components",
              "schemas",
              "SubApi",
              "properties",
              "protocol"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 371,
                "character": 17
              },
              "end": {
                "line": 380,
                "character": 18
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`VerticalActivity.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalActivity"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 384,
                "character": 21
              },
              "end": {
                "line": 414,
                "character": 31
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "verticalId doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 388,
                "character": 19
              },
              "end": {
                "line": 390,
                "character": 44
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 388,
                "character": 19
              },
              "end": {
                "line": 390,
                "character": 44
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 388,
                "character": 19
              },
              "end": {
                "line": 390,
                "character": 44
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "fromDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "fromDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 391,
                "character": 17
              },
              "end": {
                "line": 394,
                "character": 38
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "toDate doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "toDate"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 395,
                "character": 15
              },
              "end": {
                "line": 398,
                "character": 36
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apisCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "apisCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 399,
                "character": 18
              },
              "end": {
                "line": 403,
                "character": 52
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apisCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "apisCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 399,
                "character": 18
              },
              "end": {
                "line": 403,
                "character": 52
              }
            }
          },
          {
            "code": "ensure-properties-examples",
            "message": "apisWithCommentsCount doesn't have an example",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 404,
                "character": 30
              },
              "end": {
                "line": 408,
                "character": 83
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apisWithCommentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 404,
                "character": 30
              },
              "end": {
                "line": 408,
                "character": 83
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`VerticalsActivity.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalsActivity"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 415,
                "character": 22
              },
              "end": {
                "line": 434,
                "character": 19
              }
            }
          }
        ]
      }
    ],
    "securityValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "responses",
              "200",
              "content",
              "application/json",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 30,
                "character": 21
              },
              "end": {
                "line": 33,
                "character": 55
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 35,
                "character": 14
              },
              "end": {
                "line": 36,
                "character": 32
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 17
              },
              "end": {
                "line": 41,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 39,
                "character": 17
              },
              "end": {
                "line": 41,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 44,
                "character": 17
              },
              "end": {
                "line": 46,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/apis/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 44,
                "character": 17
              },
              "end": {
                "line": 46,
                "character": 25
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/apis/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 49,
                "character": 15
              },
              "end": {
                "line": 49,
                "character": 18
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 51,
                "character": 15
              },
              "end": {
                "line": 56,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 55,
                "character": 15
              },
              "end": {
                "line": 56,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 55,
                "character": 15
              },
              "end": {
                "line": 56,
                "character": 22
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 71,
                "character": 14
              },
              "end": {
                "line": 72,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [200].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "200"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 79,
                "character": 14
              },
              "end": {
                "line": 80,
                "character": 25
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 87,
                "character": 14
              },
              "end": {
                "line": 88,
                "character": 34
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [401].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "401"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 89,
                "character": 14
              },
              "end": {
                "line": 90,
                "character": 35
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [403].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "403"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 91,
                "character": 14
              },
              "end": {
                "line": 92,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 93,
                "character": 14
              },
              "end": {
                "line": 94,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [500].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/stats",
              "post",
              "responses",
              "500"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 95,
                "character": 14
              },
              "end": {
                "line": 96,
                "character": 44
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 103,
                "character": 15
              },
              "end": {
                "line": 108,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 107,
                "character": 15
              },
              "end": {
                "line": 108,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 107,
                "character": 15
              },
              "end": {
                "line": 108,
                "character": 22
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [400].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "400"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 126,
                "character": 14
              },
              "end": {
                "line": 127,
                "character": 34
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [401].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "401"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 128,
                "character": 14
              },
              "end": {
                "line": 129,
                "character": 35
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [403].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "403"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 130,
                "character": 14
              },
              "end": {
                "line": 131,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/apis/{apiId}/comments",
              "post",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 132,
                "character": 14
              },
              "end": {
                "line": 133,
                "character": 32
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 135,
                "character": 15
              },
              "end": {
                "line": 140,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 139,
                "character": 15
              },
              "end": {
                "line": 140,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 139,
                "character": 15
              },
              "end": {
                "line": 140,
                "character": 22
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/activity",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 167,
                "character": 14
              },
              "end": {
                "line": 168,
                "character": 32
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/verticals/activity",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 196,
                "character": 14
              },
              "end": {
                "line": 197,
                "character": 32
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "responses",
              "200",
              "content",
              "application/json",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 207,
                "character": 21
              },
              "end": {
                "line": 210,
                "character": 60
              }
            }
          },
          {
            "code": "response-schema-defined",
            "message": "Response [404].content should contain a body",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "responses",
              "404"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 212,
                "character": 14
              },
              "end": {
                "line": 213,
                "character": 32
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 218,
                "character": 17
              },
              "end": {
                "line": 220,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 218,
                "character": 17
              },
              "end": {
                "line": 220,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`schema.maximum` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 17
              },
              "end": {
                "line": 225,
                "character": 25
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`schema.minimum` property should be defined",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "get",
              "parameters",
              "1",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 223,
                "character": 17
              },
              "end": {
                "line": 225,
                "character": 25
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/verticals/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 228,
                "character": 15
              },
              "end": {
                "line": 228,
                "character": 18
              }
            }
          },
          {
            "code": "allowed-verbs",
            "message": "parameters does not equal to one of get,post,put,delete,patch",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "parameters"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 230,
                "character": 15
              },
              "end": {
                "line": 235,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`schema.maxLength` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 231,
                "character": 15
              },
              "end": {
                "line": 232,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`schema.pattern` property is not truthy",
            "path": [
              "paths",
              "/v2/verticals/{verticalId}/stats",
              "parameters",
              "0",
              "schema"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 231,
                "character": 15
              },
              "end": {
                "line": 232,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiStats.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiStats"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 261,
                "character": 13
              },
              "end": {
                "line": 293,
                "character": 15
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 276,
                "character": 14
              },
              "end": {
                "line": 277,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 276,
                "character": 14
              },
              "end": {
                "line": 277,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 278,
                "character": 19
              },
              "end": {
                "line": 279,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 278,
                "character": 19
              },
              "end": {
                "line": 279,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`bitbucketProjectID.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 286,
                "character": 27
              },
              "end": {
                "line": 287,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`bitbucketProjectID.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 286,
                "character": 27
              },
              "end": {
                "line": 287,
                "character": 22
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "ApiStats",
              "properties",
              "subapis"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 288,
                "character": 16
              },
              "end": {
                "line": 291,
                "character": 47
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`VerticalStats.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 294,
                "character": 18
              },
              "end": {
                "line": 335,
                "character": 23
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 298,
                "character": 19
              },
              "end": {
                "line": 299,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 298,
                "character": 19
              },
              "end": {
                "line": 299,
                "character": 22
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`totalAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "totalAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 300,
                "character": 22
              },
              "end": {
                "line": 302,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`totalAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "totalAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 300,
                "character": 22
              },
              "end": {
                "line": 302,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`openapiAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "openapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 303,
                "character": 24
              },
              "end": {
                "line": 305,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`openapiAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "openapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 303,
                "character": 24
              },
              "end": {
                "line": 305,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`swaggerAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "swaggerAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 306,
                "character": 24
              },
              "end": {
                "line": 308,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`swaggerAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "swaggerAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 306,
                "character": 24
              },
              "end": {
                "line": 308,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`graphqlAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "graphqlAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 309,
                "character": 24
              },
              "end": {
                "line": 311,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`graphqlAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "graphqlAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 309,
                "character": 24
              },
              "end": {
                "line": 311,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`soapAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "soapAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 21
              },
              "end": {
                "line": 314,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`soapAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "soapAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 312,
                "character": 21
              },
              "end": {
                "line": 314,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`grpcAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "grpcAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 315,
                "character": 21
              },
              "end": {
                "line": 317,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`grpcAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "grpcAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 315,
                "character": 21
              },
              "end": {
                "line": 317,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`avroAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "avroAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 318,
                "character": 21
              },
              "end": {
                "line": 320,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`avroAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "avroAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 318,
                "character": 21
              },
              "end": {
                "line": 320,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`asyncapiAPICount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "asyncapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 321,
                "character": 25
              },
              "end": {
                "line": 323,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`asyncapiAPICount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "asyncapiAPICount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 321,
                "character": 25
              },
              "end": {
                "line": 323,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apiHasReadmeCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasReadmeCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 324,
                "character": 26
              },
              "end": {
                "line": 326,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`apiHasReadmeCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasReadmeCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 324,
                "character": 26
              },
              "end": {
                "line": 326,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apiHasSummaryCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasSummaryCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 327,
                "character": 27
              },
              "end": {
                "line": 329,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`apiHasSummaryCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apiHasSummaryCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 327,
                "character": 27
              },
              "end": {
                "line": 329,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`commentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 330,
                "character": 22
              },
              "end": {
                "line": 332,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`commentsCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 330,
                "character": 22
              },
              "end": {
                "line": 332,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apisWithCommentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 333,
                "character": 30
              },
              "end": {
                "line": 335,
                "character": 23
              }
            }
          },
          {
            "code": "numeric-required-properties-min",
            "message": "`apisWithCommentsCount.minimum` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalStats",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 333,
                "character": 30
              },
              "end": {
                "line": 335,
                "character": 23
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`ApiComments.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "ApiComments"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 336,
                "character": 16
              },
              "end": {
                "line": 364,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 341,
                "character": 19
              },
              "end": {
                "line": 343,
                "character": 76
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 341,
                "character": 19
              },
              "end": {
                "line": 343,
                "character": 76
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`bitbucketProjectID.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 344,
                "character": 27
              },
              "end": {
                "line": 346,
                "character": 131
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`bitbucketProjectID.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "bitbucketProjectID"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 344,
                "character": 27
              },
              "end": {
                "line": 346,
                "character": 131
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`apiId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 347,
                "character": 14
              },
              "end": {
                "line": 349,
                "character": 67
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`apiId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "apiId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 347,
                "character": 14
              },
              "end": {
                "line": 349,
                "character": 67
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`commentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "ApiComments",
              "properties",
              "commentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 350,
                "character": 22
              },
              "end": {
                "line": 354,
                "character": 55
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`SubApi.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "SubApi"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 365,
                "character": 11
              },
              "end": {
                "line": 383,
                "character": 18
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`name.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SubApi",
              "properties",
              "name"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 369,
                "character": 13
              },
              "end": {
                "line": 370,
                "character": 22
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`name.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "SubApi",
              "properties",
              "name"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 369,
                "character": 13
              },
              "end": {
                "line": 370,
                "character": 22
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`VerticalActivity.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalActivity"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 384,
                "character": 21
              },
              "end": {
                "line": 414,
                "character": 31
              }
            }
          },
          {
            "code": "string-required-properties-length",
            "message": "`verticalId.maxLength` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 388,
                "character": 19
              },
              "end": {
                "line": 390,
                "character": 44
              }
            }
          },
          {
            "code": "string-required-properties-pattern",
            "message": "`verticalId.pattern` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "verticalId"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 388,
                "character": 19
              },
              "end": {
                "line": 390,
                "character": 44
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apisCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "apisCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 399,
                "character": 18
              },
              "end": {
                "line": 403,
                "character": 52
              }
            }
          },
          {
            "code": "numeric-required-properties-max",
            "message": "`apisWithCommentsCount.maximum` property is not truthy",
            "path": [
              "components",
              "schemas",
              "VerticalActivity",
              "properties",
              "apisWithCommentsCount"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 404,
                "character": 30
              },
              "end": {
                "line": 408,
                "character": 83
              }
            }
          },
          {
            "code": "no-additional-properties-defined",
            "message": "`VerticalsActivity.additionalProperties` property should be defined",
            "path": [
              "components",
              "schemas",
              "VerticalsActivity"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 415,
                "character": 22
              },
              "end": {
                "line": 434,
                "character": 19
              }
            }
          }
        ]
      }
    ],
    "documentationValidations": [],
    "lintingGrade": {
      "grade": "C",
      "description": "Adequate"
    },
    "securityGrade": {
      "grade": "B",
      "description": "Good"
    }
  },
  {
    "apiName": "API Certification",
    "apiProtocol": "REST",
    "apiVersion": "1.0.0",
    "pipelineVersion": "v2",
    "lintValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "oas3-unused-components-schema",
            "message": "Potentially unused components schema has been detected.",
            "path": [
              "components",
              "schemas",
              "rulesetBinary"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 487,
                "character": 18
              },
              "end": {
                "line": 491,
                "character": 41
              }
            }
          },
          {
            "code": "oas3-unused-components-schema",
            "message": "Potentially unused components schema has been detected.",
            "path": [
              "components",
              "schemas",
              "validationRequestFileURL"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 571,
                "character": 29
              },
              "end": {
                "line": 616,
                "character": 24
              }
            }
          },
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "arrayOfValidationResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 663,
                "character": 30
              },
              "end": {
                "line": 666,
                "character": 55
              }
            }
          }
        ]
      }
    ],
    "securityValidations": [
      {
        "file": "openapi-rest.yml",
        "result": [
          {
            "code": "array-required-properties",
            "message": "Schema of type array must specify maxItems",
            "path": [
              "components",
              "schemas",
              "arrayOfValidationResponse"
            ],
            "severity": 1,
            "range": {
              "start": {
                "line": 663,
                "character": 30
              },
              "end": {
                "line": 666,
                "character": 55
              }
            }
          }
        ]
      }
    ],
    "documentationValidations": [],
    "lintingGrade": {
      "grade": "A",
      "description": "Very Good"
    },
    "securityGrade": {
      "grade": "A",
      "description": "Very Good"
    }
  }
]